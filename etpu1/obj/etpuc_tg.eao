// assembly code generated from source file etpuc_tg.c

.file "..\..\src\etpuc_tg.c";
.producer ETEC_cc;
.version 3, 0, A;
.target ETPU1;
.compdir "C:\GIT\ASHWARE\Tests\Drivers\EnhancedEngineControl\src\";

.regisgp TPR, 0;
.regisgp TRR, 0;
.regisgp TCR1, 0;
.regisgp TCR2, 0;

.file "..\..\src\etpuc_tg.c";
.file "C:\\GIT\\ASHWARE\\Builds\\Include\\etpu_std.h";
.file "C:\\GIT\\ASHWARE\\Builds\\Include\\ETpu_Hw.h";
.def register_a; .scl 13; .type 0x4; .endef;
.def register_ac; .scl 13; .type 0x4; .endef;
.def registera; .scl 13; .type 0x4; .endef;
.def register_b; .scl 13; .type 0x4; .endef;
.def register_c; .scl 13; .type 0x4; .endef;
.def register_d; .scl 13; .type 0x4; .endef;
.def register_chan; .scl 13; .type 0xc; .endef;
.def register_diob; .scl 13; .type 0x4; .endef;
.def register_erta; .scl 13; .type 0x4; .endef;
.def register_ertb; .scl 13; .type 0x4; .endef;
.def register_link; .scl 13; .type 0xc; .endef;
.def register_mach; .scl 13; .type 0x4; .endef;
.def register_macl; .scl 13; .type 0x4; .endef;
.def register_p; .scl 13; .type 0x4; .endef;
.def register_p23_0; .scl 13; .type 0x4; .endef;
.def register_rar; .scl 13; .type 0x4; .endef;
.def register_sr; .scl 13; .type 0x4; .endef;
.def register_tcr1; .scl 13; .type 0x4; .endef;
.def register_tcr2; .scl 13; .type 0x4; .endef;
.def register_tpr; .scl 13; .type 0xd; .endef;
.def register_trr; .scl 13; .type 0x4; .endef;
.def register_chan_base; .scl 13; .type 0xe; .endef;
.def register_engine_base; .scl 13; .type 0xe; .endef;
.def register_p31_24; .scl 13; .type 0x2; .endef;
.def register_p23_16; .scl 13; .type 0x2; .endef;
.def register_p15_8; .scl 13; .type 0x2; .endef;
.def register_p7_0; .scl 13; .type 0x2; .endef;
.def register_p31_16; .scl 13; .type 0x3; .endef;
.def register_p15_0; .scl 13; .type 0x3; .endef;
.def register_p31_0; .scl 13; .type 0x5; .endef;
.def register_cc; .scl 13; .tag cc_struct; .type 0x0; .endef;

.def tpr_struct; .scl 10; .type 0x8; .size 2; .endef;
.def TICKS; .val 0x6; .scl 18; .size 10; .type 0xd; .endef;
.def TPR10; .val 0x5; .scl 18; .size 1; .type 0xd; .endef;
.def HOLD; .val 0x4; .scl 18; .size 1; .type 0xd; .endef;
.def IPH; .val 0x3; .scl 18; .size 1; .type 0xd; .endef;
.def MISSCNT; .val 0x1; .scl 18; .size 2; .type 0xd; .endef;
.def LAST; .val 0x0; .scl 18; .size 1; .type 0xd; .endef;
.def; .eos; .scl 102; .endef;

.file "C:\\GIT\\ASHWARE\\Builds\\Include\\etpu_std.h";
.file "C:\\GIT\\ASHWARE\\Builds\\Include\\ETpu_Lib.h";
.file "C:\\GIT\\ASHWARE\\Builds\\Include\\etpu_std.h";
.file "..\..\src\etpuc_tg.c";
.file "..\..\src\etpuc_tg.h";
.line 73;
.def TG; .scl 201; .type 0x80000006; .size 28; .endef;
.line 56;
.def _TG_AW613E_INIT_; .val 0xffffffff; .scl 5; .etpuclass TG; .type 0x80000022; .endef;
.line 57;
.def _TG_AW613E_FIRST_EDGE_; .val 0xffffffff; .scl 5; .etpuclass TG; .type 0x80000022; .endef;
.line 58;
.def _TG_AW613E_SECOND_EDGE_; .val 0xffffffff; .scl 5; .etpuclass TG; .type 0x80000022; .endef;

.file "..\..\src\etpuc_tg.c";
.file "..\..\src\etpuc_set.h";
.file "..\..\src\etpuc_tg.c";
.line 303;
.pragmawrite h, (::ETPUfilename (cpu/etpu_tg_auto.h));
.line 304;
.pragmawrite h, (/**************************************************************** );
.line 305;
.pragmawrite h, (* WARNING: This file is automatically generated. DO NOT EDIT IT! );
.line 306;
.pragmawrite h, (*);
.line 307;
.pragmawrite h, (* FILE NAME: etpu_tg_auto.h  );
.line 309;
.pragmawrite h, (* ARCHITECTURE: eTPU );
.line 313;
.pragmawrite h, (*);
.line 314;
.pragmawrite h, (* This file was generated by: "etpuc_tg.c" on "Jan 12 2022", "17:19:33" );
.line 315;
.pragmawrite h, (*);
.line 316;
.pragmawrite h, (* This file provides an interface between eTPU code and CPU       );
.line 317;
.pragmawrite h, (* code. All references to the eTPU function should be made with   );
.line 318;
.pragmawrite h, (* information in this file. This allows only symbolic             );
.line 319;
.pragmawrite h, (* information to be referenced which allows the eTPU code to be   );
.line 320;
.pragmawrite h, (* optimized without effecting the CPU code.                       );
.line 321;
.pragmawrite h, (*****************************************************************/);
.line 322;
.pragmawrite h, (#ifndef _ETPU_TG_AUTO_H_ );
.line 323;
.pragmawrite h, (#define _ETPU_TG_AUTO_H_ );
.line 324;
.pragmawrite h, ( );
.line 325;
.pragmawrite h, (/* Function Configuration Information */);
.line 326;
.pragmawrite h, (::ETPUliteral(#define FS_ETPU_TG_FUNCTION_NUMBER) ::ETPUfunctionnumber(TG) );
.line 327;
.pragmawrite h, (::ETPUliteral(#define FS_ETPU_TG_TABLE_SELECT) ::ETPUentrytype(TG) );
.line 328;
.pragmawrite h, (::ETPUliteral(#define FS_ETPU_TG_NUM_PARMS) ::ETPUram(TG) );
.line 329;
.pragmawrite h, ( );
.line 330;
.pragmawrite h, (/* Host Service Request Definitions */);
.line 331;
.pragmawrite h, (::ETPUliteral(#define FS_ETPU_TG_HSR_INIT)         7 );
.line 332;
.pragmawrite h, ( );
.line 333;
.pragmawrite h, (/* Function Mode Bit Definitions */);
.line 334;
.pragmawrite h, (::ETPUliteral(#define FS_ETPU_TG_FM0_POLARITY_LOW)  0 );
.line 335;
.pragmawrite h, (::ETPUliteral(#define FS_ETPU_TG_FM0_POLARITY_HIGH) 1 );
.line 336;
.pragmawrite h, (::ETPUliteral(#define FS_ETPU_TG_FM1_CRANK)         (0 << 1) );
.line 337;
.pragmawrite h, (::ETPUliteral(#define FS_ETPU_TG_FM1_CAM)           (1 << 1) );
.line 338;
.pragmawrite h, ( );
.line 339;
.pragmawrite h, (/* Parameter Definitions */);
.line 340;
.pragmawrite h, (::ETPUliteral(#define FS_ETPU_TG_OFFSET_TOOTH_TCR1_TIME    ) ::ETPUlocation (TG, tooth_tcr1_time    ) );
.line 341;
.pragmawrite h, (::ETPUliteral(#define FS_ETPU_TG_OFFSET_TOOTH_PERIOD_ACTUAL) ::ETPUlocation (TG, tooth_period_actual) );
.line 342;
.pragmawrite h, (::ETPUliteral(#define FS_ETPU_TG_OFFSET_TOOTH_PERIOD_TARGET) ::ETPUlocation (TG, tooth_period_target) );
.line 343;
.pragmawrite h, (::ETPUliteral(#define FS_ETPU_TG_OFFSET_ACCEL_RATIO        ) ::ETPUlocation (TG, accel_ratio        ) );
.line 344;
.pragmawrite h, (::ETPUliteral(#define FS_ETPU_TG_OFFSET_P_CAM_TOOTH_FIRST  ) ::ETPUlocation (TG, p_cam_tooth_first  ) );
.line 345;
.pragmawrite h, (::ETPUliteral(#define FS_ETPU_TG_OFFSET_P_CAM_TOOTH        ) ::ETPUlocation (TG, p_cam_tooth        ) );
.line 346;
.pragmawrite h, (::ETPUliteral(#define FS_ETPU_TG_OFFSET_TEETH_TILL_GAP     ) ::ETPUlocation (TG, teeth_till_gap     ) );
.line 347;
.pragmawrite h, (::ETPUliteral(#define FS_ETPU_TG_OFFSET_TEETH_IN_GAP       ) ::ETPUlocation (TG, teeth_in_gap       ) );
.line 348;
.pragmawrite h, (::ETPUliteral(#define FS_ETPU_TG_OFFSET_TEETH_PER_CYCLE    ) ::ETPUlocation (TG, teeth_per_cycle    ) );
.line 349;
.pragmawrite h, (::ETPUliteral(#define FS_ETPU_TG_OFFSET_TOOTH_COUNTER_GAP  ) ::ETPUlocation (TG, tooth_counter_gap  ) );
.line 350;
.pragmawrite h, (::ETPUliteral(#define FS_ETPU_TG_OFFSET_TOOTH_COUNTER_CYCLE) ::ETPUlocation (TG, tooth_counter_cycle) );
.line 351;
.pragmawrite h, (::ETPUliteral(#define FS_ETPU_TG_OFFSET_CAM_CHAN           ) ::ETPUlocation (TG, cam_chan           ) );
.line 352;
.pragmawrite h, (::ETPUliteral(#define FS_ETPU_TG_OFFSET_GENERATION_DISABLE ) ::ETPUlocation (TG, generation_disable ) );
.line 353;
.pragmawrite h, ( );
.line 354;
.pragmawrite h, (/* Generation Disable Definitions */);
.line 355;
.pragmawrite h, (::ETPUliteral(#define FS_ETPU_TG_GENERATION_ALLOWED)         0);
.line 356;
.pragmawrite h, (::ETPUliteral(#define FS_ETPU_TG_GENERATION_DISABLED)        1);
.line 357;
.pragmawrite h, ( );
.line 358;
.pragmawrite h, (#endif );
.file "..\..\src\etpuc_tg.h";
.line 37;
.def _TG_AW613E_tooth_tcr1_time_; .val 0x1; .scl 3; .etpuclass TG; .type 0xe; .endef;
.line 38;
.def _TG_AW613E_tooth_period_actual_; .val 0x5; .scl 3; .etpuclass TG; .type 0x4; .endef;
.line 39;
.def _TG_AW613E_tooth_period_target_; .val 0x9; .scl 3; .etpuclass TG; .type 0x4; .const 0x1; .endef;
.line 40;
.def _TG_AW613E_accel_ratio_; .val 0xd; .scl 3; .etpuclass TG; .type 0x8000000f; .const 0x1; .endef;
.line 41;
.def _TG_AW613E_p_cam_tooth_first_; .val 0x11; .scl 3; .etpuclass TG; .type 0x1c; .const 0x1; .endef;
.line 42;
.def _TG_AW613E_p_cam_tooth_; .val 0x15; .scl 3; .etpuclass TG; .type 0x1c; .endef;
.line 43;
.def _TG_AW613E_teeth_till_gap_; .val 0x0; .scl 3; .etpuclass TG; .type 0xc; .const 0x1; .endef;
.line 44;
.def _TG_AW613E_teeth_in_gap_; .val 0x4; .scl 3; .etpuclass TG; .type 0x2; .const 0x1; .endef;
.line 45;
.def _TG_AW613E_teeth_per_cycle_; .val 0x8; .scl 3; .etpuclass TG; .type 0xc; .const 0x1; .endef;
.line 46;
.def _TG_AW613E_tooth_counter_gap_; .val 0xc; .scl 3; .etpuclass TG; .type 0xc; .endef;
.line 47;
.def _TG_AW613E_tooth_counter_cycle_; .val 0x10; .scl 3; .etpuclass TG; .type 0xc; .endef;
.line 48;
.def _TG_AW613E_cam_chan_; .val 0x14; .scl 3; .etpuclass TG; .type 0xc; .const 0x1; .endef;
.line 49;
.def _TG_AW613E_generation_disable_; .val 0x18; .scl 3; .etpuclass TG; .type 0xc; .const 0x1; .endef;
.line 72;
.defentry; .etpuclass TG; .ettable TG; .endentry;
.line 73;
.def _TG_AW613E___STACKBASE_; .val 0x19; .scl 3; .etpuclass TG; .type 0x4; .endef;
.file "..\..\src\etpuc_tg.c";
.file "C:\\GIT\\ASHWARE\\Builds\\Include\\ETpu_Hw.h";
.line 193;
.def chan; .val 0x28; .scl 4; .tag register_chan; .type 0x0; .endef;
.line 194;
.def ContextReg; .val 0x28; .scl 4; .tag register_chan; .type 0x0; .endef;
.line 195;
.def erta; .val 0x10; .scl 4; .tag register_erta; .type 0x0; .endef;
.line 196;
.def ertA; .val 0x10; .scl 4; .tag register_erta; .type 0x0; .endef;
.line 197;
.def ertb; .val 0x11; .scl 4; .tag register_ertb; .type 0x0; .endef;
.line 198;
.def ertB; .val 0x11; .scl 4; .tag register_ertb; .type 0x0; .endef;
.line 199;
.def tcr1; .val 0x20; .scl 4; .tag register_tcr1; .type 0x0; .endef;
.line 200;
.def tcr2; .val 0x21; .scl 4; .tag register_tcr2; .type 0x0; .endef;
.line 201;
.def tpr; .val 0x23; .scl 4; .tag register_tpr; .type 0x0; .endef;
.line 202;
.def trr; .val 0x22; .scl 4; .tag register_trr; .type 0x0; .endef;
.line 203;
.def link; .val 0x27; .scl 4; .tag register_link; .type 0x0; .endef;
.line 204;
.line 205;
.line 325;
.line 335;
.def tpr_reg; .val 0x23; .scl 4; .tag tpr_struct; .size 2; .type 0x8; .endef;
.line 336;
.def tpr_str; .val 0x23; .scl 4; .tag tpr_struct; .size 2; .type 0x8; .endef;
.file "C:\\GIT\\ASHWARE\\Builds\\Include\\ETpu_Lib.h";
.line 73;
.def _AtomicBegin; .val 0xffffffff; .scl 5; .type 0x21; .endef;
.line 74;
.def _AtomicEnd; .val 0xffffffff; .scl 5; .type 0x21; .endef;
.line 93;
.def _CoherentRead24_24; .val 0xffffffff; .scl 5; .type 0x21; .endef;
.line 94;
.def _CoherentRead24_8; .val 0xffffffff; .scl 5; .type 0x21; .endef;
.line 95;
.def _CoherentRead24_32; .val 0xffffffff; .scl 5; .type 0x21; .endef;
.line 99;
.def _CoherentWrite24_24; .val 0xffffffff; .scl 5; .type 0x21; .endef;
.line 100;
.def _CoherentWrite24_8; .val 0xffffffff; .scl 5; .type 0x21; .endef;
.line 101;
.def _CoherentWrite24_32; .val 0xffffffff; .scl 5; .type 0x21; .endef;
.line 120;
.def _OptimizationBoundaryAll; .val 0xffffffff; .scl 5; .type 0x21; .endef;
.line 126;
.def _OptimizationDisableStart; .val 0xffffffff; .scl 5; .type 0x21; .endef;
.line 127;
.def _OptimizationDisableEnd; .val 0xffffffff; .scl 5; .type 0x21; .endef;
.line 141;
.def _ExitThread; .val 0xffffffff; .scl 5; .type 0x21; .endef;
.line 157;
.def __rotate_right_1_b7_0; .val 0xffffffff; .scl 5; .type 0x24; .endef;
.line 161;
.def __rotate_right_1_b15_0; .val 0xffffffff; .scl 5; .type 0x24; .endef;
.line 165;
.def __rotate_right_1; .val 0xffffffff; .scl 5; .type 0x24; .endef;
.line 169;
.def __rotate_right_2n; .val 0xffffffff; .scl 5; .type 0x24; .endef;
.line 170;
.def __rotate_right_2n_sf8; .val 0xffffffff; .scl 5; .type 0x24; .endef;
.line 171;
.def __rotate_right_2n_sf16; .val 0xffffffff; .scl 5; .type 0x24; .endef;
.line 172;
.def __rotate_right_2n_sf24; .val 0xffffffff; .scl 5; .type 0x24; .endef;
.line 189;
.def __abs; .val 0xffffffff; .scl 5; .type 0x2e; .endef;
.line 190;
.def __abs_sf8; .val 0xffffffff; .scl 5; .type 0x2e; .endef;
.line 191;
.def __abs_sf16; .val 0xffffffff; .scl 5; .type 0x2e; .endef;
.line 192;
.def __abs_sf24; .val 0xffffffff; .scl 5; .type 0x2e; .endef;
.line 198;
.def __shift_right_SR; .val 0xffffffff; .scl 5; .type 0x21; .endef;
.line 203;
.def __shift_right_SR48; .val 0xffffffff; .scl 5; .type 0x24; .endef;
.line 204;
.def __shift_right_SR48_sf8; .val 0xffffffff; .scl 5; .type 0x24; .endef;
.line 205;
.def __shift_right_SR48_sf16; .val 0xffffffff; .scl 5; .type 0x24; .endef;
.line 206;
.def __shift_right_SR48_sf24; .val 0xffffffff; .scl 5; .type 0x24; .endef;
.line 214;
.def __shift_left_2n; .val 0xffffffff; .scl 5; .type 0x24; .endef;
.line 215;
.def __shift_left_2n_sf8; .val 0xffffffff; .scl 5; .type 0x24; .endef;
.line 216;
.def __shift_left_2n_sf16; .val 0xffffffff; .scl 5; .type 0x24; .endef;
.line 217;
.def __shift_left_2n_sf24; .val 0xffffffff; .scl 5; .type 0x24; .endef;
.line 218;
.def __shift_right_2n; .val 0xffffffff; .scl 5; .type 0x24; .endef;
.line 219;
.def __shift_right_2n_sf8; .val 0xffffffff; .scl 5; .type 0x24; .endef;
.line 220;
.def __shift_right_2n_sf16; .val 0xffffffff; .scl 5; .type 0x24; .endef;
.line 221;
.def __shift_right_2n_sf24; .val 0xffffffff; .scl 5; .type 0x24; .endef;
.line 230;
.def __bit_n_update; .val 0xffffffff; .scl 5; .type 0x24; .endef;
.line 231;
.def __bit_n_update_sf8; .val 0xffffffff; .scl 5; .type 0x24; .endef;
.line 232;
.def __bit_n_update_sf16; .val 0xffffffff; .scl 5; .type 0x24; .endef;
.line 233;
.def __bit_n_update_sf24; .val 0xffffffff; .scl 5; .type 0x24; .endef;
.line 242;
.def __bit_n_exchange_C; .val 0xffffffff; .scl 5; .type 0x24; .endef;
.line 243;
.def __bit_n_exchange_C_sf8; .val 0xffffffff; .scl 5; .type 0x24; .endef;
.line 244;
.def __bit_n_exchange_C_sf16; .val 0xffffffff; .scl 5; .type 0x24; .endef;
.line 245;
.def __bit_n_exchange_C_sf24; .val 0xffffffff; .scl 5; .type 0x24; .endef;
.line 256;
.def __mults8; .val 0xffffffff; .scl 5; .type 0x21; .endef;
.line 257;
.def __mults16; .val 0xffffffff; .scl 5; .type 0x21; .endef;
.line 258;
.def __mults24; .val 0xffffffff; .scl 5; .type 0x21; .endef;
.line 260;
.def __multu8; .val 0xffffffff; .scl 5; .type 0x21; .endef;
.line 261;
.def __multu16; .val 0xffffffff; .scl 5; .type 0x21; .endef;
.line 262;
.def __multu24; .val 0xffffffff; .scl 5; .type 0x21; .endef;
.line 265;
.def __macs; .val 0xffffffff; .scl 5; .type 0x21; .endef;
.line 268;
.def __macu; .val 0xffffffff; .scl 5; .type 0x21; .endef;
.line 271;
.def __fmults8; .val 0xffffffff; .scl 5; .type 0x21; .endef;
.line 274;
.def __fmults16; .val 0xffffffff; .scl 5; .type 0x21; .endef;
.line 277;
.def __fmultu8; .val 0xffffffff; .scl 5; .type 0x21; .endef;
.line 280;
.def __fmultu16; .val 0xffffffff; .scl 5; .type 0x21; .endef;
.line 283;
.def __divu8; .val 0xffffffff; .scl 5; .type 0x21; .endef;
.line 284;
.def __divu16; .val 0xffffffff; .scl 5; .type 0x21; .endef;
.line 285;
.def __divu24; .val 0xffffffff; .scl 5; .type 0x21; .endef;
.line 347;
.def mulir; .val 0xffffffff; .scl 5; .type 0x24; .endef;
.line 348;
.def muliur; .val 0xffffffff; .scl 5; .type 0x2e; .endef;
.line 352;
.def muli8r8; .val 0xffffffff; .scl 5; .type 0x22; .endef;
.line 353;
.def muli8ur8; .val 0xffffffff; .scl 5; .type 0x2c; .endef;
.line 354;
.def muli16r16; .val 0xffffffff; .scl 5; .type 0x23; .endef;
.line 355;
.def muli16ur16; .val 0xffffffff; .scl 5; .type 0x2d; .endef;
.line 356;
.def muli24r8; .val 0xffffffff; .scl 5; .type 0x24; .endef;
.line 357;
.def muli24ur8; .val 0xffffffff; .scl 5; .type 0x2e; .endef;
.line 358;
.def muli24r16; .val 0xffffffff; .scl 5; .type 0x24; .endef;
.line 359;
.def muli24ur16; .val 0xffffffff; .scl 5; .type 0x2e; .endef;
.line 361;
.def muli8r8u; .val 0xffffffff; .scl 5; .type 0x22; .endef;
.line 362;
.def muli16r16u; .val 0xffffffff; .scl 5; .type 0x23; .endef;
.line 381;
.def _Error_handler_entry; .val 0xffffffff; .scl 5; .type 0x80000022; .endef;
.line 382;
.def _Error_handler_unexpected_thread; .val 0xffffffff; .scl 5; .type 0x80000022; .endef;
.line 383;
.def _Error_handler_scm_off_weeds; .val 0xffffffff; .scl 5; .type 0x80000029; .endef;
.line 384;
.def _Error_handler_fill_weeds; .val 0xffffffff; .scl 5; .type 0x80000029; .endef;
.file "..\..\src\etpuc_set.h";
.line 31;
.def Link4; .val 0xffffffff; .scl 5; .type 0x21; .endef;
.file "..\..\src\etpuc_tg.c";

.line 86;
.def _TG_AW613E_INIT_; .val 0x0; .scl 2; .etpuclass TG; .type 0x80000022; .endef;
.def; .bf; .scl 101; .tag _TG_AW613E_INIT_; .endef;
.def _TG_AW613E_INIT_; .val 0xffffffff; .scl 200; .type 0xe; .endef;
.def; .bb; .scl 100; .tag __TG_AW613E_INIT__AW613E_SCOPEBLOCK_0_; .endef;

.line 90;
	// chan  DisableMatchTransitionServicing;;
.opstart 0xff7ffefb; .opend;

.line 92;
	// chan  clear MatchEnableLatches;;
.opstart 0x7ffffffd; .opend;

.line 94;
	// chan  clear TransitionDetectionLatches;;
.opstart 0x7fefffff; .opend;

.line 95;
	// chan  clear LinkServiceRequest;;
.opstart 0x4ffff7ff; .opend;

.line 96;
	// chan  clear MatchRecognitionLatchA;;
.opstart 0x7ffffeff; .opend;

.line 97;
	// chan  clear MatchRecognitionLatchB;;
.opstart 0x7fffffbf; .opend;

.line 101;
	// chan  mode = either match non blocking single transition;;
.opstart 0x4fffffe5; .opend;

.line 103;
	// chan  ActionUnitA: tcr1 >= match, capture tcr1;;
.opstart 0x4ff0ffff; .opend;

.line 104;
	// chan  ActionUnitB: tcr1 >= match, capture tcr1;;
.opstart 0x4fff0fff; .opend;

.line 106;
	// chan  detectA = off;;
.opstart 0x58ffffff; .opend;

.line 107;
	// chan  detectB = off;;
.opstart 0x5f1fffff; .opend;

.line 109;
	// seq  if FunctionMode0==true then goto INIT__AW613E_ELSE_IFELSE_0, flush;;
.opstart 0xf3d80007; .oplabel BAF_13_0_,StandardTest,__TG_AW613E_INIT__AW613E_ELSE_IFELSE_0_,0;  .opend;
.def __TG_AW613E_INIT__AW613E_THEN_IF_ELSE_0_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 110;
.def; .bb; .scl 100; .tag __TG_AW613E_INIT__AW613E_SCOPEBLOCK_1_; .endef;

.line 111;
	// chan  CurrentOutputPin = low;;
.opstart 0x7ffffdfe; .opend;

.line 112;
	// chan  FutureOutputPin high on matchA;;
.opstart 0x49ffffff; .opend;

.line 113;
	// chan  FutureOutputPin low on matchB;;
.opstart 0x4f5fffff; .opend;

.line 114;
.def; .eb; .scl 100; .tag __TG_AW613E_INIT__AW613E_SCOPEBLOCK_1_; .stackUsage 0; .scratchpadUsage 0; .endef;
	// seq  goto INIT__AW613E_END_IFELSE_0, flush;;
.opstart 0xf7d00007; .oplabel BAF_13_0_,StandardTest,__TG_AW613E_INIT__AW613E_END_IFELSE_0_,0;  .opend;
.def __TG_AW613E_INIT__AW613E_ELSE_IFELSE_0_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 116;
.def; .bb; .scl 100; .tag __TG_AW613E_INIT__AW613E_SCOPEBLOCK_2_; .endef;

.line 117;
	// chan  CurrentOutputPin = high;;
.opstart 0x7ffffbfe; .opend;

.line 118;
	// chan  FutureOutputPin low on matchA;;
.opstart 0x4affffff; .opend;

.line 119;
	// chan  FutureOutputPin high on matchB;;
.opstart 0x4f3fffff; .opend;

.line 120;
.def; .eb; .scl 100; .tag __TG_AW613E_INIT__AW613E_SCOPEBLOCK_2_; .stackUsage 0; .scratchpadUsage 0; .endef;
.def __TG_AW613E_INIT__AW613E_END_IFELSE_0_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 122;
	// chan  enable output buffer;;
.opstart 0x4ff8ffff; .opend;

.line 124;
	// seq  if FunctionMode1==true then goto INIT__AW613E_END_IFELSE_1, flush;;
.opstart 0xf3980007; .oplabel BAF_13_0_,StandardTest,__TG_AW613E_INIT__AW613E_END_IFELSE_1_,0;  .opend;
.def __TG_AW613E_INIT__AW613E_THEN_IF_ELSE_1_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 125;
.def; .bb; .scl 100; .tag __TG_AW613E_INIT__AW613E_SCOPEBLOCK_3_; .endef;

.line 128;
	// ram   p_23_0 = tooth_period_target;; // *((channel int24 *) 0x9;
.opstart 0xbfeffb82; .oplabel AID_6_0_,TG,_TG_AW613E_tooth_period_target_,0;  .opend;
	// alu    nil = ((u24) 0)-p, SampleFlags;;
.opstart 0x1c1ffeff; .opend;
	// seq  if LessThan==false then goto INIT__AW613E_THEN_IF_ELSE_2, flush;;
.opstart 0xf4900007; .oplabel BAF_13_0_,StandardTest,__TG_AW613E_INIT__AW613E_THEN_IF_ELSE_2_,0;  .opend;
.def __TG_AW613E_INIT__AW613E_LOGICAL_OR_OP1_FALSE_0_; .val 0xffffffff; .scl 200; .type 0xe; .endef;
	// ram   p_31_24 = generation_disable;; // *((channel int8 *) 0x18;
.opstart 0xcfeff986; .oplabel AID_6_0_,TG,_TG_AW613E_generation_disable_,0;  .opend;
	// alu    a = p_31_24+0x0;;
.opstart 0x00020419; .opend;
	// alu    nil = a ^ 0x1, SampleFlags;;
.opstart 0x0809fbaa; .opend;
	// seq  if z==true then goto INIT__AW613E_THEN_IF_ELSE_2, flush;;
.opstart 0xf0d80007; .oplabel BAF_13_0_,StandardTest,__TG_AW613E_INIT__AW613E_THEN_IF_ELSE_2_,0;  .opend;
	// seq  goto INIT__AW613E_END_IFELSE_2, flush;;
.opstart 0xf7d00007; .oplabel BAF_13_0_,StandardTest,__TG_AW613E_INIT__AW613E_END_IFELSE_2_,0;  .opend;
.def __TG_AW613E_INIT__AW613E_THEN_IF_ELSE_2_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 129;
.def; .bb; .scl 100; .tag __TG_AW613E_INIT__AW613E_SCOPEBLOCK_4_; .endef;

.line 130;
	// chan  FutureOutputPin no change on matchA;;
.opstart 0x48ffffff; .opend;

.line 131;
	// chan  FutureOutputPin no change on matchB;;
.opstart 0x4f1fffff; .opend;

.line 132;
.def; .eb; .scl 100; .tag __TG_AW613E_INIT__AW613E_SCOPEBLOCK_4_; .stackUsage 0; .scratchpadUsage 0; .endef;
.def __TG_AW613E_INIT__AW613E_END_IFELSE_2_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 134;
	// alu    a = ((u24) 0)+0x1;;
.opstart 0x00000428; .opend;
	// alu    p_31_24 = a+0x0;;
.opstart 0x0009a419; .opend;
	// ram   tooth_counter_cycle = p_31_24;; // *((channel int8 *) 0x10;
.opstart 0xcffff984; .oplabel AID_6_0_,TG,_TG_AW613E_tooth_counter_cycle_,0;  .opend;

.line 135;
	// alu    a = ((u24) 0)+0x1;;
.opstart 0x00000428; .opend;
	// alu    p_31_24 = a+0x0;;
.opstart 0x0009a419; .opend;
	// ram   tooth_counter_gap = p_31_24;; // *((channel int8 *) 0xC;
.opstart 0xcffff983; .oplabel AID_6_0_,TG,_TG_AW613E_tooth_counter_gap_,0;  .opend;

.line 136;
	// ram   p_23_0 = p_cam_tooth_first;; // *((channel int24 *) 0x11;
.opstart 0xbfeffb84; .oplabel AID_6_0_,TG,_TG_AW613E_p_cam_tooth_first_,0;  .opend;
	// ram   p_cam_tooth = p_23_0;; // *((channel int24 *) 0x15;
.opstart 0xbffffb85; .oplabel AID_6_0_,TG,_TG_AW613E_p_cam_tooth_,0;  .opend;

.line 137;
	// ram   diob = tooth_period_actual;; // *((channel int24 *) 0x5;
.opstart 0xbfefff81; .oplabel AID_6_0_,TG,_TG_AW613E_tooth_period_actual_,0;  .opend;
	// alu    a = tcr1+diob, SampleFlags;;
.opstart 0x1f7c0eff; .opend;
	// alu    p = a+0x0;;
.opstart 0x00097419; .opend;
	// ram   tooth_tcr1_time = p_23_0;; // *((channel int24 *) 0x1;
.opstart 0xbffffb80; .oplabel AID_6_0_,TG,_TG_AW613E_tooth_tcr1_time_,0;  .opend;

.line 140;
	// ram   p_23_0 = tooth_tcr1_time;; // *((channel int24 *) 0x1;
.opstart 0xbfeffb80; .oplabel AID_6_0_,TG,_TG_AW613E_tooth_tcr1_time_,0;  .opend;
	// alu    ertA = p+0x0;;
.opstart 0x00082419; .opend;

.line 141;
	// chan  matchA = ertA, set MatchEnableLatchA;;
.opstart 0x7fffff7f; .opend;

.line 144;
	// chan  EnableMatchTransitionServicing;;
.opstart 0xff3ffefb; .opend;

.line 145;
.def; .eb; .scl 100; .tag __TG_AW613E_INIT__AW613E_SCOPEBLOCK_3_; .stackUsage 0; .scratchpadUsage 0; .endef;
.def __TG_AW613E_INIT__AW613E_END_IFELSE_1_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 146;
.def; .eb; .scl 100; .tag __TG_AW613E_INIT__AW613E_SCOPEBLOCK_0_; .stackUsage 0; .scratchpadUsage 0; .endef;
.def __TG_AW613E_INIT__AW613E_FUNC_END_; .val 0xffffffff; .scl 200; .type 0xe; .endef;
	// seq   end;;
.opstart 0x0fffffff; .opend;
.def; .ef; .scl 101; .tag _TG_AW613E_INIT_; .endef;
.breakable;

.file "..\..\src\etpuc_tg.c";

.line 153;
.def _TG_AW613E_FIRST_EDGE_; .val 0x0; .scl 2; .etpuclass TG; .type 0x80000022; .endef;
.def; .bf; .scl 101; .tag _TG_AW613E_FIRST_EDGE_; .endef;
.def _TG_AW613E_FIRST_EDGE_; .val 0xffffffff; .scl 200; .type 0xe; .endef;
.def; .bb; .scl 100; .tag __TG_AW613E_FIRST_EDGE__AW613E_SCOPEBLOCK_5_; .endef;

.line 156;
	// ram   p_31_24 = tooth_counter_gap;; // *((channel int8 *) 0xC;
.opstart 0xcfeff983; .oplabel AID_6_0_,TG,_TG_AW613E_tooth_counter_gap_,0;  .opend;
	// alu    a = p_31_24+0x0;;
.opstart 0x00020419; .opend;
	// alu    a = a+0x1, SampleFlags;;
.opstart 0x00090039; .opend;
	// alu    p_31_24 = a+0x0;;
.opstart 0x0009a419; .opend;
	// ram   tooth_counter_gap = p_31_24;; // *((channel int8 *) 0xC;
.opstart 0xcffff983; .oplabel AID_6_0_,TG,_TG_AW613E_tooth_counter_gap_,0;  .opend;

.line 157;
	// ram   p_31_24 = teeth_in_gap;; // *((channel int8 *) 0x4;
.opstart 0xcfeff981; .oplabel AID_6_0_,TG,_TG_AW613E_teeth_in_gap_,0;  .opend;
	// alu    a = p_31_24+0x0;;
.opstart 0x00020419; .opend;
	// ram   p_31_24 = teeth_till_gap;; // *((channel int8 *) 0x0;
.opstart 0xcfeff980; .oplabel AID_6_0_,TG,_TG_AW613E_teeth_till_gap_,0;  .opend;
	// alu    sr = p_31_24+0x0;;
.opstart 0x00021419; .opend;
	// alu    a = sr+a, SampleFlags;;
.opstart 0x1f3a0eff; .opend;
	// ram   p_31_24 = tooth_counter_gap;; // *((channel int8 *) 0xC;
.opstart 0xcfeff983; .oplabel AID_6_0_,TG,_TG_AW613E_tooth_counter_gap_,0;  .opend;
	// alu    sr = p_31_24+0x0;;
.opstart 0x00021419; .opend;
	// alu    p_31_24 = a-sr, SampleFlags;;
.opstart 0x1c59aeff; .opend;
	// seq  if cFlag==false then goto FIRST_EDGE__AW613E_END_IFELSE_3, flush;;
.opstart 0xf0900007; .oplabel BAF_13_0_,StandardTest,__TG_AW613E_FIRST_EDGE__AW613E_END_IFELSE_3_,0;  .opend;
.def __TG_AW613E_FIRST_EDGE__AW613E_THEN_IF_ELSE_3_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 158;
.def; .bb; .scl 100; .tag __TG_AW613E_FIRST_EDGE__AW613E_SCOPEBLOCK_6_; .endef;

.line 160;
	// alu    a = ((u24) 0)+0x1;;
.opstart 0x00000428; .opend;
	// alu    p_31_24 = a+0x0;;
.opstart 0x0009a419; .opend;
	// ram   tooth_counter_gap = p_31_24;; // *((channel int8 *) 0xC;
.opstart 0xcffff983; .oplabel AID_6_0_,TG,_TG_AW613E_tooth_counter_gap_,0;  .opend;

.line 161;
	// chan  set SvcdChan ChannelIntr;;
.opstart 0xffff3ef9; .opend;

.line 162;
.def; .eb; .scl 100; .tag __TG_AW613E_FIRST_EDGE__AW613E_SCOPEBLOCK_6_; .stackUsage 0; .scratchpadUsage 0; .endef;
.def __TG_AW613E_FIRST_EDGE__AW613E_END_IFELSE_3_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 164;
	// ram   p_23_0 = tooth_period_target;; // *((channel int24 *) 0x9;
.opstart 0xbfeffb82; .oplabel AID_6_0_,TG,_TG_AW613E_tooth_period_target_,0;  .opend;
	// alu    nil = ((u24) 0)-p, SampleFlags;;
.opstart 0x1c1ffeff; .opend;
	// seq  if LessThan==false then goto FIRST_EDGE__AW613E_END_IFELSE_4, flush;;
.opstart 0xf4900007; .oplabel BAF_13_0_,StandardTest,__TG_AW613E_FIRST_EDGE__AW613E_END_IFELSE_4_,0;  .opend;
.def __TG_AW613E_FIRST_EDGE__AW613E_THEN_IF_ELSE_4_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 165;
.def; .bb; .scl 100; .tag __TG_AW613E_FIRST_EDGE__AW613E_SCOPEBLOCK_7_; .endef;

.line 166;
	// ram   diob = tooth_period_actual;; // *((channel int24 *) 0x5;
.opstart 0xbfefff81; .oplabel AID_6_0_,TG,_TG_AW613E_tooth_period_actual_,0;  .opend;
	// ram   p_23_0 = tooth_period_target;; // *((channel int24 *) 0x9;
.opstart 0xbfeffb82; .oplabel AID_6_0_,TG,_TG_AW613E_tooth_period_target_,0;  .opend;
	// alu    nil = p-diob, SampleFlags;;
.opstart 0x1c78feff; .opend;
	// seq  if LessThan==false then goto FIRST_EDGE__AW613E_END_IFELSE_5, flush;;
.opstart 0xf4900007; .oplabel BAF_13_0_,StandardTest,__TG_AW613E_FIRST_EDGE__AW613E_END_IFELSE_5_,0;  .opend;
.def __TG_AW613E_FIRST_EDGE__AW613E_THEN_IF_ELSE_5_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 167;
.def; .bb; .scl 100; .tag __TG_AW613E_FIRST_EDGE__AW613E_SCOPEBLOCK_8_; .endef;

.line 168;
	// ram   diob = tooth_period_actual;; // *((channel int24 *) 0x5;
.opstart 0xbfefff81; .oplabel AID_6_0_,TG,_TG_AW613E_tooth_period_actual_,0;  .opend;
	// ram   p_23_0 = tooth_period_target;; // *((channel int24 *) 0x9;
.opstart 0xbfeffb82; .oplabel AID_6_0_,TG,_TG_AW613E_tooth_period_target_,0;  .opend;
	// alu    a = diob-p, SampleFlags;;
.opstart 0x1c1b0eff; .opend;
	// ram   diob = accel_ratio;; // *((channel int24 *) 0xD;
.opstart 0xbfefff83; .oplabel AID_6_0_,TG,_TG_AW613E_accel_ratio_,0;  .opend;
	// alu    mac = a * ((u24) diob);;
.opstart 0x2f79ffe9; .opend;
.def __TG_AW613E_FIRST_EDGE__AW613E___MAC_WAIT_0_; .val 0xffffffff; .scl 200; .type 0xe; .endef;
	// seq  if MacBusy==true then goto FIRST_EDGE__AW613E___MAC_WAIT_0, flush;;
.opstart 0xf3580007; .oplabel BAF_13_0_,StandardTest,__TG_AW613E_FIRST_EDGE__AW613E___MAC_WAIT_0_,0;  .opend;
	// alu    a = mach+0x0;;
.opstart 0x00070409; .opend;
	// alu    a = a+0x1, SampleFlags;;
.opstart 0x00090039; .opend;
	// ram   diob = tooth_period_actual;; // *((channel int24 *) 0x5;
.opstart 0xbfefff81; .oplabel AID_6_0_,TG,_TG_AW613E_tooth_period_actual_,0;  .opend;
	// alu    a = diob-a, SampleFlags;;
.opstart 0x1c3b0eff; .opend;
	// alu    diob = a+0x0;;
.opstart 0x00094419; .opend;
	// ram   tooth_period_actual = diob;; // *((channel int24 *) 0x5;
.opstart 0xbfffff81; .oplabel AID_6_0_,TG,_TG_AW613E_tooth_period_actual_,0;  .opend;

.line 169;
.def; .eb; .scl 100; .tag __TG_AW613E_FIRST_EDGE__AW613E_SCOPEBLOCK_8_; .stackUsage 0; .scratchpadUsage 0; .endef;
.def __TG_AW613E_FIRST_EDGE__AW613E_END_IFELSE_5_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 170;
	// ram   diob = tooth_period_actual;; // *((channel int24 *) 0x5;
.opstart 0xbfefff81; .oplabel AID_6_0_,TG,_TG_AW613E_tooth_period_actual_,0;  .opend;
	// ram   p_23_0 = tooth_period_target;; // *((channel int24 *) 0x9;
.opstart 0xbfeffb82; .oplabel AID_6_0_,TG,_TG_AW613E_tooth_period_target_,0;  .opend;
	// alu    nil = diob-p, SampleFlags;;
.opstart 0x1c1bfeff; .opend;
	// seq  if LessThan==false then goto FIRST_EDGE__AW613E_END_IFELSE_6, flush;;
.opstart 0xf4900007; .oplabel BAF_13_0_,StandardTest,__TG_AW613E_FIRST_EDGE__AW613E_END_IFELSE_6_,0;  .opend;
.def __TG_AW613E_FIRST_EDGE__AW613E_THEN_IF_ELSE_6_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 171;
.def; .bb; .scl 100; .tag __TG_AW613E_FIRST_EDGE__AW613E_SCOPEBLOCK_9_; .endef;

.line 172;
	// ram   p_23_0 = tooth_period_target;; // *((channel int24 *) 0x9;
.opstart 0xbfeffb82; .oplabel AID_6_0_,TG,_TG_AW613E_tooth_period_target_,0;  .opend;
	// ram   diob = tooth_period_actual;; // *((channel int24 *) 0x5;
.opstart 0xbfefff81; .oplabel AID_6_0_,TG,_TG_AW613E_tooth_period_actual_,0;  .opend;
	// alu    a = p-diob, SampleFlags;;
.opstart 0x1c780eff; .opend;
	// ram   diob = accel_ratio;; // *((channel int24 *) 0xD;
.opstart 0xbfefff83; .oplabel AID_6_0_,TG,_TG_AW613E_accel_ratio_,0;  .opend;
	// alu    mac = a * ((u24) diob);;
.opstart 0x2f79ffe9; .opend;
.def __TG_AW613E_FIRST_EDGE__AW613E___MAC_WAIT_1_; .val 0xffffffff; .scl 200; .type 0xe; .endef;
	// seq  if MacBusy==true then goto FIRST_EDGE__AW613E___MAC_WAIT_1, flush;;
.opstart 0xf3580007; .oplabel BAF_13_0_,StandardTest,__TG_AW613E_FIRST_EDGE__AW613E___MAC_WAIT_1_,0;  .opend;
	// alu    a = mach+0x0;;
.opstart 0x00070409; .opend;
	// alu    a = a+0x1, SampleFlags;;
.opstart 0x00090039; .opend;
	// ram   diob = tooth_period_actual;; // *((channel int24 *) 0x5;
.opstart 0xbfefff81; .oplabel AID_6_0_,TG,_TG_AW613E_tooth_period_actual_,0;  .opend;
	// alu    a = diob+a, SampleFlags;;
.opstart 0x1f3b0eff; .opend;
	// alu    diob = a+0x0;;
.opstart 0x00094419; .opend;
	// ram   tooth_period_actual = diob;; // *((channel int24 *) 0x5;
.opstart 0xbfffff81; .oplabel AID_6_0_,TG,_TG_AW613E_tooth_period_actual_,0;  .opend;

.line 173;
.def; .eb; .scl 100; .tag __TG_AW613E_FIRST_EDGE__AW613E_SCOPEBLOCK_9_; .stackUsage 0; .scratchpadUsage 0; .endef;
.def __TG_AW613E_FIRST_EDGE__AW613E_END_IFELSE_6_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 174;
.def; .eb; .scl 100; .tag __TG_AW613E_FIRST_EDGE__AW613E_SCOPEBLOCK_7_; .stackUsage 0; .scratchpadUsage 0; .endef;
.def __TG_AW613E_FIRST_EDGE__AW613E_END_IFELSE_4_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 177;
	// ram   p_23_0 = tooth_period_target;; // *((channel int24 *) 0x9;
.opstart 0xbfeffb82; .oplabel AID_6_0_,TG,_TG_AW613E_tooth_period_target_,0;  .opend;
	// alu    nil = ((u24) 0)-p, SampleFlags;;
.opstart 0x1c1ffeff; .opend;
	// seq  if LessThan==false then goto FIRST_EDGE__AW613E_THEN_IF_ELSE_7, flush;;
.opstart 0xf4900007; .oplabel BAF_13_0_,StandardTest,__TG_AW613E_FIRST_EDGE__AW613E_THEN_IF_ELSE_7_,0;  .opend;
.def __TG_AW613E_FIRST_EDGE__AW613E_LOGICAL_OR_OP1_FALSE_1_; .val 0xffffffff; .scl 200; .type 0xe; .endef;
	// ram   p_31_24 = generation_disable;; // *((channel int8 *) 0x18;
.opstart 0xcfeff986; .oplabel AID_6_0_,TG,_TG_AW613E_generation_disable_,0;  .opend;
	// alu    a = p_31_24+0x0;;
.opstart 0x00020419; .opend;
	// alu    nil = a ^ 0x1, SampleFlags;;
.opstart 0x0809fbaa; .opend;
	// seq  if z==true then goto FIRST_EDGE__AW613E_THEN_IF_ELSE_7, flush;;
.opstart 0xf0d80007; .oplabel BAF_13_0_,StandardTest,__TG_AW613E_FIRST_EDGE__AW613E_THEN_IF_ELSE_7_,0;  .opend;
	// seq  goto FIRST_EDGE__AW613E_ELSE_IFELSE_7, flush;;
.opstart 0xf7d00007; .oplabel BAF_13_0_,StandardTest,__TG_AW613E_FIRST_EDGE__AW613E_ELSE_IFELSE_7_,0;  .opend;
.def __TG_AW613E_FIRST_EDGE__AW613E_THEN_IF_ELSE_7_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 178;
.def; .bb; .scl 100; .tag __TG_AW613E_FIRST_EDGE__AW613E_SCOPEBLOCK_10_; .endef;

.line 179;
	// chan  FutureOutputPin no change on matchA;;
.opstart 0x48ffffff; .opend;

.line 180;
	// chan  FutureOutputPin no change on matchB;;
.opstart 0x4f1fffff; .opend;

.line 181;
.def; .eb; .scl 100; .tag __TG_AW613E_FIRST_EDGE__AW613E_SCOPEBLOCK_10_; .stackUsage 0; .scratchpadUsage 0; .endef;
	// seq  goto FIRST_EDGE__AW613E_END_IFELSE_7, flush;;
.opstart 0xf7d00007; .oplabel BAF_13_0_,StandardTest,__TG_AW613E_FIRST_EDGE__AW613E_END_IFELSE_7_,0;  .opend;
.def __TG_AW613E_FIRST_EDGE__AW613E_ELSE_IFELSE_7_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 183;
.def; .bb; .scl 100; .tag __TG_AW613E_FIRST_EDGE__AW613E_SCOPEBLOCK_11_; .endef;

.line 184;
	// seq  if FunctionMode0==true then goto FIRST_EDGE__AW613E_ELSE_IFELSE_8, flush;;
.opstart 0xf3d80007; .oplabel BAF_13_0_,StandardTest,__TG_AW613E_FIRST_EDGE__AW613E_ELSE_IFELSE_8_,0;  .opend;
.def __TG_AW613E_FIRST_EDGE__AW613E_THEN_IF_ELSE_8_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 185;
.def; .bb; .scl 100; .tag __TG_AW613E_FIRST_EDGE__AW613E_SCOPEBLOCK_12_; .endef;

.line 186;
	// chan  FutureOutputPin high on matchA;;
.opstart 0x49ffffff; .opend;

.line 187;
	// chan  FutureOutputPin low on matchB;;
.opstart 0x4f5fffff; .opend;

.line 188;
.def; .eb; .scl 100; .tag __TG_AW613E_FIRST_EDGE__AW613E_SCOPEBLOCK_12_; .stackUsage 0; .scratchpadUsage 0; .endef;
	// seq  goto FIRST_EDGE__AW613E_END_IFELSE_8, flush;;
.opstart 0xf7d00007; .oplabel BAF_13_0_,StandardTest,__TG_AW613E_FIRST_EDGE__AW613E_END_IFELSE_8_,0;  .opend;
.def __TG_AW613E_FIRST_EDGE__AW613E_ELSE_IFELSE_8_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 190;
.def; .bb; .scl 100; .tag __TG_AW613E_FIRST_EDGE__AW613E_SCOPEBLOCK_13_; .endef;

.line 191;
	// chan  FutureOutputPin low on matchA;;
.opstart 0x4affffff; .opend;

.line 192;
	// chan  FutureOutputPin high on matchB;;
.opstart 0x4f3fffff; .opend;

.line 193;
.def; .eb; .scl 100; .tag __TG_AW613E_FIRST_EDGE__AW613E_SCOPEBLOCK_13_; .stackUsage 0; .scratchpadUsage 0; .endef;
.def __TG_AW613E_FIRST_EDGE__AW613E_END_IFELSE_8_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 194;
.def; .eb; .scl 100; .tag __TG_AW613E_FIRST_EDGE__AW613E_SCOPEBLOCK_11_; .stackUsage 0; .scratchpadUsage 0; .endef;
.def __TG_AW613E_FIRST_EDGE__AW613E_END_IFELSE_7_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 197;
	// ram   diob = tooth_period_actual;; // *((channel int24 *) 0x5;
.opstart 0xbfefff81; .oplabel AID_6_0_,TG,_TG_AW613E_tooth_period_actual_,0;  .opend;
	// ram   p_23_0 = tooth_tcr1_time;; // *((channel int24 *) 0x1;
.opstart 0xbfeffb80; .oplabel AID_6_0_,TG,_TG_AW613E_tooth_tcr1_time_,0;  .opend;
	// alu    a = p+diob, SampleFlags;;
.opstart 0x1f780eff; .opend;
	// alu    ertA = a+0x0;;
.opstart 0x00092419; .opend;

.line 198;
	// alu    p = ertA+0x0;;
.opstart 0x000e7419; .opend;
	// ram   tooth_tcr1_time = p_23_0;; // *((channel int24 *) 0x1;
.opstart 0xbffffb80; .oplabel AID_6_0_,TG,_TG_AW613E_tooth_tcr1_time_,0;  .opend;

.line 199;
	// ram   diob = tooth_period_actual;; // *((channel int24 *) 0x5;
.opstart 0xbfefff81; .oplabel AID_6_0_,TG,_TG_AW613E_tooth_period_actual_,0;  .opend;
	// alu    a = (diob+0x0) >> 1, SampleFlags;;
.opstart 0x180b0792; .opend;
	// alu    a = ertA-a, SampleFlags;;
.opstart 0x1c3e0eff; .opend;
	// alu    ertB = a+0x0;;
.opstart 0x00093419; .opend;

.line 200;
	// chan  clear MatchRecognitionLatchA;;
.opstart 0x7ffffeff; .opend;

.line 201;
	// chan  matchA = ertA, set MatchEnableLatchA;;
.opstart 0x7fffff7f; .opend;

.line 202;
	// chan  clear MatchRecognitionLatchB;;
.opstart 0x7fffffbf; .opend;

.line 203;
	// chan  matchB = ertB, set MatchEnableLatchB;;
.opstart 0x7fffffdf; .opend;

.line 206;
	// ram   diob = p_cam_tooth;; // *((channel int24 *) 0x15;
.opstart 0xbfefff85; .oplabel AID_6_0_,TG,_TG_AW613E_p_cam_tooth_,0;  .opend;
	// alu    a = diob+0x0;;
.opstart 0x000b0419; .opend;
	// alu    diob = a+0x0;;
.opstart 0x00094419; .opend;
	// ram   p_31_0 = *((int32 *) diob);;
.opstart 0xffeff8d9; .opend;
	// alu    a = diob & 0x3;;
.opstart 0x0c0b0bfa; .opend;
	// alu    nil = (a+0x0) >> 1, SampleFlags;;
.opstart 0x1809f792; .opend;
	// alu    if  z then p_15_0 = p_31_16+0x0;;
.opstart 0x1c065602; .opend;
	// alu    if !cFlag then p_7_0 = p_15_8+0x0;;
.opstart 0x1c01d582; .opend;
	// alu    p = p_7_0+0x0;;
.opstart 0x00007419; .opend;
	// alu    a = p+0x0;;
.opstart 0x00080419; .opend;
	// ram   p_31_24 = tooth_counter_cycle;; // *((channel int8 *) 0x10;
.opstart 0xcfeff984; .oplabel AID_6_0_,TG,_TG_AW613E_tooth_counter_cycle_,0;  .opend;
	// alu    sr = p_31_24+0x0;;
.opstart 0x00021419; .opend;
	// alu    p_31_24 = sr-a, SampleFlags;;
.opstart 0x1c3aaeff; .opend;
	// seq  if z==false then goto FIRST_EDGE__AW613E_END_IFELSE_9, flush;;
.opstart 0xf0d00007; .oplabel BAF_13_0_,StandardTest,__TG_AW613E_FIRST_EDGE__AW613E_END_IFELSE_9_,0;  .opend;
.def __TG_AW613E_FIRST_EDGE__AW613E_THEN_IF_ELSE_9_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 207;
.def; .bb; .scl 100; .tag __TG_AW613E_FIRST_EDGE__AW613E_SCOPEBLOCK_14_; .endef;

.line 208;
	// ram   p_23_0 = p_cam_tooth;; // *((channel int24 *) 0x15;
.opstart 0xbfeffb85; .oplabel AID_6_0_,TG,_TG_AW613E_p_cam_tooth_,0;  .opend;
	// alu    a = p+0x1, SampleFlags;;
.opstart 0x00080039; .opend;
	// alu    p = a+0x0;;
.opstart 0x00097419; .opend;
	// ram   p_cam_tooth = p_23_0;; // *((channel int24 *) 0x15;
.opstart 0xbffffb85; .oplabel AID_6_0_,TG,_TG_AW613E_p_cam_tooth_,0;  .opend;

.line 209;
	// ram   p_31_24 = cam_chan;; // *((channel int8 *) 0x14;
.opstart 0xcfeff985; .oplabel AID_6_0_,TG,_TG_AW613E_cam_chan_,0;  .opend;
	// alu    a = p_31_24+0x0;;
.opstart 0x00020419; .opend;
	// alu    chan = a+0x0;;
.opstart 0x00094411; .opend;

.line 210;
	// chan  FutureOutputPin toggle on matchA;;
.opstart 0x4bffffff; .opend;

.line 211;
	// chan  CurrentOutputPin = opacA;;
.opstart 0x7ffff9fe; .opend;

.line 212;
.def; .eb; .scl 100; .tag __TG_AW613E_FIRST_EDGE__AW613E_SCOPEBLOCK_14_; .stackUsage 0; .scratchpadUsage 0; .endef;
.def __TG_AW613E_FIRST_EDGE__AW613E_END_IFELSE_9_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 214;
	// ram   p_31_24 = tooth_counter_cycle;; // *((channel int8 *) 0x10;
.opstart 0xcfeff984; .oplabel AID_6_0_,TG,_TG_AW613E_tooth_counter_cycle_,0;  .opend;
	// alu    a = p_31_24+0x0;;
.opstart 0x00020419; .opend;
	// alu    a = a+0x1, SampleFlags;;
.opstart 0x00090039; .opend;
	// alu    p_31_24 = a+0x0;;
.opstart 0x0009a419; .opend;
	// ram   tooth_counter_cycle = p_31_24;; // *((channel int8 *) 0x10;
.opstart 0xcffff984; .oplabel AID_6_0_,TG,_TG_AW613E_tooth_counter_cycle_,0;  .opend;

.line 215;
	// ram   p_31_24 = tooth_counter_cycle;; // *((channel int8 *) 0x10;
.opstart 0xcfeff984; .oplabel AID_6_0_,TG,_TG_AW613E_tooth_counter_cycle_,0;  .opend;
	// alu    a = p_31_24+0x0;;
.opstart 0x00020419; .opend;
	// ram   p_31_24 = teeth_per_cycle;; // *((channel int8 *) 0x8;
.opstart 0xcfeff982; .oplabel AID_6_0_,TG,_TG_AW613E_teeth_per_cycle_,0;  .opend;
	// alu    sr = p_31_24+0x0;;
.opstart 0x00021419; .opend;
	// alu    p_31_24 = sr-a, SampleFlags;;
.opstart 0x1c3aaeff; .opend;
	// seq  if cFlag==false then goto FIRST_EDGE__AW613E_END_IFELSE_10, flush;;
.opstart 0xf0900007; .oplabel BAF_13_0_,StandardTest,__TG_AW613E_FIRST_EDGE__AW613E_END_IFELSE_10_,0;  .opend;
.def __TG_AW613E_FIRST_EDGE__AW613E_THEN_IF_ELSE_10_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 216;
.def; .bb; .scl 100; .tag __TG_AW613E_FIRST_EDGE__AW613E_SCOPEBLOCK_15_; .endef;

.line 218;
	// alu    a = ((u24) 0)+0x1;;
.opstart 0x00000428; .opend;
	// alu    p_31_24 = a+0x0;;
.opstart 0x0009a419; .opend;
	// ram   tooth_counter_cycle = p_31_24;; // *((channel int8 *) 0x10;
.opstart 0xcffff984; .oplabel AID_6_0_,TG,_TG_AW613E_tooth_counter_cycle_,0;  .opend;

.line 219;
	// ram   p_23_0 = p_cam_tooth_first;; // *((channel int24 *) 0x11;
.opstart 0xbfeffb84; .oplabel AID_6_0_,TG,_TG_AW613E_p_cam_tooth_first_,0;  .opend;
	// ram   p_cam_tooth = p_23_0;; // *((channel int24 *) 0x15;
.opstart 0xbffffb85; .oplabel AID_6_0_,TG,_TG_AW613E_p_cam_tooth_,0;  .opend;

.line 220;
.def; .eb; .scl 100; .tag __TG_AW613E_FIRST_EDGE__AW613E_SCOPEBLOCK_15_; .stackUsage 0; .scratchpadUsage 0; .endef;
.def __TG_AW613E_FIRST_EDGE__AW613E_END_IFELSE_10_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 221;
.def; .eb; .scl 100; .tag __TG_AW613E_FIRST_EDGE__AW613E_SCOPEBLOCK_5_; .stackUsage 0; .scratchpadUsage 0; .endef;
.def __TG_AW613E_FIRST_EDGE__AW613E_FUNC_END_; .val 0xffffffff; .scl 200; .type 0xe; .endef;
	// seq   end;;
.opstart 0x0fffffff; .opend;
.def; .ef; .scl 101; .tag _TG_AW613E_FIRST_EDGE_; .endef;
.breakable;

.file "..\..\src\etpuc_tg.c";

.line 227;
.def _TG_AW613E_SECOND_EDGE_; .val 0x0; .scl 2; .etpuclass TG; .type 0x80000022; .endef;
.def; .bf; .scl 101; .tag _TG_AW613E_SECOND_EDGE_; .endef;
.def _TG_AW613E_SECOND_EDGE_; .val 0xffffffff; .scl 200; .type 0xe; .endef;
.def; .bb; .scl 100; .tag __TG_AW613E_SECOND_EDGE__AW613E_SCOPEBLOCK_16_; .endef;

.line 229;
	// chan  clear MatchRecognitionLatchB;;
.opstart 0x7fffffbf; .opend;

.line 234;
	// ram   p_31_24 = tooth_counter_gap;; // *((channel int8 *) 0xC;
.opstart 0xcfeff983; .oplabel AID_6_0_,TG,_TG_AW613E_tooth_counter_gap_,0;  .opend;
	// alu    a = p_31_24+0x0;;
.opstart 0x00020419; .opend;
	// ram   p_31_24 = teeth_till_gap;; // *((channel int8 *) 0x0;
.opstart 0xcfeff980; .oplabel AID_6_0_,TG,_TG_AW613E_teeth_till_gap_,0;  .opend;
	// alu    sr = p_31_24+0x0;;
.opstart 0x00021419; .opend;
	// alu    p_31_24 = sr-a, SampleFlags;;
.opstart 0x1c3aaeff; .opend;
	// seq  if cFlag==true then goto SECOND_EDGE__AW613E_THEN_IF_ELSE_11, flush;;
.opstart 0xf0980007; .oplabel BAF_13_0_,StandardTest,__TG_AW613E_SECOND_EDGE__AW613E_THEN_IF_ELSE_11_,0;  .opend;
.def __TG_AW613E_SECOND_EDGE__AW613E_LOGICAL_OR_OP1_FALSE_3_; .val 0xffffffff; .scl 200; .type 0xe; .endef;
	// ram   p_23_0 = tooth_period_target;; // *((channel int24 *) 0x9;
.opstart 0xbfeffb82; .oplabel AID_6_0_,TG,_TG_AW613E_tooth_period_target_,0;  .opend;
	// alu    nil = ((u24) 0)-p, SampleFlags;;
.opstart 0x1c1ffeff; .opend;
	// seq  if LessThan==false then goto SECOND_EDGE__AW613E_THEN_IF_ELSE_11, flush;;
.opstart 0xf4900007; .oplabel BAF_13_0_,StandardTest,__TG_AW613E_SECOND_EDGE__AW613E_THEN_IF_ELSE_11_,0;  .opend;
	// seq  goto SECOND_EDGE__AW613E_LOGICAL_OR_OP1_FALSE_2, flush;;
.opstart 0xf7d00007; .oplabel BAF_13_0_,StandardTest,__TG_AW613E_SECOND_EDGE__AW613E_LOGICAL_OR_OP1_FALSE_2_,0;  .opend;
.def __TG_AW613E_SECOND_EDGE__AW613E_LOGICAL_OR_OP1_FALSE_2_; .val 0xffffffff; .scl 200; .type 0xe; .endef;
	// ram   p_31_24 = generation_disable;; // *((channel int8 *) 0x18;
.opstart 0xcfeff986; .oplabel AID_6_0_,TG,_TG_AW613E_generation_disable_,0;  .opend;
	// alu    a = p_31_24+0x0;;
.opstart 0x00020419; .opend;
	// alu    nil = a ^ 0x1, SampleFlags;;
.opstart 0x0809fbaa; .opend;
	// seq  if z==true then goto SECOND_EDGE__AW613E_THEN_IF_ELSE_11, flush;;
.opstart 0xf0d80007; .oplabel BAF_13_0_,StandardTest,__TG_AW613E_SECOND_EDGE__AW613E_THEN_IF_ELSE_11_,0;  .opend;
	// seq  goto SECOND_EDGE__AW613E_ELSE_IFELSE_11, flush;;
.opstart 0xf7d00007; .oplabel BAF_13_0_,StandardTest,__TG_AW613E_SECOND_EDGE__AW613E_ELSE_IFELSE_11_,0;  .opend;
.def __TG_AW613E_SECOND_EDGE__AW613E_THEN_IF_ELSE_11_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 235;
.def; .bb; .scl 100; .tag __TG_AW613E_SECOND_EDGE__AW613E_SCOPEBLOCK_17_; .endef;

.line 236;
	// chan  FutureOutputPin no change on matchA;;
.opstart 0x48ffffff; .opend;

.line 237;
	// chan  FutureOutputPin no change on matchB;;
.opstart 0x4f1fffff; .opend;

.line 238;
.def; .eb; .scl 100; .tag __TG_AW613E_SECOND_EDGE__AW613E_SCOPEBLOCK_17_; .stackUsage 0; .scratchpadUsage 0; .endef;
	// seq  goto SECOND_EDGE__AW613E_END_IFELSE_11, flush;;
.opstart 0xf7d00007; .oplabel BAF_13_0_,StandardTest,__TG_AW613E_SECOND_EDGE__AW613E_END_IFELSE_11_,0;  .opend;
.def __TG_AW613E_SECOND_EDGE__AW613E_ELSE_IFELSE_11_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 240;
.def; .bb; .scl 100; .tag __TG_AW613E_SECOND_EDGE__AW613E_SCOPEBLOCK_18_; .endef;

.line 241;
	// seq  if FunctionMode0==true then goto SECOND_EDGE__AW613E_ELSE_IFELSE_12, flush;;
.opstart 0xf3d80007; .oplabel BAF_13_0_,StandardTest,__TG_AW613E_SECOND_EDGE__AW613E_ELSE_IFELSE_12_,0;  .opend;
.def __TG_AW613E_SECOND_EDGE__AW613E_THEN_IF_ELSE_12_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 242;
.def; .bb; .scl 100; .tag __TG_AW613E_SECOND_EDGE__AW613E_SCOPEBLOCK_19_; .endef;

.line 243;
	// chan  FutureOutputPin high on matchA;;
.opstart 0x49ffffff; .opend;

.line 244;
	// chan  FutureOutputPin low on matchB;;
.opstart 0x4f5fffff; .opend;

.line 245;
.def; .eb; .scl 100; .tag __TG_AW613E_SECOND_EDGE__AW613E_SCOPEBLOCK_19_; .stackUsage 0; .scratchpadUsage 0; .endef;
	// seq  goto SECOND_EDGE__AW613E_END_IFELSE_12, flush;;
.opstart 0xf7d00007; .oplabel BAF_13_0_,StandardTest,__TG_AW613E_SECOND_EDGE__AW613E_END_IFELSE_12_,0;  .opend;
.def __TG_AW613E_SECOND_EDGE__AW613E_ELSE_IFELSE_12_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 247;
.def; .bb; .scl 100; .tag __TG_AW613E_SECOND_EDGE__AW613E_SCOPEBLOCK_20_; .endef;

.line 248;
	// chan  FutureOutputPin low on matchA;;
.opstart 0x4affffff; .opend;

.line 249;
	// chan  FutureOutputPin high on matchB;;
.opstart 0x4f3fffff; .opend;

.line 250;
.def; .eb; .scl 100; .tag __TG_AW613E_SECOND_EDGE__AW613E_SCOPEBLOCK_20_; .stackUsage 0; .scratchpadUsage 0; .endef;
.def __TG_AW613E_SECOND_EDGE__AW613E_END_IFELSE_12_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 251;
.def; .eb; .scl 100; .tag __TG_AW613E_SECOND_EDGE__AW613E_SCOPEBLOCK_18_; .stackUsage 0; .scratchpadUsage 0; .endef;
.def __TG_AW613E_SECOND_EDGE__AW613E_END_IFELSE_11_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 252;
.def; .eb; .scl 100; .tag __TG_AW613E_SECOND_EDGE__AW613E_SCOPEBLOCK_16_; .stackUsage 0; .scratchpadUsage 0; .endef;
.def __TG_AW613E_SECOND_EDGE__AW613E_FUNC_END_; .val 0xffffffff; .scl 200; .type 0xe; .endef;
	// seq   end;;
.opstart 0x0fffffff; .opend;
.def; .ef; .scl 101; .tag _TG_AW613E_SECOND_EDGE_; .endef;
.breakable;

.file "..\..\src\etpuc_tg.c";
.defentry; .ettype alternate; .etpin output; .etpuclass TG; .ettable TG; .etlabel _Error_handler_unexpected_thread; .index 0; .etpreload dont_care; .etmatch disabled; .line 289; .endentry;
.defentry; .ettype alternate; .etpin output; .etpuclass TG; .ettable TG; .etlabel _Error_handler_unexpected_thread; .index 1; .etpreload dont_care; .etmatch disabled; .line 290; .endentry;
.defentry; .ettype alternate; .etpin output; .etpuclass TG; .ettable TG; .etlabel _Error_handler_unexpected_thread; .index 2; .etpreload dont_care; .etmatch disabled; .line 291; .endentry;
.defentry; .ettype alternate; .etpin output; .etpuclass TG; .ettable TG; .etlabel _Error_handler_unexpected_thread; .index 3; .etpreload dont_care; .etmatch disabled; .line 292; .endentry;
.defentry; .ettype alternate; .etpin output; .etpuclass TG; .ettable TG; .etlabel _Error_handler_unexpected_thread; .index 4; .etpreload dont_care; .etmatch disabled; .line 293; .endentry;
.defentry; .ettype alternate; .etpin output; .etpuclass TG; .ettable TG; .etlabel _TG_AW613E_INIT_; .index 5; .etpreload dont_care; .etmatch disabled; .line 258; .endentry;
.defentry; .ettype alternate; .etpin output; .etpuclass TG; .ettable TG; .etlabel _Error_handler_unexpected_thread; .index 6; .etpreload dont_care; .etmatch disabled; .line 294; .endentry;
.defentry; .ettype alternate; .etpin output; .etpuclass TG; .ettable TG; .etlabel _Error_handler_unexpected_thread; .index 7; .etpreload dont_care; .etmatch disabled; .line 295; .endentry;
.defentry; .ettype alternate; .etpin output; .etpuclass TG; .ettable TG; .etlabel _TG_AW613E_FIRST_EDGE_; .index 8; .etpreload dont_care; .etmatch disabled; .line 261; .endentry;
.defentry; .ettype alternate; .etpin output; .etpuclass TG; .ettable TG; .etlabel _TG_AW613E_FIRST_EDGE_; .index 9; .etpreload dont_care; .etmatch disabled; .line 262; .endentry;
.defentry; .ettype alternate; .etpin output; .etpuclass TG; .ettable TG; .etlabel _TG_AW613E_FIRST_EDGE_; .index 10; .etpreload dont_care; .etmatch disabled; .line 263; .endentry;
.defentry; .ettype alternate; .etpin output; .etpuclass TG; .ettable TG; .etlabel _TG_AW613E_FIRST_EDGE_; .index 11; .etpreload dont_care; .etmatch disabled; .line 264; .endentry;
.defentry; .ettype alternate; .etpin output; .etpuclass TG; .ettable TG; .etlabel _TG_AW613E_FIRST_EDGE_; .index 12; .etpreload dont_care; .etmatch disabled; .line 265; .endentry;
.defentry; .ettype alternate; .etpin output; .etpuclass TG; .ettable TG; .etlabel _TG_AW613E_FIRST_EDGE_; .index 13; .etpreload dont_care; .etmatch disabled; .line 266; .endentry;
.defentry; .ettype alternate; .etpin output; .etpuclass TG; .ettable TG; .etlabel _TG_AW613E_FIRST_EDGE_; .index 14; .etpreload dont_care; .etmatch disabled; .line 267; .endentry;
.defentry; .ettype alternate; .etpin output; .etpuclass TG; .ettable TG; .etlabel _TG_AW613E_FIRST_EDGE_; .index 15; .etpreload dont_care; .etmatch disabled; .line 268; .endentry;
.defentry; .ettype alternate; .etpin output; .etpuclass TG; .ettable TG; .etlabel _TG_AW613E_SECOND_EDGE_; .index 16; .etpreload dont_care; .etmatch disabled; .line 279; .endentry;
.defentry; .ettype alternate; .etpin output; .etpuclass TG; .ettable TG; .etlabel _TG_AW613E_SECOND_EDGE_; .index 17; .etpreload dont_care; .etmatch disabled; .line 280; .endentry;
.defentry; .ettype alternate; .etpin output; .etpuclass TG; .ettable TG; .etlabel _TG_AW613E_SECOND_EDGE_; .index 18; .etpreload dont_care; .etmatch disabled; .line 281; .endentry;
.defentry; .ettype alternate; .etpin output; .etpuclass TG; .ettable TG; .etlabel _TG_AW613E_SECOND_EDGE_; .index 19; .etpreload dont_care; .etmatch disabled; .line 282; .endentry;
.defentry; .ettype alternate; .etpin output; .etpuclass TG; .ettable TG; .etlabel _TG_AW613E_SECOND_EDGE_; .index 20; .etpreload dont_care; .etmatch disabled; .line 283; .endentry;
.defentry; .ettype alternate; .etpin output; .etpuclass TG; .ettable TG; .etlabel _TG_AW613E_SECOND_EDGE_; .index 21; .etpreload dont_care; .etmatch disabled; .line 284; .endentry;
.defentry; .ettype alternate; .etpin output; .etpuclass TG; .ettable TG; .etlabel _TG_AW613E_SECOND_EDGE_; .index 22; .etpreload dont_care; .etmatch disabled; .line 285; .endentry;
.defentry; .ettype alternate; .etpin output; .etpuclass TG; .ettable TG; .etlabel _TG_AW613E_SECOND_EDGE_; .index 23; .etpreload dont_care; .etmatch disabled; .line 286; .endentry;
.defentry; .ettype alternate; .etpin output; .etpuclass TG; .ettable TG; .etlabel _TG_AW613E_FIRST_EDGE_; .index 24; .etpreload dont_care; .etmatch disabled; .line 269; .endentry;
.defentry; .ettype alternate; .etpin output; .etpuclass TG; .ettable TG; .etlabel _TG_AW613E_FIRST_EDGE_; .index 25; .etpreload dont_care; .etmatch disabled; .line 270; .endentry;
.defentry; .ettype alternate; .etpin output; .etpuclass TG; .ettable TG; .etlabel _TG_AW613E_FIRST_EDGE_; .index 26; .etpreload dont_care; .etmatch disabled; .line 271; .endentry;
.defentry; .ettype alternate; .etpin output; .etpuclass TG; .ettable TG; .etlabel _TG_AW613E_FIRST_EDGE_; .index 27; .etpreload dont_care; .etmatch disabled; .line 272; .endentry;
.defentry; .ettype alternate; .etpin output; .etpuclass TG; .ettable TG; .etlabel _TG_AW613E_FIRST_EDGE_; .index 28; .etpreload dont_care; .etmatch disabled; .line 273; .endentry;
.defentry; .ettype alternate; .etpin output; .etpuclass TG; .ettable TG; .etlabel _TG_AW613E_FIRST_EDGE_; .index 29; .etpreload dont_care; .etmatch disabled; .line 274; .endentry;
.defentry; .ettype alternate; .etpin output; .etpuclass TG; .ettable TG; .etlabel _TG_AW613E_FIRST_EDGE_; .index 30; .etpreload dont_care; .etmatch disabled; .line 275; .endentry;
.defentry; .ettype alternate; .etpin output; .etpuclass TG; .ettable TG; .etlabel _TG_AW613E_FIRST_EDGE_; .index 31; .etpreload dont_care; .etmatch disabled; .line 276; .endentry;

