// assembly code generated from source file etpuc_crank_emul.c

.file "..\..\src\etpuc_crank_emul.c";
.producer ETEC_cc;
.version 3, 0, A;
.target ETPU1;
.compdir "C:\GIT\ASHWARE\Tests\Drivers\EnhancedEngineControl\src\";

.regisgp TPR, 0;
.regisgp TRR, 0;
.regisgp TCR1, 0;
.regisgp TCR2, 0;

.file "..\..\src\etpuc_crank_emul.c";
.file "C:\\GIT\\ASHWARE\\Builds\\Include\\etpu_std.h";
.file "C:\\GIT\\ASHWARE\\Builds\\Include\\ETpu_Hw.h";
.def register_a; .scl 13; .type 0x4; .endef;
.def register_ac; .scl 13; .type 0x4; .endef;
.def registera; .scl 13; .type 0x4; .endef;
.def register_b; .scl 13; .type 0x4; .endef;
.def register_c; .scl 13; .type 0x4; .endef;
.def register_d; .scl 13; .type 0x4; .endef;
.def register_chan; .scl 13; .type 0xc; .endef;
.def register_diob; .scl 13; .type 0x4; .endef;
.def register_erta; .scl 13; .type 0x4; .endef;
.def register_ertb; .scl 13; .type 0x4; .endef;
.def register_link; .scl 13; .type 0xc; .endef;
.def register_mach; .scl 13; .type 0x4; .endef;
.def register_macl; .scl 13; .type 0x4; .endef;
.def register_p; .scl 13; .type 0x4; .endef;
.def register_p23_0; .scl 13; .type 0x4; .endef;
.def register_rar; .scl 13; .type 0x4; .endef;
.def register_sr; .scl 13; .type 0x4; .endef;
.def register_tcr1; .scl 13; .type 0x4; .endef;
.def register_tcr2; .scl 13; .type 0x4; .endef;
.def register_tpr; .scl 13; .type 0xd; .endef;
.def register_trr; .scl 13; .type 0x4; .endef;
.def register_chan_base; .scl 13; .type 0xe; .endef;
.def register_engine_base; .scl 13; .type 0xe; .endef;
.def register_p31_24; .scl 13; .type 0x2; .endef;
.def register_p23_16; .scl 13; .type 0x2; .endef;
.def register_p15_8; .scl 13; .type 0x2; .endef;
.def register_p7_0; .scl 13; .type 0x2; .endef;
.def register_p31_16; .scl 13; .type 0x3; .endef;
.def register_p15_0; .scl 13; .type 0x3; .endef;
.def register_p31_0; .scl 13; .type 0x5; .endef;
.def register_cc; .scl 13; .tag cc_struct; .type 0x0; .endef;

.def tpr_struct; .scl 10; .type 0x8; .size 2; .endef;
.def TICKS; .val 0x6; .scl 18; .size 10; .type 0xd; .endef;
.def TPR10; .val 0x5; .scl 18; .size 1; .type 0xd; .endef;
.def HOLD; .val 0x4; .scl 18; .size 1; .type 0xd; .endef;
.def IPH; .val 0x3; .scl 18; .size 1; .type 0xd; .endef;
.def MISSCNT; .val 0x1; .scl 18; .size 2; .type 0xd; .endef;
.def LAST; .val 0x0; .scl 18; .size 1; .type 0xd; .endef;
.def; .eos; .scl 102; .endef;

.file "C:\\GIT\\ASHWARE\\Builds\\Include\\etpu_std.h";
.file "C:\\GIT\\ASHWARE\\Builds\\Include\\ETpu_Lib.h";
.file "C:\\GIT\\ASHWARE\\Builds\\Include\\etpu_std.h";
.file "..\..\src\etpuc_crank_emul.c";
.file "..\..\src\etpuc_crank.h";
.line 163;
.def CRANK; .scl 201; .type 0x80000006; .size 92; .endef;
.line 123;
.def _CRANK_AW613E_INIT_; .val 0xffffffff; .scl 5; .etpuclass CRANK; .type 0x80000022; .endef;
.line 124;
.def _CRANK_AW613E_ANGLE_ADJUST_; .val 0xffffffff; .scl 5; .etpuclass CRANK; .type 0x80000022; .endef;
.line 125;
.def _CRANK_AW613E_CRANK_WITH_GAP_; .val 0xffffffff; .scl 5; .etpuclass CRANK; .type 0x80000022; .endef;
.line 126;
.def _CRANK_AW613E_CRANK_WITH_ADDITIONAL_TOOTH_; .val 0xffffffff; .scl 5; .etpuclass CRANK; .type 0x80000022; .endef;
.line 129;
.def _CRANK_AW613E_INIT_EMUL_; .val 0xffffffff; .scl 5; .etpuclass CRANK; .type 0x80000022; .endef;
.line 130;
.def _CRANK_AW613E_ANGLE_ADJUST_EMUL_; .val 0xffffffff; .scl 5; .etpuclass CRANK; .type 0x80000022; .endef;
.line 131;
.def _CRANK_AW613E_SET_SPEED_EMUL_; .val 0xffffffff; .scl 5; .etpuclass CRANK; .type 0x80000022; .endef;
.line 132;
.def _CRANK_AW613E_CRANK_WITH_GAP_EMUL_; .val 0xffffffff; .scl 5; .etpuclass CRANK; .type 0x80000022; .endef;
.line 140;
.def _CRANK_AW613E_ToothArray_Log_; .val 0xffffffff; .scl 5; .etpuclass CRANK; .type 0x21; .endef;
.line 141;
.def _CRANK_AW613E_Set_TRR_; .val 0xffffffff; .scl 5; .etpuclass CRANK; .type 0x21; .endef;
.line 146;
.def _CRANK_AW613E_Window_NoReturn_; .val 0xffffffff; .scl 5; .etpuclass CRANK; .type 0x80000029; .endef;
.line 148;
.def _CRANK_AW613E_WindowAcrossGap_NoReturn_; .val 0xffffffff; .scl 5; .etpuclass CRANK; .type 0x80000029; .endef;
.line 150;
.def _CRANK_AW613E_WindowCloseAt_NoReturn_; .val 0xffffffff; .scl 5; .etpuclass CRANK; .type 0x80000029; .endef;
.line 153;
.def _CRANK_AW613E_WindowClose_NoReturn_; .val 0xffffffff; .scl 5; .etpuclass CRANK; .type 0x80000029; .endef;
.line 154;
.def _CRANK_AW613E_Stall_NoReturn_; .val 0xffffffff; .scl 5; .etpuclass CRANK; .type 0x80000029; .endef;

.file "..\..\src\etpuc_crank_emul.c";
.file "..\..\src\etpuc_set.h";
.file "..\..\src\etpuc_crank_emul.c";
.line 412;
.pragmawrite h, (::ETPUfilename (cpu/etpu_crank_emul_auto.h));
.line 413;
.pragmawrite h, (/**************************************************************** );
.line 414;
.pragmawrite h, (* WARNING: This file is automatically generated. DO NOT EDIT IT! );
.line 415;
.pragmawrite h, (*);
.line 416;
.pragmawrite h, (* FILE NAME: etpu_crank_auto.h  );
.line 418;
.pragmawrite h, (* ARCHITECTURE: eTPU );
.line 422;
.pragmawrite h, (*);
.line 423;
.pragmawrite h, (* This file was generated by: "etpuc_crank_emul.c" on "Jan 12 2022", "17:19:31" );
.line 424;
.pragmawrite h, (*);
.line 425;
.pragmawrite h, (* This file provides an interface between eTPU code and CPU       );
.line 426;
.pragmawrite h, (* code. All references to the eTPU function should be made with   );
.line 427;
.pragmawrite h, (* information in this file. This allows only symbolic             );
.line 428;
.pragmawrite h, (* information to be referenced which allows the eTPU code to be   );
.line 429;
.pragmawrite h, (* optimized without effecting the CPU code.                       );
.line 430;
.pragmawrite h, (*****************************************************************/);
.line 431;
.pragmawrite h, (#ifndef _ETPU_CRANK_EMUL_AUTO_H_ );
.line 432;
.pragmawrite h, (#define _ETPU_CRANK_EMUL_AUTO_H_ );
.line 433;
.pragmawrite h, ( );
.line 434;
.pragmawrite h, (/* Function Configuration Information */);
.line 435;
.pragmawrite h, (::ETPUliteral(#define FS_ETPU_CRANK_EMUL_FUNCTION_NUMBER) ::ETPUfunctionnumber(CRANK::CRANK_EMUL) );
.line 436;
.pragmawrite h, (::ETPUliteral(#define FS_ETPU_CRANK_EMUL_TABLE_SELECT) ::ETPUentrytype(CRANK::CRANK_EMUL) );
.line 437;
.pragmawrite h, (::ETPUliteral(#define FS_ETPU_CRANK_EMUL_NUM_PARMS) ::ETPUram(CRANK) );
.line 438;
.pragmawrite h, ( );
.line 439;
.pragmawrite h, (/* Host Service Request Definitions */);
.line 440;
.pragmawrite h, (::ETPUliteral(#define FS_ETPU_CRANK_HSR_SET_SPEED)    3 );
.line 441;
.pragmawrite h, ( );
.line 442;
.pragmawrite h, (#endif );
.file "..\..\src\etpuc_crank.h";
.line -1;
.def _AW_CHAN_ALIAS_0; .val 0x54; .scl 3; .etpuclass CRANK; .type 0xf; .endef;
.line 81;
.def _CRANK_AW613E_blank_time_; .val 0x1; .scl 3; .etpuclass CRANK; .type 0xe; .const 0x1; .endef;
.line 82;
.def _CRANK_AW613E_tcr1_clock_source_div1_; .val 0x0; .scl 3; .etpuclass CRANK; .type 0xc; .const 0x1; .endef;
.line 83;
.def _CRANK_AW613E_tcr2_ticks_per_tooth_; .val 0x5; .scl 3; .etpuclass CRANK; .type 0xe; .const 0x1; .endef;
.line 84;
.def _CRANK_AW613E_tcr2_ticks_per_add_tooth_; .val 0x9; .scl 3; .etpuclass CRANK; .type 0xe; .const 0x1; .endef;
.line 85;
.def _CRANK_AW613E_last_tooth_tcr1_time_; .val 0xd; .scl 3; .etpuclass CRANK; .type 0xe; .endef;
.line 86;
.def _CRANK_AW613E_last_tooth_period_; .val 0x11; .scl 3; .etpuclass CRANK; .type 0xe; .endef;
.line 87;
.def _CRANK_AW613E_last_tooth_period_norm_; .val 0x15; .scl 3; .etpuclass CRANK; .type 0xe; .endef;
.line 88;
.def _CRANK_AW613E_last_last_tooth_period_norm_; .val 0x19; .scl 3; .etpuclass CRANK; .type 0xe; .endef;
.line 89;
.def _CRANK_AW613E_additional_tooth_period_; .val 0x1d; .scl 3; .etpuclass CRANK; .type 0xe; .endef;
.line 90;
.def _CRANK_AW613E_tcr2_adjustment_; .val 0x21; .scl 3; .etpuclass CRANK; .type 0x4; .endef;
.line 91;
.def _CRANK_AW613E_gap_ratio_; .val 0x25; .scl 3; .etpuclass CRANK; .type 0x8000000f; .const 0x1; .endef;
.line 92;
.def _CRANK_AW613E_win_ratio_normal_; .val 0x29; .scl 3; .etpuclass CRANK; .type 0x8000000f; .const 0x1; .endef;
.line 93;
.def _CRANK_AW613E_win_ratio_across_gap_; .val 0x2d; .scl 3; .etpuclass CRANK; .type 0x8000000f; .const 0x1; .endef;
.line 94;
.def _CRANK_AW613E_win_ratio_after_gap_; .val 0x31; .scl 3; .etpuclass CRANK; .type 0x8000000f; .const 0x1; .endef;
.line 95;
.def _CRANK_AW613E_win_ratio_after_timeout_; .val 0x35; .scl 3; .etpuclass CRANK; .type 0x8000000f; .const 0x1; .endef;
.line 96;
.def _CRANK_AW613E_first_tooth_timeout_; .val 0x39; .scl 3; .etpuclass CRANK; .type 0xe; .const 0x1; .endef;
.line 97;
.def _CRANK_AW613E_link_cam_; .val 0x3c; .scl 3; .etpuclass CRANK; .type 0xf; .const 0x1; .endef;
.line 98;
.def _CRANK_AW613E_link_1_; .val 0x40; .scl 3; .etpuclass CRANK; .type 0xf; .const 0x1; .endef;
.line 99;
.def _CRANK_AW613E_link_2_; .val 0x44; .scl 3; .etpuclass CRANK; .type 0xf; .const 0x1; .endef;
.line 100;
.def _CRANK_AW613E_link_3_; .val 0x48; .scl 3; .etpuclass CRANK; .type 0xf; .const 0x1; .endef;
.line 101;
.def _CRANK_AW613E_link_4_; .val 0x4c; .scl 3; .etpuclass CRANK; .type 0xf; .const 0x1; .endef;
.line 102;
.def _CRANK_AW613E_teeth_till_gap_; .val 0x4; .scl 3; .etpuclass CRANK; .type 0xc; .const 0x1; .endef;
.line 103;
.def _CRANK_AW613E_teeth_in_gap_; .val 0x8; .scl 3; .etpuclass CRANK; .type 0x2; .const 0x1; .endef;
.line 104;
.def _CRANK_AW613E_misscnt_mask_; .val 0x0; .scl 3; .etpuclass CRANK; .type 0xd; .const 0x1; .alias _AW_CHAN_ALIAS_0; .endef;
.line 105;
.def _CRANK_AW613E_teeth_per_cycle_; .val 0xc; .scl 3; .etpuclass CRANK; .type 0xc; .const 0x1; .endef;
.line 106;
.def _CRANK_AW613E_teeth_per_sync_; .val 0x10; .scl 3; .etpuclass CRANK; .type 0xc; .const 0x1; .endef;
.line 107;
.def _CRANK_AW613E_tooth_counter_gap_; .val 0x14; .scl 3; .etpuclass CRANK; .type 0xc; .endef;
.line 108;
.def _CRANK_AW613E_tooth_counter_cycle_; .val 0x18; .scl 3; .etpuclass CRANK; .type 0xc; .endef;
.line 109;
.def _CRANK_AW613E_blank_teeth_; .val 0x1c; .scl 3; .etpuclass CRANK; .type 0xc; .endef;
.line 110;
.def _CRANK_AW613E_state_; .val 0x20; .scl 3; .etpuclass CRANK; .type 0xc; .endef;
.line 111;
.def _CRANK_AW613E_error_; .val 0x24; .scl 3; .etpuclass CRANK; .type 0xc; .endef;
.line 112;
.def _CRANK_AW613E_tooth_period_log_; .val 0x51; .scl 3; .etpuclass CRANK; .type 0x1e; .const 0x1; .endef;
.line 161;
.defentry; .etpuclass CRANK; .ettable CRANK; .endentry;
.line 162;
.defentry; .etpuclass CRANK; .ettable CRANK_EMUL; .endentry;
.line 163;
.def _CRANK_AW613E___STACKBASE_; .val 0x59; .scl 3; .etpuclass CRANK; .type 0x4; .endef;
.file "..\..\src\etpuc_crank_emul.c";
.line 117;
.line 117;
.def tooth_period; .val 0x1; .scl 2; .type 0xe; .endef;
.file "C:\\GIT\\ASHWARE\\Builds\\Include\\ETpu_Hw.h";
.line 193;
.def chan; .val 0x28; .scl 4; .tag register_chan; .type 0x0; .endef;
.line 194;
.def ContextReg; .val 0x28; .scl 4; .tag register_chan; .type 0x0; .endef;
.line 195;
.def erta; .val 0x10; .scl 4; .tag register_erta; .type 0x0; .endef;
.line 196;
.def ertA; .val 0x10; .scl 4; .tag register_erta; .type 0x0; .endef;
.line 197;
.def ertb; .val 0x11; .scl 4; .tag register_ertb; .type 0x0; .endef;
.line 198;
.def ertB; .val 0x11; .scl 4; .tag register_ertb; .type 0x0; .endef;
.line 199;
.def tcr1; .val 0x20; .scl 4; .tag register_tcr1; .type 0x0; .endef;
.line 200;
.def tcr2; .val 0x21; .scl 4; .tag register_tcr2; .type 0x0; .endef;
.line 201;
.def tpr; .val 0x23; .scl 4; .tag register_tpr; .type 0x0; .endef;
.line 202;
.def trr; .val 0x22; .scl 4; .tag register_trr; .type 0x0; .endef;
.line 203;
.def link; .val 0x27; .scl 4; .tag register_link; .type 0x0; .endef;
.line 204;
.line 205;
.line 325;
.line 335;
.def tpr_reg; .val 0x23; .scl 4; .tag tpr_struct; .size 2; .type 0x8; .endef;
.line 336;
.def tpr_str; .val 0x23; .scl 4; .tag tpr_struct; .size 2; .type 0x8; .endef;
.file "C:\\GIT\\ASHWARE\\Builds\\Include\\ETpu_Lib.h";
.line 73;
.def _AtomicBegin; .val 0xffffffff; .scl 5; .type 0x21; .endef;
.line 74;
.def _AtomicEnd; .val 0xffffffff; .scl 5; .type 0x21; .endef;
.line 93;
.def _CoherentRead24_24; .val 0xffffffff; .scl 5; .type 0x21; .endef;
.line 94;
.def _CoherentRead24_8; .val 0xffffffff; .scl 5; .type 0x21; .endef;
.line 95;
.def _CoherentRead24_32; .val 0xffffffff; .scl 5; .type 0x21; .endef;
.line 99;
.def _CoherentWrite24_24; .val 0xffffffff; .scl 5; .type 0x21; .endef;
.line 100;
.def _CoherentWrite24_8; .val 0xffffffff; .scl 5; .type 0x21; .endef;
.line 101;
.def _CoherentWrite24_32; .val 0xffffffff; .scl 5; .type 0x21; .endef;
.line 120;
.def _OptimizationBoundaryAll; .val 0xffffffff; .scl 5; .type 0x21; .endef;
.line 126;
.def _OptimizationDisableStart; .val 0xffffffff; .scl 5; .type 0x21; .endef;
.line 127;
.def _OptimizationDisableEnd; .val 0xffffffff; .scl 5; .type 0x21; .endef;
.line 141;
.def _ExitThread; .val 0xffffffff; .scl 5; .type 0x21; .endef;
.line 157;
.def __rotate_right_1_b7_0; .val 0xffffffff; .scl 5; .type 0x24; .endef;
.line 161;
.def __rotate_right_1_b15_0; .val 0xffffffff; .scl 5; .type 0x24; .endef;
.line 165;
.def __rotate_right_1; .val 0xffffffff; .scl 5; .type 0x24; .endef;
.line 169;
.def __rotate_right_2n; .val 0xffffffff; .scl 5; .type 0x24; .endef;
.line 170;
.def __rotate_right_2n_sf8; .val 0xffffffff; .scl 5; .type 0x24; .endef;
.line 171;
.def __rotate_right_2n_sf16; .val 0xffffffff; .scl 5; .type 0x24; .endef;
.line 172;
.def __rotate_right_2n_sf24; .val 0xffffffff; .scl 5; .type 0x24; .endef;
.line 189;
.def __abs; .val 0xffffffff; .scl 5; .type 0x2e; .endef;
.line 190;
.def __abs_sf8; .val 0xffffffff; .scl 5; .type 0x2e; .endef;
.line 191;
.def __abs_sf16; .val 0xffffffff; .scl 5; .type 0x2e; .endef;
.line 192;
.def __abs_sf24; .val 0xffffffff; .scl 5; .type 0x2e; .endef;
.line 198;
.def __shift_right_SR; .val 0xffffffff; .scl 5; .type 0x21; .endef;
.line 203;
.def __shift_right_SR48; .val 0xffffffff; .scl 5; .type 0x24; .endef;
.line 204;
.def __shift_right_SR48_sf8; .val 0xffffffff; .scl 5; .type 0x24; .endef;
.line 205;
.def __shift_right_SR48_sf16; .val 0xffffffff; .scl 5; .type 0x24; .endef;
.line 206;
.def __shift_right_SR48_sf24; .val 0xffffffff; .scl 5; .type 0x24; .endef;
.line 214;
.def __shift_left_2n; .val 0xffffffff; .scl 5; .type 0x24; .endef;
.line 215;
.def __shift_left_2n_sf8; .val 0xffffffff; .scl 5; .type 0x24; .endef;
.line 216;
.def __shift_left_2n_sf16; .val 0xffffffff; .scl 5; .type 0x24; .endef;
.line 217;
.def __shift_left_2n_sf24; .val 0xffffffff; .scl 5; .type 0x24; .endef;
.line 218;
.def __shift_right_2n; .val 0xffffffff; .scl 5; .type 0x24; .endef;
.line 219;
.def __shift_right_2n_sf8; .val 0xffffffff; .scl 5; .type 0x24; .endef;
.line 220;
.def __shift_right_2n_sf16; .val 0xffffffff; .scl 5; .type 0x24; .endef;
.line 221;
.def __shift_right_2n_sf24; .val 0xffffffff; .scl 5; .type 0x24; .endef;
.line 230;
.def __bit_n_update; .val 0xffffffff; .scl 5; .type 0x24; .endef;
.line 231;
.def __bit_n_update_sf8; .val 0xffffffff; .scl 5; .type 0x24; .endef;
.line 232;
.def __bit_n_update_sf16; .val 0xffffffff; .scl 5; .type 0x24; .endef;
.line 233;
.def __bit_n_update_sf24; .val 0xffffffff; .scl 5; .type 0x24; .endef;
.line 242;
.def __bit_n_exchange_C; .val 0xffffffff; .scl 5; .type 0x24; .endef;
.line 243;
.def __bit_n_exchange_C_sf8; .val 0xffffffff; .scl 5; .type 0x24; .endef;
.line 244;
.def __bit_n_exchange_C_sf16; .val 0xffffffff; .scl 5; .type 0x24; .endef;
.line 245;
.def __bit_n_exchange_C_sf24; .val 0xffffffff; .scl 5; .type 0x24; .endef;
.line 256;
.def __mults8; .val 0xffffffff; .scl 5; .type 0x21; .endef;
.line 257;
.def __mults16; .val 0xffffffff; .scl 5; .type 0x21; .endef;
.line 258;
.def __mults24; .val 0xffffffff; .scl 5; .type 0x21; .endef;
.line 260;
.def __multu8; .val 0xffffffff; .scl 5; .type 0x21; .endef;
.line 261;
.def __multu16; .val 0xffffffff; .scl 5; .type 0x21; .endef;
.line 262;
.def __multu24; .val 0xffffffff; .scl 5; .type 0x21; .endef;
.line 265;
.def __macs; .val 0xffffffff; .scl 5; .type 0x21; .endef;
.line 268;
.def __macu; .val 0xffffffff; .scl 5; .type 0x21; .endef;
.line 271;
.def __fmults8; .val 0xffffffff; .scl 5; .type 0x21; .endef;
.line 274;
.def __fmults16; .val 0xffffffff; .scl 5; .type 0x21; .endef;
.line 277;
.def __fmultu8; .val 0xffffffff; .scl 5; .type 0x21; .endef;
.line 280;
.def __fmultu16; .val 0xffffffff; .scl 5; .type 0x21; .endef;
.line 283;
.def __divu8; .val 0xffffffff; .scl 5; .type 0x21; .endef;
.line 284;
.def __divu16; .val 0xffffffff; .scl 5; .type 0x21; .endef;
.line 285;
.def __divu24; .val 0xffffffff; .scl 5; .type 0x21; .endef;
.line 347;
.def mulir; .val 0xffffffff; .scl 5; .type 0x24; .endef;
.line 348;
.def muliur; .val 0xffffffff; .scl 5; .type 0x2e; .endef;
.line 352;
.def muli8r8; .val 0xffffffff; .scl 5; .type 0x22; .endef;
.line 353;
.def muli8ur8; .val 0xffffffff; .scl 5; .type 0x2c; .endef;
.line 354;
.def muli16r16; .val 0xffffffff; .scl 5; .type 0x23; .endef;
.line 355;
.def muli16ur16; .val 0xffffffff; .scl 5; .type 0x2d; .endef;
.line 356;
.def muli24r8; .val 0xffffffff; .scl 5; .type 0x24; .endef;
.line 357;
.def muli24ur8; .val 0xffffffff; .scl 5; .type 0x2e; .endef;
.line 358;
.def muli24r16; .val 0xffffffff; .scl 5; .type 0x24; .endef;
.line 359;
.def muli24ur16; .val 0xffffffff; .scl 5; .type 0x2e; .endef;
.line 361;
.def muli8r8u; .val 0xffffffff; .scl 5; .type 0x22; .endef;
.line 362;
.def muli16r16u; .val 0xffffffff; .scl 5; .type 0x23; .endef;
.line 381;
.def _Error_handler_entry; .val 0xffffffff; .scl 5; .type 0x80000022; .endef;
.line 382;
.def _Error_handler_unexpected_thread; .val 0xffffffff; .scl 5; .type 0x80000022; .endef;
.line 383;
.def _Error_handler_scm_off_weeds; .val 0xffffffff; .scl 5; .type 0x80000029; .endef;
.line 384;
.def _Error_handler_fill_weeds; .val 0xffffffff; .scl 5; .type 0x80000029; .endef;
.file "..\..\src\etpuc_crank.h";
.line 123;
.def _CRANK_AW613E_INIT_; .val 0xffffffff; .scl 5; .type 0x80000022; .endef;
.line 124;
.def _CRANK_AW613E_ANGLE_ADJUST_; .val 0xffffffff; .scl 5; .type 0x80000022; .endef;
.line 125;
.def _CRANK_AW613E_CRANK_WITH_GAP_; .val 0xffffffff; .scl 5; .type 0x80000022; .endef;
.line 126;
.def _CRANK_AW613E_CRANK_WITH_ADDITIONAL_TOOTH_; .val 0xffffffff; .scl 5; .type 0x80000022; .endef;
.line 140;
.def _CRANK_AW613E_ToothArray_Log_; .val 0xffffffff; .scl 5; .type 0x21; .endef;
.line 141;
.def _CRANK_AW613E_Set_TRR_; .val 0xffffffff; .scl 5; .type 0x21; .endef;
.line 146;
.def _CRANK_AW613E_Window_NoReturn_; .val 0xffffffff; .scl 5; .type 0x80000029; .endef;
.line 148;
.def _CRANK_AW613E_WindowAcrossGap_NoReturn_; .val 0xffffffff; .scl 5; .type 0x80000029; .endef;
.line 150;
.def _CRANK_AW613E_WindowCloseAt_NoReturn_; .val 0xffffffff; .scl 5; .type 0x80000029; .endef;
.line 153;
.def _CRANK_AW613E_WindowClose_NoReturn_; .val 0xffffffff; .scl 5; .type 0x80000029; .endef;
.line 154;
.def _CRANK_AW613E_Stall_NoReturn_; .val 0xffffffff; .scl 5; .type 0x80000029; .endef;
.line 170;
.def CRANK_Time_to_Angle_HighRes; .val 0xffffffff; .scl 5; .type 0x24; .endef;
.line 172;
.def CRANK_Time_to_Angle_LowRes; .val 0xffffffff; .scl 5; .type 0x24; .endef;
.line 180;
.line 180;
.def eng_pos_state; .scl 5; .type 0xc; .endef;
.line 181;
.line 181;
.def eng_cycle_tcr2_ticks; .scl 5; .type 0xe; .const 0x1; .endef;
.line 182;
.line 182;
.def eng_cycle_tcr2_start; .scl 5; .type 0xe; .endef;
.line 183;
.line 183;
.def eng_trr_norm; .scl 5; .type 0xe; .endef;
.file "..\..\src\etpuc_set.h";
.line 31;
.def Link4; .val 0xffffffff; .scl 5; .type 0x21; .endef;
.file "..\..\src\etpuc_crank_emul.c";

.line 123;
.def _CRANK_AW613E_INIT_EMUL_; .val 0x0; .scl 2; .etpuclass CRANK; .type 0x80000022; .endef;
.def; .bf; .scl 101; .tag _CRANK_AW613E_INIT_EMUL_; .endef;
.def _CRANK_AW613E_INIT_EMUL_; .val 0xffffffff; .scl 200; .type 0xe; .endef;
.def; .bb; .scl 100; .tag __CRANK_AW613E_INIT_EMUL__AW613E_SCOPEBLOCK_0_; .endef;

.line 127;
	// chan  DisableMatchTransitionServicing;;
.opstart 0xff7ffefb; .opend;

.line 129;
	// chan  clear MatchEnableLatches;;
.opstart 0x7ffffffd; .opend;

.line 131;
	// chan  clear TransitionDetectionLatches;;
.opstart 0x7fefffff; .opend;

.line 132;
	// chan  clear LinkServiceRequest;;
.opstart 0x4ffff7ff; .opend;

.line 133;
	// chan  clear MatchRecognitionLatchA;;
.opstart 0x7ffffeff; .opend;

.line 134;
	// chan  clear MatchRecognitionLatchB;;
.opstart 0x7fffffbf; .opend;

.line 138;
	// chan  mode = either match non blocking single transition;;
.opstart 0x4fffffe5; .opend;

.line 140;
	// chan  ActionUnitA: tcr1 >= match, capture tcr1;;
.opstart 0x4ff0ffff; .opend;

.line 141;
	// chan  ActionUnitB: tcr1 >= match, capture tcr2;;
.opstart 0x4fff2fff; .opend;

.line 143;
	// chan  detectA = off;;
.opstart 0x58ffffff; .opend;

.line 144;
	// chan  detectB = off;;
.opstart 0x5f1fffff; .opend;

.line 146;
	// chan  FutureOutputPin toggle on matchA;;
.opstart 0x4bffffff; .opend;

.line 147;
	// chan  FutureOutputPin no change on matchB;;
.opstart 0x4f1fffff; .opend;

.line 150;
	// alu    a = ((u24) 0)+0xFFFFFF;;
.opstart 0x1fffffec; .opend;
	// alu    TickRate = a+0x0;;
.opstart 0x0009e419; .opend;
	// alu    diob = a+0x0;;
.opstart 0x00094419; .opend;
	// ram   eng_trr_norm = diob;; // *((global int24 *) 0x1;
.opstart 0x9fffff00; .oplabel AID_7_0_,AW6B2D_NAMELESS_CLASS,eng_trr_norm,0;  .opend;

.line 151;
	// alu    a = ((u24) 0)+0x0;;
.opstart 0x00000408; .opend;
	// alu    ToothProgram = a+0x0;;
.opstart 0x00092411; .opend;

.line 152;
	// alu    a = ((u24) 0)+0x0;;
.opstart 0x00000408; .opend;
	// alu    tcr2 = a+0x0;;
.opstart 0x00099419; .opend;

.line 153;
	// alu    a = ((u24) 0)+0x0;;
.opstart 0x00000408; .opend;
	// alu    p_31_24 = a+0x0;;
.opstart 0x0009a419; .opend;
	// ram   eng_pos_state = p_31_24;; // *((global int8 *) 0x0;
.opstart 0xcffff100; .oplabel AID_7_0_,AW6B2D_NAMELESS_CLASS,eng_pos_state,0;  .opend;

.line 154;
	// ram   p_23_0 = eng_cycle_tcr2_ticks;; // *((global int24 *) 0x1;
.opstart 0x9feffb00; .oplabel AID_7_0_,AW6B2D_NAMELESS_CLASS,eng_cycle_tcr2_ticks,0;  .opend;
	// ram   eng_cycle_tcr2_start = p_23_0;; // *((global int24 *) 0x1;
.opstart 0x9ffffb00; .oplabel AID_7_0_,AW6B2D_NAMELESS_CLASS,eng_cycle_tcr2_start,0;  .opend;

.line 155;
	// ram   state =  0;; // *((channel int8 *) 0x20;
.opstart 0xcffff908; .oplabel AID_6_0_,CRANK,_CRANK_AW613E_state_,0;  .opend;

.line 158;
	// chan  EnableMatchTransitionServicing;;
.opstart 0xff3ffefb; .opend;

.line 159;
.def; .eb; .scl 100; .tag __CRANK_AW613E_INIT_EMUL__AW613E_SCOPEBLOCK_0_; .stackUsage 0; .scratchpadUsage 0; .endef;
.def __CRANK_AW613E_INIT_EMUL__AW613E_FUNC_END_; .val 0xffffffff; .scl 200; .type 0xe; .endef;
	// seq   end;;
.opstart 0x0fffffff; .opend;
.def; .ef; .scl 101; .tag _CRANK_AW613E_INIT_EMUL_; .endef;
.breakable;

.file "..\..\src\etpuc_crank_emul.c";

.line 165;
.def _CRANK_AW613E_ANGLE_ADJUST_EMUL_; .val 0x0; .scl 2; .etpuclass CRANK; .type 0x80000022; .endef;
.def; .bf; .scl 101; .tag _CRANK_AW613E_ANGLE_ADJUST_EMUL_; .endef;
.def _CRANK_AW613E_ANGLE_ADJUST_EMUL_; .val 0xffffffff; .scl 200; .type 0xe; .endef;
.def; .bb; .scl 100; .tag __CRANK_AW613E_ANGLE_ADJUST_EMUL__AW613E_SCOPEBLOCK_1_; .endef;

.line 167;
	// ram   p_23_0 = tcr2_adjustment;; // *((channel int24 *) 0x21;
.opstart 0xbfeffb88; .oplabel AID_6_0_,CRANK,_CRANK_AW613E_tcr2_adjustment_,0;  .opend;
	// alu    a = tcr2+p, SampleFlags;;
.opstart 0x1f1d0eff; .opend;
	// alu    tcr2 = a+0x0;;
.opstart 0x00099419; .opend;

.line 168;
.def; .eb; .scl 100; .tag __CRANK_AW613E_ANGLE_ADJUST_EMUL__AW613E_SCOPEBLOCK_1_; .stackUsage 0; .scratchpadUsage 0; .endef;
.def __CRANK_AW613E_ANGLE_ADJUST_EMUL__AW613E_FUNC_END_; .val 0xffffffff; .scl 200; .type 0xe; .endef;
	// seq   end;;
.opstart 0x0fffffff; .opend;
.def; .ef; .scl 101; .tag _CRANK_AW613E_ANGLE_ADJUST_EMUL_; .endef;
.breakable;

.file "..\..\src\etpuc_crank_emul.c";

.line 176;
.def _CRANK_AW613E_SET_SPEED_EMUL_; .val 0x0; .scl 2; .etpuclass CRANK; .type 0x80000022; .endef;
.def; .bf; .scl 101; .tag _CRANK_AW613E_SET_SPEED_EMUL_; .endef;
.def _CRANK_AW613E_SET_SPEED_EMUL_; .val 0xffffffff; .scl 200; .type 0xe; .endef;
.def; .bb; .scl 100; .tag __CRANK_AW613E_SET_SPEED_EMUL__AW613E_SCOPEBLOCK_2_; .endef;

.line 178;
	// ram   p_31_24 = eng_pos_state;; // *((global int8 *) 0x0;
.opstart 0xcfeff100; .oplabel AID_7_0_,AW6B2D_NAMELESS_CLASS,eng_pos_state,0;  .opend;
	// alu    a = p_31_24+0x0;;
.opstart 0x00020419; .opend;
	// alu    nil = a ^ 0x3, SampleFlags;;
.opstart 0x0809fbea; .opend;
	// seq  if z==true then goto SET_SPEED_EMUL__AW613E_END_IFELSE_0, flush;;
.opstart 0xf0d80007; .oplabel BAF_13_0_,StandardTest,__CRANK_AW613E_SET_SPEED_EMUL__AW613E_END_IFELSE_0_,0;  .opend;
.def __CRANK_AW613E_SET_SPEED_EMUL__AW613E_THEN_IF_ELSE_0_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 179;
.def; .bb; .scl 100; .tag __CRANK_AW613E_SET_SPEED_EMUL__AW613E_SCOPEBLOCK_3_; .endef;

.line 181;
	// alu    a = ((u24) 0)+0x3;;
.opstart 0x00000468; .opend;
	// alu    p_31_24 = a+0x0;;
.opstart 0x0009a419; .opend;
	// ram   eng_pos_state = p_31_24;; // *((global int8 *) 0x0;
.opstart 0xcffff100; .oplabel AID_7_0_,AW6B2D_NAMELESS_CLASS,eng_pos_state,0;  .opend;

.line 184;
	// alu    a = ((u24) 0)+0x7;;
.opstart 0x00100468; .opend;
	// alu    p_31_24 = a+0x0;;
.opstart 0x0009a419; .opend;
	// ram   state = p_31_24;; // *((channel int8 *) 0x20;
.opstart 0xcffff988; .oplabel AID_6_0_,CRANK,_CRANK_AW613E_state_,0;  .opend;

.line 187;
	// ram   p_23_0 = last_tooth_period;; // *((channel int24 *) 0x11;
.opstart 0xbfeffb84; .oplabel AID_6_0_,CRANK,_CRANK_AW613E_last_tooth_period_,0;  .opend;
	// alu    diob = p+0x0;;
.opstart 0x00084419; .opend;
	// ram   tooth_period = diob;; // *((global int24 *) 0x1;
.opstart 0x9fffff00; .oplabel AID_7_0_,AW6B2D_NAMELESS_CLASS,tooth_period,0;  .opend;

.line 190;
	// alu    a = tcr1+0x1, SampleFlags;;
.opstart 0x000c0039; .opend;
	// alu    ertA = a+0x0;;
.opstart 0x00092419; .opend;

.line 191;
	// alu    p = ertA+0x0;;
.opstart 0x000e7419; .opend;
	// ram   last_tooth_tcr1_time = p_23_0;; // *((channel int24 *) 0xD;
.opstart 0xbffffb83; .oplabel AID_6_0_,CRANK,_CRANK_AW613E_last_tooth_tcr1_time_,0;  .opend;

.line 192;
	// chan  matchA = ertA, set MatchEnableLatchA;;
.opstart 0x7fffff7f; .opend;

.line 195;
	// ram   diob = tcr2_ticks_per_tooth;; // *((channel int24 *) 0x5;
.opstart 0xbfefff81; .oplabel AID_6_0_,CRANK,_CRANK_AW613E_tcr2_ticks_per_tooth_,0;  .opend;
	// alu    a = ((u24) 0)+0x1;;
.opstart 0x00000428; .opend;
	// alu    a = diob-a, SampleFlags;;
.opstart 0x1c3b0eff; .opend;
	// alu    ToothProgram = a+0x0;;
.opstart 0x00092411; .opend;

.line 196;
.region processArgument, __CRANK_AW613E_SET_SPEED_EMUL__AW613E___PROC_ARG_0_REGION_0_;
	// ram   p_23_0 = tooth_period;; // *((global int24 *) 0x1;
.opstart 0x9feffb00; .oplabel AID_7_0_,AW6B2D_NAMELESS_CLASS,tooth_period,0;  .opend;
.endregion __CRANK_AW613E_SET_SPEED_EMUL__AW613E___PROC_ARG_0_REGION_0_;

.region placeArgumentInReg, __CRANK_AW613E_SET_SPEED_EMUL__AW613E___ARG_0_IN_REG_REGION_0_;
	// put arg/param in register 'a'

	// alu    a = p+0x0;;
.opstart 0x00080419; .opend;
.endregion __CRANK_AW613E_SET_SPEED_EMUL__AW613E___ARG_0_IN_REG_REGION_0_;

	// seq  call Set_TRR, flush;;
.opstart 0xffd00007; .oplabel BAF_13_0_,StandardTest,_CRANK_AW613E_Set_TRR_,0;  .opend;

.line 197;
	// ram   diob = tcr2_ticks_per_tooth;; // *((channel int24 *) 0x5;
.opstart 0xbfefff81; .oplabel AID_6_0_,CRANK,_CRANK_AW613E_tcr2_ticks_per_tooth_,0;  .opend;
	// alu    tcr2 = diob+0x0;;
.opstart 0x000b9419; .opend;

.line 198;
.def; .eb; .scl 100; .tag __CRANK_AW613E_SET_SPEED_EMUL__AW613E_SCOPEBLOCK_3_; .stackUsage 0; .scratchpadUsage 0; .endef;
.def __CRANK_AW613E_SET_SPEED_EMUL__AW613E_END_IFELSE_0_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 199;
.def; .eb; .scl 100; .tag __CRANK_AW613E_SET_SPEED_EMUL__AW613E_SCOPEBLOCK_2_; .stackUsage 0; .scratchpadUsage 0; .endef;
.def __CRANK_AW613E_SET_SPEED_EMUL__AW613E_FUNC_END_; .val 0xffffffff; .scl 200; .type 0xe; .endef;
	// seq   end;;
.opstart 0x0fffffff; .opend;
.def; .ef; .scl 101; .tag _CRANK_AW613E_SET_SPEED_EMUL_; .endef;
.breakable;

.file "..\..\src\etpuc_crank_emul.c";

.line 205;
.def _CRANK_AW613E_CRANK_WITH_GAP_EMUL_; .val 0x0; .scl 2; .etpuclass CRANK; .type 0x80000022; .endef;
.def; .bf; .scl 101; .tag _CRANK_AW613E_CRANK_WITH_GAP_EMUL_; .endef;
.def _CRANK_AW613E_CRANK_WITH_GAP_EMUL_; .val 0xffffffff; .scl 200; .type 0xe; .endef;
.def; .bb; .scl 100; .tag __CRANK_AW613E_CRANK_WITH_GAP_EMUL__AW613E_SCOPEBLOCK_4_; .endef;
.def tmp; .val 0x26; .scl 4; .type 0xc; .endef;

.line 209;
	// chan  clear MatchRecognitionLatchA;;
.opstart 0x7ffffeff; .opend;

.line 210;
	// output the switch expression

	// ram   p_31_24 = state;; // *((channel int8 *) 0x20;
.opstart 0xcfeff988; .oplabel AID_6_0_,CRANK,_CRANK_AW613E_state_,0;  .opend;
	// alu    a = p_31_24+0x0;;
.opstart 0x00020419; .opend;
	// alu    p_31_24 = a+0x0;;
.opstart 0x0009a419; .opend;
	// alu    nil = p_31_24+0xF4, SampleFlags8;;
.opstart 0x13d2f782; .opend;
	// seq  if cFlag==true then goto CRANK_WITH_GAP_EMUL__AW613E___Default_0, flush;;
.opstart 0xf0980007; .oplabel BAF_13_0_,StandardTest,__CRANK_AW613E_CRANK_WITH_GAP_EMUL__AW613E___Default_0_,0;  .opend;
.dtstart CRANK, _CRANK_AW613E_CRANK_WITH_GAP_EMUL_, 15;
	.dtdst __CRANK_AW613E_CRANK_WITH_GAP_EMUL__AW613E___JumpTable_0_AW24DE___Case_0_0_AW24DE_0__, 0;
	.dtdst __CRANK_AW613E_CRANK_WITH_GAP_EMUL__AW613E___JumpTable_0_AW24DE___Case_0_0_AW24DE_1__, 1;
	.dtdst __CRANK_AW613E_CRANK_WITH_GAP_EMUL__AW613E___JumpTable_0_AW24DE___Case_0_1_AW24DE_2__, 2;
	.dtdst __CRANK_AW613E_CRANK_WITH_GAP_EMUL__AW613E___JumpTable_0_AW24DE___Case_0_2_AW24DE_3__, 3;
	.dtdst __CRANK_AW613E_CRANK_WITH_GAP_EMUL__AW613E___JumpTable_0_AW24DE___Case_0_3_AW24DE_4__, 4;
	.dtdst __CRANK_AW613E_CRANK_WITH_GAP_EMUL__AW613E___JumpTable_0_AW24DE___Case_0_4_AW24DE_5__, 5;
	.dtdst __CRANK_AW613E_CRANK_WITH_GAP_EMUL__AW613E___JumpTable_0_AW24DE___Case_0_5_AW24DE_6__, 6;
	.dtdst __CRANK_AW613E_CRANK_WITH_GAP_EMUL__AW613E___JumpTable_0_AW24DE___Case_0_7_AW24DE_7__, 7;
	.dtdst __CRANK_AW613E_CRANK_WITH_GAP_EMUL__AW613E___JumpTable_0_AW24DE___Case_0_6_AW24DE_8__, 8;
	.dtdst __CRANK_AW613E_CRANK_WITH_GAP_EMUL__AW613E___JumpTable_0_AW24DE___Case_0_8_AW24DE_9__, 9;
	.dtdst __CRANK_AW613E_CRANK_WITH_GAP_EMUL__AW613E___JumpTable_0_AW24DE___Case_0_8_AW24DE_10__, 10;
	.dtdst __CRANK_AW613E_CRANK_WITH_GAP_EMUL__AW613E___JumpTable_0_AW24DE___Case_0_9_AW24DE_11__, 11;
.dtendlabels;
	// seq  goto ProgramCounter + p_31_24, flush;;
.opstart 0xffdfdef9; .opend;
.def __CRANK_AW613E_CRANK_WITH_GAP_EMUL__AW613E___JumpTable_0_AW24DE___Case_0_0_AW24DE_0__; .val 0xffffffff; .scl 200; .type 0xe; .endef;
	// seq  goto CRANK_WITH_GAP_EMUL__AW613E___Case_0_0, flush;;
.opstart 0xf7d00007; .oplabel BAF_13_0_,StandardTest,__CRANK_AW613E_CRANK_WITH_GAP_EMUL__AW613E___Case_0_0_,0;  .opend;
.def __CRANK_AW613E_CRANK_WITH_GAP_EMUL__AW613E___JumpTable_0_AW24DE___Case_0_0_AW24DE_1__; .val 0xffffffff; .scl 200; .type 0xe; .endef;
	// seq  goto CRANK_WITH_GAP_EMUL__AW613E___Default_0, flush;;
.opstart 0xf7d00007; .oplabel BAF_13_0_,StandardTest,__CRANK_AW613E_CRANK_WITH_GAP_EMUL__AW613E___Default_0_,0;  .opend;
.def __CRANK_AW613E_CRANK_WITH_GAP_EMUL__AW613E___JumpTable_0_AW24DE___Case_0_1_AW24DE_2__; .val 0xffffffff; .scl 200; .type 0xe; .endef;
	// seq  goto CRANK_WITH_GAP_EMUL__AW613E___Case_0_1, flush;;
.opstart 0xf7d00007; .oplabel BAF_13_0_,StandardTest,__CRANK_AW613E_CRANK_WITH_GAP_EMUL__AW613E___Case_0_1_,0;  .opend;
.def __CRANK_AW613E_CRANK_WITH_GAP_EMUL__AW613E___JumpTable_0_AW24DE___Case_0_2_AW24DE_3__; .val 0xffffffff; .scl 200; .type 0xe; .endef;
	// seq  goto CRANK_WITH_GAP_EMUL__AW613E___Case_0_2, flush;;
.opstart 0xf7d00007; .oplabel BAF_13_0_,StandardTest,__CRANK_AW613E_CRANK_WITH_GAP_EMUL__AW613E___Case_0_2_,0;  .opend;
.def __CRANK_AW613E_CRANK_WITH_GAP_EMUL__AW613E___JumpTable_0_AW24DE___Case_0_3_AW24DE_4__; .val 0xffffffff; .scl 200; .type 0xe; .endef;
	// seq  goto CRANK_WITH_GAP_EMUL__AW613E___Case_0_3, flush;;
.opstart 0xf7d00007; .oplabel BAF_13_0_,StandardTest,__CRANK_AW613E_CRANK_WITH_GAP_EMUL__AW613E___Case_0_3_,0;  .opend;
.def __CRANK_AW613E_CRANK_WITH_GAP_EMUL__AW613E___JumpTable_0_AW24DE___Case_0_4_AW24DE_5__; .val 0xffffffff; .scl 200; .type 0xe; .endef;
	// seq  goto CRANK_WITH_GAP_EMUL__AW613E___Case_0_4, flush;;
.opstart 0xf7d00007; .oplabel BAF_13_0_,StandardTest,__CRANK_AW613E_CRANK_WITH_GAP_EMUL__AW613E___Case_0_4_,0;  .opend;
.def __CRANK_AW613E_CRANK_WITH_GAP_EMUL__AW613E___JumpTable_0_AW24DE___Case_0_5_AW24DE_6__; .val 0xffffffff; .scl 200; .type 0xe; .endef;
	// seq  goto CRANK_WITH_GAP_EMUL__AW613E___Case_0_5, flush;;
.opstart 0xf7d00007; .oplabel BAF_13_0_,StandardTest,__CRANK_AW613E_CRANK_WITH_GAP_EMUL__AW613E___Case_0_5_,0;  .opend;
.def __CRANK_AW613E_CRANK_WITH_GAP_EMUL__AW613E___JumpTable_0_AW24DE___Case_0_7_AW24DE_7__; .val 0xffffffff; .scl 200; .type 0xe; .endef;
	// seq  goto CRANK_WITH_GAP_EMUL__AW613E___Case_0_7, flush;;
.opstart 0xf7d00007; .oplabel BAF_13_0_,StandardTest,__CRANK_AW613E_CRANK_WITH_GAP_EMUL__AW613E___Case_0_7_,0;  .opend;
.def __CRANK_AW613E_CRANK_WITH_GAP_EMUL__AW613E___JumpTable_0_AW24DE___Case_0_6_AW24DE_8__; .val 0xffffffff; .scl 200; .type 0xe; .endef;
	// seq  goto CRANK_WITH_GAP_EMUL__AW613E___Case_0_6, flush;;
.opstart 0xf7d00007; .oplabel BAF_13_0_,StandardTest,__CRANK_AW613E_CRANK_WITH_GAP_EMUL__AW613E___Case_0_6_,0;  .opend;
.def __CRANK_AW613E_CRANK_WITH_GAP_EMUL__AW613E___JumpTable_0_AW24DE___Case_0_8_AW24DE_9__; .val 0xffffffff; .scl 200; .type 0xe; .endef;
	// seq  goto CRANK_WITH_GAP_EMUL__AW613E___Case_0_8, flush;;
.opstart 0xf7d00007; .oplabel BAF_13_0_,StandardTest,__CRANK_AW613E_CRANK_WITH_GAP_EMUL__AW613E___Case_0_8_,0;  .opend;
.def __CRANK_AW613E_CRANK_WITH_GAP_EMUL__AW613E___JumpTable_0_AW24DE___Case_0_8_AW24DE_10__; .val 0xffffffff; .scl 200; .type 0xe; .endef;
	// seq  goto CRANK_WITH_GAP_EMUL__AW613E___Default_0, flush;;
.opstart 0xf7d00007; .oplabel BAF_13_0_,StandardTest,__CRANK_AW613E_CRANK_WITH_GAP_EMUL__AW613E___Default_0_,0;  .opend;
.def __CRANK_AW613E_CRANK_WITH_GAP_EMUL__AW613E___JumpTable_0_AW24DE___Case_0_9_AW24DE_11__; .val 0xffffffff; .scl 200; .type 0xe; .endef;
	// seq  goto CRANK_WITH_GAP_EMUL__AW613E___Case_0_9, flush;;
.opstart 0xf7d00007; .oplabel BAF_13_0_,StandardTest,__CRANK_AW613E_CRANK_WITH_GAP_EMUL__AW613E___Case_0_9_,0;  .opend;
.dtendjumps;
	// output the switch contents


.line 211;
.def; .bb; .scl 100; .tag __CRANK_AW613E_CRANK_WITH_GAP_EMUL__AW613E_SCOPEBLOCK_5_; .endef;

.line 212;
.def __CRANK_AW613E_CRANK_WITH_GAP_EMUL__AW613E___Case_0_0_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 213;
.def __CRANK_AW613E_CRANK_WITH_GAP_EMUL__AW613E___Case_0_1_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 214;
.def __CRANK_AW613E_CRANK_WITH_GAP_EMUL__AW613E___Case_0_2_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 215;
.def __CRANK_AW613E_CRANK_WITH_GAP_EMUL__AW613E___Case_0_3_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 216;
.def __CRANK_AW613E_CRANK_WITH_GAP_EMUL__AW613E___Case_0_4_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 217;
.def __CRANK_AW613E_CRANK_WITH_GAP_EMUL__AW613E___Case_0_5_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 218;
.def __CRANK_AW613E_CRANK_WITH_GAP_EMUL__AW613E___Case_0_6_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 220;
	// alu    a = ((u24) 0)+0x7;;
.opstart 0x00100468; .opend;
	// alu    p_31_24 = a+0x0;;
.opstart 0x0009a419; .opend;
	// ram   state = p_31_24;; // *((channel int8 *) 0x20;
.opstart 0xcffff988; .oplabel AID_6_0_,CRANK,_CRANK_AW613E_state_,0;  .opend;

.line 223;
.def __CRANK_AW613E_CRANK_WITH_GAP_EMUL__AW613E___Case_0_7_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 235;
	// alu    a = ((u24) 0)+0x1000;;
.opstart 0x00000c08; .opend;
	// alu    a = ToothProgram | a, SampleFlags;;
.opstart 0x3b320fb0; .opend;
	// alu    ToothProgram = a+0x0;;
.opstart 0x00092411; .opend;

.line 237;
	// ram   diob = last_tooth_tcr1_time;; // *((channel int24 *) 0xD;
.opstart 0xbfefff83; .oplabel AID_6_0_,CRANK,_CRANK_AW613E_last_tooth_tcr1_time_,0;  .opend;
	// alu    ertA = diob+0x0;;
.opstart 0x000b2419; .opend;

.line 238;
	// ram   p_23_0 = last_tooth_period;; // *((channel int24 *) 0x11;
.opstart 0xbfeffb84; .oplabel AID_6_0_,CRANK,_CRANK_AW613E_last_tooth_period_,0;  .opend;
	// alu    diob = p+0x0;;
.opstart 0x00084419; .opend;
	// ram   tooth_period = diob;; // *((global int24 *) 0x1;
.opstart 0x9fffff00; .oplabel AID_7_0_,AW6B2D_NAMELESS_CLASS,tooth_period,0;  .opend;

.line 240;
	// ram   p_31_24 = tooth_counter_gap;; // *((channel int8 *) 0x14;
.opstart 0xcfeff985; .oplabel AID_6_0_,CRANK,_CRANK_AW613E_tooth_counter_gap_,0;  .opend;
	// alu    a = p_31_24+0x0;;
.opstart 0x00020419; .opend;
	// alu    a = a+0x1, SampleFlags;;
.opstart 0x00090039; .opend;
	// alu    p_31_24 = a+0x0;;
.opstart 0x0009a419; .opend;
	// ram   tooth_counter_gap = p_31_24;; // *((channel int8 *) 0x14;
.opstart 0xcffff985; .oplabel AID_6_0_,CRANK,_CRANK_AW613E_tooth_counter_gap_,0;  .opend;

.line 241;
	// ram   p_31_24 = tooth_counter_cycle;; // *((channel int8 *) 0x18;
.opstart 0xcfeff986; .oplabel AID_6_0_,CRANK,_CRANK_AW613E_tooth_counter_cycle_,0;  .opend;
	// alu    a = p_31_24+0x0;;
.opstart 0x00020419; .opend;
	// alu    a = a+0x1, SampleFlags;;
.opstart 0x00090039; .opend;
	// alu    p_31_24 = a+0x0;;
.opstart 0x0009a419; .opend;
	// ram   tooth_counter_cycle = p_31_24;; // *((channel int8 *) 0x18;
.opstart 0xcffff986; .oplabel AID_6_0_,CRANK,_CRANK_AW613E_tooth_counter_cycle_,0;  .opend;

.line 243;
	// ram   p_31_24 = teeth_till_gap;; // *((channel int8 *) 0x4;
.opstart 0xcfeff981; .oplabel AID_6_0_,CRANK,_CRANK_AW613E_teeth_till_gap_,0;  .opend;
	// alu    a = p_31_24+0x0;;
.opstart 0x00020419; .opend;
	// alu    sr = ((u24) 0)+0x1;;
.opstart 0x00000430; .opend;
	// alu    a = a-sr, SampleFlags;;
.opstart 0x1c590eff; .opend;
	// ram   p_31_24 = tooth_counter_gap;; // *((channel int8 *) 0x14;
.opstart 0xcfeff985; .oplabel AID_6_0_,CRANK,_CRANK_AW613E_tooth_counter_gap_,0;  .opend;
	// alu    sr = p_31_24+0x0;;
.opstart 0x00021419; .opend;
	// alu    p_31_24 = sr-a, SampleFlags;;
.opstart 0x1c3aaeff; .opend;
	// seq  if z==false then goto CRANK_WITH_GAP_EMUL__AW613E_END_IFELSE_1, flush;;
.opstart 0xf0d00007; .oplabel BAF_13_0_,StandardTest,__CRANK_AW613E_CRANK_WITH_GAP_EMUL__AW613E_END_IFELSE_1_,0;  .opend;
.def __CRANK_AW613E_CRANK_WITH_GAP_EMUL__AW613E_THEN_IF_ELSE_1_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 244;
.def; .bb; .scl 100; .tag __CRANK_AW613E_CRANK_WITH_GAP_EMUL__AW613E_SCOPEBLOCK_6_; .endef;

.line 246;
	// alu    a = ((u24) 0)+0x9;;
.opstart 0x00200428; .opend;
	// alu    p_31_24 = a+0x0;;
.opstart 0x0009a419; .opend;
	// ram   state = p_31_24;; // *((channel int8 *) 0x20;
.opstart 0xcffff988; .oplabel AID_6_0_,CRANK,_CRANK_AW613E_state_,0;  .opend;

.line 247;
.def; .eb; .scl 100; .tag __CRANK_AW613E_CRANK_WITH_GAP_EMUL__AW613E_SCOPEBLOCK_6_; .stackUsage 0; .scratchpadUsage 0; .endef;
.def __CRANK_AW613E_CRANK_WITH_GAP_EMUL__AW613E_END_IFELSE_1_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 249;
.region processArgument, __CRANK_AW613E_CRANK_WITH_GAP_EMUL__AW613E___PROC_ARG_0_REGION_1_;
	// ram   p_23_0 = tooth_period;; // *((global int24 *) 0x1;
.opstart 0x9feffb00; .oplabel AID_7_0_,AW6B2D_NAMELESS_CLASS,tooth_period,0;  .opend;
.endregion __CRANK_AW613E_CRANK_WITH_GAP_EMUL__AW613E___PROC_ARG_0_REGION_1_;

.region placeArgumentInReg, __CRANK_AW613E_CRANK_WITH_GAP_EMUL__AW613E___ARG_0_IN_REG_REGION_1_;
	// put arg/param in register 'a'

	// alu    a = p+0x0;;
.opstart 0x00080419; .opend;
.endregion __CRANK_AW613E_CRANK_WITH_GAP_EMUL__AW613E___ARG_0_IN_REG_REGION_1_;

	// seq  call Set_TRR, flush;;
.opstart 0xffd00007; .oplabel BAF_13_0_,StandardTest,_CRANK_AW613E_Set_TRR_,0;  .opend;

.line 251;
.region processArgument, __CRANK_AW613E_CRANK_WITH_GAP_EMUL__AW613E___PROC_ARG_0_REGION_2_;
	// ram   p_23_0 = tooth_period;; // *((global int24 *) 0x1;
.opstart 0x9feffb00; .oplabel AID_7_0_,AW6B2D_NAMELESS_CLASS,tooth_period,0;  .opend;
.endregion __CRANK_AW613E_CRANK_WITH_GAP_EMUL__AW613E___PROC_ARG_0_REGION_2_;

.region placeArgumentInReg, __CRANK_AW613E_CRANK_WITH_GAP_EMUL__AW613E___ARG_0_IN_REG_REGION_2_;
	// put arg/param in register 'a'

	// alu    a = p+0x0;;
.opstart 0x00080419; .opend;
.endregion __CRANK_AW613E_CRANK_WITH_GAP_EMUL__AW613E___ARG_0_IN_REG_REGION_2_;

	// seq  call ToothArray_Log, flush;;
.opstart 0xffd00007; .oplabel BAF_13_0_,StandardTest,_CRANK_AW613E_ToothArray_Log_,0;  .opend;

.line 253;
	// ram   p_23_0 = tooth_period;; // *((global int24 *) 0x1;
.opstart 0x9feffb00; .oplabel AID_7_0_,AW6B2D_NAMELESS_CLASS,tooth_period,0;  .opend;
	// alu    a = ertA+p, SampleFlags;;
.opstart 0x1f1e0eff; .opend;
	// alu    ertA = a+0x0;;
.opstart 0x00092419; .opend;

.line 254;
	// alu    p = ertA+0x0;;
.opstart 0x000e7419; .opend;
	// ram   last_tooth_tcr1_time = p_23_0;; // *((channel int24 *) 0xD;
.opstart 0xbffffb83; .oplabel AID_6_0_,CRANK,_CRANK_AW613E_last_tooth_tcr1_time_,0;  .opend;

.line 255;
	// chan  matchA = ertA, set MatchEnableLatchA;;
.opstart 0x7fffff7f; .opend;

.line 256;
	// seq  goto CRANK_WITH_GAP_EMUL__AW613E___BreakLoc_0, flush;;
.opstart 0xf7d00007; .oplabel BAF_13_0_,StandardTest,__CRANK_AW613E_CRANK_WITH_GAP_EMUL__AW613E___BreakLoc_0_,0;  .opend;

.line 258;
.def __CRANK_AW613E_CRANK_WITH_GAP_EMUL__AW613E___Case_0_8_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 269;
	// alu    a = ((u24) 0)+0x1000;;
.opstart 0x00000c08; .opend;
	// alu    a = ToothProgram | a, SampleFlags;;
.opstart 0x3b320fb0; .opend;
	// alu    ToothProgram = a+0x0;;
.opstart 0x00092411; .opend;

.line 271;
	// ram   diob = last_tooth_tcr1_time;; // *((channel int24 *) 0xD;
.opstart 0xbfefff83; .oplabel AID_6_0_,CRANK,_CRANK_AW613E_last_tooth_tcr1_time_,0;  .opend;
	// alu    ertA = diob+0x0;;
.opstart 0x000b2419; .opend;

.line 272;
	// ram   p_23_0 = last_tooth_period;; // *((channel int24 *) 0x11;
.opstart 0xbfeffb84; .oplabel AID_6_0_,CRANK,_CRANK_AW613E_last_tooth_period_,0;  .opend;
	// alu    diob = p+0x0;;
.opstart 0x00084419; .opend;
	// ram   tooth_period = diob;; // *((global int24 *) 0x1;
.opstart 0x9fffff00; .oplabel AID_7_0_,AW6B2D_NAMELESS_CLASS,tooth_period,0;  .opend;

.line 274;
	// ram   p_31_24 = tooth_counter_gap;; // *((channel int8 *) 0x14;
.opstart 0xcfeff985; .oplabel AID_6_0_,CRANK,_CRANK_AW613E_tooth_counter_gap_,0;  .opend;
	// alu    a = p_31_24+0x0;;
.opstart 0x00020419; .opend;
	// alu    a = a+0x1, SampleFlags;;
.opstart 0x00090039; .opend;
	// alu    p_31_24 = a+0x0;;
.opstart 0x0009a419; .opend;
	// ram   tooth_counter_gap = p_31_24;; // *((channel int8 *) 0x14;
.opstart 0xcffff985; .oplabel AID_6_0_,CRANK,_CRANK_AW613E_tooth_counter_gap_,0;  .opend;

.line 275;
	// ram   p_31_24 = tooth_counter_cycle;; // *((channel int8 *) 0x18;
.opstart 0xcfeff986; .oplabel AID_6_0_,CRANK,_CRANK_AW613E_tooth_counter_cycle_,0;  .opend;
	// alu    a = p_31_24+0x0;;
.opstart 0x00020419; .opend;
	// alu    a = a+0x1, SampleFlags;;
.opstart 0x00090039; .opend;
	// alu    p_31_24 = a+0x0;;
.opstart 0x0009a419; .opend;
	// ram   tooth_counter_cycle = p_31_24;; // *((channel int8 *) 0x18;
.opstart 0xcffff986; .oplabel AID_6_0_,CRANK,_CRANK_AW613E_tooth_counter_cycle_,0;  .opend;

.line 277;
.region processArgument, __CRANK_AW613E_CRANK_WITH_GAP_EMUL__AW613E___PROC_ARG_0_REGION_3_;
	// ram   p_23_0 = tooth_period;; // *((global int24 *) 0x1;
.opstart 0x9feffb00; .oplabel AID_7_0_,AW6B2D_NAMELESS_CLASS,tooth_period,0;  .opend;
.endregion __CRANK_AW613E_CRANK_WITH_GAP_EMUL__AW613E___PROC_ARG_0_REGION_3_;

.region placeArgumentInReg, __CRANK_AW613E_CRANK_WITH_GAP_EMUL__AW613E___ARG_0_IN_REG_REGION_3_;
	// put arg/param in register 'a'

	// alu    a = p+0x0;;
.opstart 0x00080419; .opend;
.endregion __CRANK_AW613E_CRANK_WITH_GAP_EMUL__AW613E___ARG_0_IN_REG_REGION_3_;

	// seq  call Set_TRR, flush;;
.opstart 0xffd00007; .oplabel BAF_13_0_,StandardTest,_CRANK_AW613E_Set_TRR_,0;  .opend;

.line 279;
.region processArgument, __CRANK_AW613E_CRANK_WITH_GAP_EMUL__AW613E___PROC_ARG_0_REGION_4_;
	// ram   p_23_0 = tooth_period;; // *((global int24 *) 0x1;
.opstart 0x9feffb00; .oplabel AID_7_0_,AW6B2D_NAMELESS_CLASS,tooth_period,0;  .opend;
.endregion __CRANK_AW613E_CRANK_WITH_GAP_EMUL__AW613E___PROC_ARG_0_REGION_4_;

.region placeArgumentInReg, __CRANK_AW613E_CRANK_WITH_GAP_EMUL__AW613E___ARG_0_IN_REG_REGION_4_;
	// put arg/param in register 'a'

	// alu    a = p+0x0;;
.opstart 0x00080419; .opend;
.endregion __CRANK_AW613E_CRANK_WITH_GAP_EMUL__AW613E___ARG_0_IN_REG_REGION_4_;

	// seq  call ToothArray_Log, flush;;
.opstart 0xffd00007; .oplabel BAF_13_0_,StandardTest,_CRANK_AW613E_ToothArray_Log_,0;  .opend;

.line 281;
	// alu    a = ((u24) 0)+0xB;;
.opstart 0x00200468; .opend;
	// alu    p_31_24 = a+0x0;;
.opstart 0x0009a419; .opend;
	// ram   state = p_31_24;; // *((channel int8 *) 0x20;
.opstart 0xcffff988; .oplabel AID_6_0_,CRANK,_CRANK_AW613E_state_,0;  .opend;

.line 283;
	// ram   p_31_0 = _AW_CHAN_ALIAS_0;; // *((channel int32 *) 0x54;
.opstart 0xcfeff895; .oplabel AID_6_0_,CRANK,_AW_CHAN_ALIAS_0,0;  .opend;
	// alu    a = p_31_16+0x0;;
.opstart 0x00060419; .opend;
	// alu    a = ToothProgram | a, SampleFlags;;
.opstart 0x3b320fb0; .opend;
	// alu    ToothProgram = a+0x0;;
.opstart 0x00092411; .opend;

.line 285;
	// ram   p_31_24 = teeth_in_gap;; // *((channel int8 *) 0x8;
.opstart 0xcfeff982; .oplabel AID_6_0_,CRANK,_CRANK_AW613E_teeth_in_gap_,0;  .opend;
	// alu    a = p_31_24+0x0;;
.opstart 0x00020419; .opend;
	// alu    a = ((s8) a)+0x0;;
.opstart 0x3ff90874; .opend;
	// alu    a = a+0x1, SampleFlags;;
.opstart 0x00090039; .opend;
	// ram   p_23_0 = tooth_period;; // *((global int24 *) 0x1;
.opstart 0x9feffb00; .oplabel AID_7_0_,AW6B2D_NAMELESS_CLASS,tooth_period,0;  .opend;
	// alu    mac = p * ((u24) a);;
.opstart 0x2f38ffe9; .opend;
.def __CRANK_AW613E_CRANK_WITH_GAP_EMUL__AW613E___MAC_WAIT_0_; .val 0xffffffff; .scl 200; .type 0xe; .endef;
	// seq  if MacBusy==true then goto CRANK_WITH_GAP_EMUL__AW613E___MAC_WAIT_0, flush;;
.opstart 0xf3580007; .oplabel BAF_13_0_,StandardTest,__CRANK_AW613E_CRANK_WITH_GAP_EMUL__AW613E___MAC_WAIT_0_,0;  .opend;
	// alu    a = macl+0x0;;
.opstart 0x00080409; .opend;
	// alu    a = ertA+a, SampleFlags;;
.opstart 0x1f3e0eff; .opend;
	// alu    ertA = a+0x0;;
.opstart 0x00092419; .opend;

.line 286;
	// alu    p = ertA+0x0;;
.opstart 0x000e7419; .opend;
	// ram   last_tooth_tcr1_time = p_23_0;; // *((channel int24 *) 0xD;
.opstart 0xbffffb83; .oplabel AID_6_0_,CRANK,_CRANK_AW613E_last_tooth_tcr1_time_,0;  .opend;

.line 287;
	// chan  matchA = ertA, set MatchEnableLatchA;;
.opstart 0x7fffff7f; .opend;

.line 288;
	// seq  goto CRANK_WITH_GAP_EMUL__AW613E___BreakLoc_0, flush;;
.opstart 0xf7d00007; .oplabel BAF_13_0_,StandardTest,__CRANK_AW613E_CRANK_WITH_GAP_EMUL__AW613E___BreakLoc_0_,0;  .opend;

.line 290;
.def __CRANK_AW613E_CRANK_WITH_GAP_EMUL__AW613E___Case_0_9_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 316;
	// alu    a = ((u24) 0)+0x1000;;
.opstart 0x00000c08; .opend;
	// alu    a = ToothProgram | a, SampleFlags;;
.opstart 0x3b320fb0; .opend;
	// alu    ToothProgram = a+0x0;;
.opstart 0x00092411; .opend;

.line 318;
	// ram   diob = last_tooth_tcr1_time;; // *((channel int24 *) 0xD;
.opstart 0xbfefff83; .oplabel AID_6_0_,CRANK,_CRANK_AW613E_last_tooth_tcr1_time_,0;  .opend;
	// alu    ertA = diob+0x0;;
.opstart 0x000b2419; .opend;

.line 319;
	// ram   p_23_0 = last_tooth_period;; // *((channel int24 *) 0x11;
.opstart 0xbfeffb84; .oplabel AID_6_0_,CRANK,_CRANK_AW613E_last_tooth_period_,0;  .opend;
	// alu    diob = p+0x0;;
.opstart 0x00084419; .opend;
	// ram   tooth_period = diob;; // *((global int24 *) 0x1;
.opstart 0x9fffff00; .oplabel AID_7_0_,AW6B2D_NAMELESS_CLASS,tooth_period,0;  .opend;

.line 321;
.region processArgument, __CRANK_AW613E_CRANK_WITH_GAP_EMUL__AW613E___PROC_ARG_0_REGION_5_;
	// ram   p_23_0 = tooth_period;; // *((global int24 *) 0x1;
.opstart 0x9feffb00; .oplabel AID_7_0_,AW6B2D_NAMELESS_CLASS,tooth_period,0;  .opend;
.endregion __CRANK_AW613E_CRANK_WITH_GAP_EMUL__AW613E___PROC_ARG_0_REGION_5_;

.region placeArgumentInReg, __CRANK_AW613E_CRANK_WITH_GAP_EMUL__AW613E___ARG_0_IN_REG_REGION_5_;
	// put arg/param in register 'a'

	// alu    a = p+0x0;;
.opstart 0x00080419; .opend;
.endregion __CRANK_AW613E_CRANK_WITH_GAP_EMUL__AW613E___ARG_0_IN_REG_REGION_5_;

	// seq  call Set_TRR, flush;;
.opstart 0xffd00007; .oplabel BAF_13_0_,StandardTest,_CRANK_AW613E_Set_TRR_,0;  .opend;

.line 324;
	// alu    a = ((u24) 0)+0x8;;
.opstart 0x00200408; .opend;
	// alu    p_31_24 = a+0x0;;
.opstart 0x0009a419; .opend;
	// ram   state = p_31_24;; // *((channel int8 *) 0x20;
.opstart 0xcffff988; .oplabel AID_6_0_,CRANK,_CRANK_AW613E_state_,0;  .opend;

.line 326;
	// alu    a = ((u24) 0)+0x1;;
.opstart 0x00000428; .opend;
	// alu    p_31_24 = a+0x0;;
.opstart 0x0009a419; .opend;
	// ram   tooth_counter_gap = p_31_24;; // *((channel int8 *) 0x14;
.opstart 0xcffff985; .oplabel AID_6_0_,CRANK,_CRANK_AW613E_tooth_counter_gap_,0;  .opend;

.line 327;
	// ram   p_31_24 = teeth_in_gap;; // *((channel int8 *) 0x8;
.opstart 0xcfeff982; .oplabel AID_6_0_,CRANK,_CRANK_AW613E_teeth_in_gap_,0;  .opend;
	// alu    a = p_31_24+0x0;;
.opstart 0x00020419; .opend;
	// ram   p_31_24 = tooth_counter_cycle;; // *((channel int8 *) 0x18;
.opstart 0xcfeff986; .oplabel AID_6_0_,CRANK,_CRANK_AW613E_tooth_counter_cycle_,0;  .opend;
	// alu    sr = p_31_24+0x0;;
.opstart 0x00021419; .opend;
	// alu    a = sr+a, SampleFlags;;
.opstart 0x1f3a0eff; .opend;
	// alu    d = a+0x0;;
.opstart 0x00095411; .opend;

.line 328;
.def __CRANK_AW613E_CRANK_WITH_GAP_EMUL__AW613E___WhileLoop_0_; .val 0xffffffff; .scl 200; .type 0xe; .endef;
.def __CRANK_AW613E_CRANK_WITH_GAP_EMUL__AW613E___ContinueLoc_1_; .val 0xffffffff; .scl 200; .type 0xe; .endef;
	// output the while loop test

	// ram   p_31_24 = tooth_counter_cycle;; // *((channel int8 *) 0x18;
.opstart 0xcfeff986; .oplabel AID_6_0_,CRANK,_CRANK_AW613E_tooth_counter_cycle_,0;  .opend;
	// alu    a = p_31_24+0x0;;
.opstart 0x00020419; .opend;
	// alu    a = a+0x1, SampleFlags;;
.opstart 0x00090039; .opend;
	// alu    p_31_24 = a+0x0;;
.opstart 0x0009a419; .opend;
	// ram   tooth_counter_cycle = p_31_24;; // *((channel int8 *) 0x18;
.opstart 0xcffff986; .oplabel AID_6_0_,CRANK,_CRANK_AW613E_tooth_counter_cycle_,0;  .opend;
	// alu    sr = d+0x0;;
.opstart 0x00041419; .opend;
	// alu    p_31_24 = a-sr, SampleFlags;;
.opstart 0x1c59aeff; .opend;
	// seq  if LowerOrEqual==false then goto CRANK_WITH_GAP_EMUL__AW613E___BreakLoc_1, flush;;
.opstart 0xf4d00007; .oplabel BAF_13_0_,StandardTest,__CRANK_AW613E_CRANK_WITH_GAP_EMUL__AW613E___BreakLoc_1_,0;  .opend;
.def __CRANK_AW613E_CRANK_WITH_GAP_EMUL__AW613E___LoopStart_1_; .val 0xffffffff; .scl 200; .type 0xe; .endef;
	// output the while loop contents


.line 329;
.def; .bb; .scl 100; .tag __CRANK_AW613E_CRANK_WITH_GAP_EMUL__AW613E_SCOPEBLOCK_7_; .endef;

.line 331;
.region processArgument, __CRANK_AW613E_CRANK_WITH_GAP_EMUL__AW613E___PROC_ARG_0_REGION_6_;
	// ram   p_23_0 = tooth_period;; // *((global int24 *) 0x1;
.opstart 0x9feffb00; .oplabel AID_7_0_,AW6B2D_NAMELESS_CLASS,tooth_period,0;  .opend;
.endregion __CRANK_AW613E_CRANK_WITH_GAP_EMUL__AW613E___PROC_ARG_0_REGION_6_;

.region placeArgumentInReg, __CRANK_AW613E_CRANK_WITH_GAP_EMUL__AW613E___ARG_0_IN_REG_REGION_6_;
	// put arg/param in register 'a'

	// alu    a = p+0x0;;
.opstart 0x00080419; .opend;
.endregion __CRANK_AW613E_CRANK_WITH_GAP_EMUL__AW613E___ARG_0_IN_REG_REGION_6_;

	// seq  call ToothArray_Log, flush;;
.opstart 0xffd00007; .oplabel BAF_13_0_,StandardTest,_CRANK_AW613E_ToothArray_Log_,0;  .opend;

.line 332;
.def; .eb; .scl 100; .tag __CRANK_AW613E_CRANK_WITH_GAP_EMUL__AW613E_SCOPEBLOCK_7_; .stackUsage 0; .scratchpadUsage 0; .endef;
	// seq  goto CRANK_WITH_GAP_EMUL__AW613E___WhileLoop_0, flush;;
.opstart 0xf7d00007; .oplabel BAF_13_0_,StandardTest,__CRANK_AW613E_CRANK_WITH_GAP_EMUL__AW613E___WhileLoop_0_,0;  .opend;
.def __CRANK_AW613E_CRANK_WITH_GAP_EMUL__AW613E___BreakLoc_1_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 334;
	// ram   p_31_24 = tooth_counter_cycle;; // *((channel int8 *) 0x18;
.opstart 0xcfeff986; .oplabel AID_6_0_,CRANK,_CRANK_AW613E_tooth_counter_cycle_,0;  .opend;
	// alu    a = p_31_24+0x0;;
.opstart 0x00020419; .opend;
	// ram   p_31_24 = teeth_per_cycle;; // *((channel int8 *) 0xC;
.opstart 0xcfeff983; .oplabel AID_6_0_,CRANK,_CRANK_AW613E_teeth_per_cycle_,0;  .opend;
	// alu    sr = p_31_24+0x0;;
.opstart 0x00021419; .opend;
	// alu    p_31_24 = sr-a, SampleFlags;;
.opstart 0x1c3aaeff; .opend;
	// seq  if LowerOrEqual==false then goto CRANK_WITH_GAP_EMUL__AW613E_END_IFELSE_2, flush;;
.opstart 0xf4d00007; .oplabel BAF_13_0_,StandardTest,__CRANK_AW613E_CRANK_WITH_GAP_EMUL__AW613E_END_IFELSE_2_,0;  .opend;
.def __CRANK_AW613E_CRANK_WITH_GAP_EMUL__AW613E_THEN_IF_ELSE_2_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 335;
.def; .bb; .scl 100; .tag __CRANK_AW613E_CRANK_WITH_GAP_EMUL__AW613E_SCOPEBLOCK_8_; .endef;

.line 340;
	// chan  set SvcdChan ChannelIntr;;
.opstart 0xffff3ef9; .opend;

.line 343;
	// alu    a = ((u24) 0)+0x1;;
.opstart 0x00000428; .opend;
	// alu    p_31_24 = a+0x0;;
.opstart 0x0009a419; .opend;
	// ram   tooth_counter_cycle = p_31_24;; // *((channel int8 *) 0x18;
.opstart 0xcffff986; .oplabel AID_6_0_,CRANK,_CRANK_AW613E_tooth_counter_cycle_,0;  .opend;

.line 345;
	// ram   p_23_0 = eng_cycle_tcr2_ticks;; // *((global int24 *) 0x1;
.opstart 0x9feffb00; .oplabel AID_7_0_,AW6B2D_NAMELESS_CLASS,eng_cycle_tcr2_ticks,0;  .opend;
	// alu    a = p+0x0;;
.opstart 0x00080419; .opend;
	// ram   p_23_0 = eng_cycle_tcr2_start;; // *((global int24 *) 0x1;
.opstart 0x9feffb00; .oplabel AID_7_0_,AW6B2D_NAMELESS_CLASS,eng_cycle_tcr2_start,0;  .opend;
	// alu    a = p+a, SampleFlags;;
.opstart 0x1f380eff; .opend;
	// alu    p = a+0x0;;
.opstart 0x00097419; .opend;
	// ram   eng_cycle_tcr2_start = p_23_0;; // *((global int24 *) 0x1;
.opstart 0x9ffffb00; .oplabel AID_7_0_,AW6B2D_NAMELESS_CLASS,eng_cycle_tcr2_start,0;  .opend;

.line 346;
.def; .eb; .scl 100; .tag __CRANK_AW613E_CRANK_WITH_GAP_EMUL__AW613E_SCOPEBLOCK_8_; .stackUsage 0; .scratchpadUsage 0; .endef;
.def __CRANK_AW613E_CRANK_WITH_GAP_EMUL__AW613E_END_IFELSE_2_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 348;
.region processArgument, __CRANK_AW613E_CRANK_WITH_GAP_EMUL__AW613E___PROC_ARG_0_REGION_7_;
	// ram   p_23_0 = tooth_period;; // *((global int24 *) 0x1;
.opstart 0x9feffb00; .oplabel AID_7_0_,AW6B2D_NAMELESS_CLASS,tooth_period,0;  .opend;
.endregion __CRANK_AW613E_CRANK_WITH_GAP_EMUL__AW613E___PROC_ARG_0_REGION_7_;

.region placeArgumentInReg, __CRANK_AW613E_CRANK_WITH_GAP_EMUL__AW613E___ARG_0_IN_REG_REGION_7_;
	// put arg/param in register 'a'

	// alu    a = p+0x0;;
.opstart 0x00080419; .opend;
.endregion __CRANK_AW613E_CRANK_WITH_GAP_EMUL__AW613E___ARG_0_IN_REG_REGION_7_;

	// seq  call ToothArray_Log, flush;;
.opstart 0xffd00007; .oplabel BAF_13_0_,StandardTest,_CRANK_AW613E_ToothArray_Log_,0;  .opend;

.line 350;
	// ram   p_23_0 = tooth_period;; // *((global int24 *) 0x1;
.opstart 0x9feffb00; .oplabel AID_7_0_,AW6B2D_NAMELESS_CLASS,tooth_period,0;  .opend;
	// alu    a = ertA+p, SampleFlags;;
.opstart 0x1f1e0eff; .opend;
	// alu    ertA = a+0x0;;
.opstart 0x00092419; .opend;

.line 351;
	// alu    p = ertA+0x0;;
.opstart 0x000e7419; .opend;
	// ram   last_tooth_tcr1_time = p_23_0;; // *((channel int24 *) 0xD;
.opstart 0xbffffb83; .oplabel AID_6_0_,CRANK,_CRANK_AW613E_last_tooth_tcr1_time_,0;  .opend;

.line 352;
	// chan  matchA = ertA, set MatchEnableLatchA;;
.opstart 0x7fffff7f; .opend;

.line 353;
	// seq  goto CRANK_WITH_GAP_EMUL__AW613E___BreakLoc_0, flush;;
.opstart 0xf7d00007; .oplabel BAF_13_0_,StandardTest,__CRANK_AW613E_CRANK_WITH_GAP_EMUL__AW613E___BreakLoc_0_,0;  .opend;

.line 355;
.def __CRANK_AW613E_CRANK_WITH_GAP_EMUL__AW613E___Default_0_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 356;
	// ram   p_31_24 = error;; // *((channel int8 *) 0x24;
.opstart 0xcfeff989; .oplabel AID_6_0_,CRANK,_CRANK_AW613E_error_,0;  .opend;
	// alu    a = p_31_24+0x0;;
.opstart 0x00020419; .opend;
	// alu    a = a | 0x10, SampleFlags;;
.opstart 0x08490b82; .opend;
	// alu    p_31_24 = a+0x0;;
.opstart 0x0009a419; .opend;
	// ram   error = p_31_24;; // *((channel int8 *) 0x24;
.opstart 0xcffff989; .oplabel AID_6_0_,CRANK,_CRANK_AW613E_error_,0;  .opend;

.line 357;
	// seq  goto CRANK_WITH_GAP_EMUL__AW613E___BreakLoc_0, flush;;
.opstart 0xf7d00007; .oplabel BAF_13_0_,StandardTest,__CRANK_AW613E_CRANK_WITH_GAP_EMUL__AW613E___BreakLoc_0_,0;  .opend;

.line 358;
.def; .eb; .scl 100; .tag __CRANK_AW613E_CRANK_WITH_GAP_EMUL__AW613E_SCOPEBLOCK_5_; .stackUsage 0; .scratchpadUsage 0; .endef;
.def __CRANK_AW613E_CRANK_WITH_GAP_EMUL__AW613E___BreakLoc_0_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 359;
.def; .eb; .scl 100; .tag __CRANK_AW613E_CRANK_WITH_GAP_EMUL__AW613E_SCOPEBLOCK_4_; .stackUsage 0; .scratchpadUsage 0; .endef;
.def __CRANK_AW613E_CRANK_WITH_GAP_EMUL__AW613E_FUNC_END_; .val 0xffffffff; .scl 200; .type 0xe; .endef;
	// seq   end;;
.opstart 0x0fffffff; .opend;
.def; .ef; .scl 101; .tag _CRANK_AW613E_CRANK_WITH_GAP_EMUL_; .endef;
.breakable;

.file "..\..\src\etpuc_crank_emul.c";
.defentry; .ettype alternate; .etpin output; .etpuclass CRANK; .ettable CRANK_EMUL; .etlabel _CRANK_AW613E_SET_SPEED_EMUL_; .index 0; .etpreload dont_care; .etmatch disabled; .line 371; .endentry;
.defentry; .ettype alternate; .etpin output; .etpuclass CRANK; .ettable CRANK_EMUL; .etlabel _CRANK_AW613E_SET_SPEED_EMUL_; .index 1; .etpreload dont_care; .etmatch disabled; .line 372; .endentry;
.defentry; .ettype alternate; .etpin output; .etpuclass CRANK; .ettable CRANK_EMUL; .etlabel _CRANK_AW613E_SET_SPEED_EMUL_; .index 2; .etpreload dont_care; .etmatch disabled; .line 373; .endentry;
.defentry; .ettype alternate; .etpin output; .etpuclass CRANK; .ettable CRANK_EMUL; .etlabel _CRANK_AW613E_SET_SPEED_EMUL_; .index 3; .etpreload dont_care; .etmatch disabled; .line 374; .endentry;
.defentry; .ettype alternate; .etpin output; .etpuclass CRANK; .ettable CRANK_EMUL; .etlabel _CRANK_AW613E_ANGLE_ADJUST_EMUL_; .index 4; .etpreload dont_care; .etmatch disabled; .line 368; .endentry;
.defentry; .ettype alternate; .etpin output; .etpuclass CRANK; .ettable CRANK_EMUL; .etlabel _CRANK_AW613E_INIT_EMUL_; .index 5; .etpreload dont_care; .etmatch disabled; .line 365; .endentry;
.defentry; .ettype alternate; .etpin output; .etpuclass CRANK; .ettable CRANK_EMUL; .etlabel _Error_handler_unexpected_thread; .index 6; .etpreload dont_care; .etmatch disabled; .line 387; .endentry;
.defentry; .ettype alternate; .etpin output; .etpuclass CRANK; .ettable CRANK_EMUL; .etlabel _Error_handler_unexpected_thread; .index 7; .etpreload dont_care; .etmatch disabled; .line 388; .endentry;
.defentry; .ettype alternate; .etpin output; .etpuclass CRANK; .ettable CRANK_EMUL; .etlabel _CRANK_AW613E_CRANK_WITH_GAP_EMUL_; .index 8; .etpreload dont_care; .etmatch enabled; .line 377; .endentry;
.defentry; .ettype alternate; .etpin output; .etpuclass CRANK; .ettable CRANK_EMUL; .etlabel _CRANK_AW613E_CRANK_WITH_GAP_EMUL_; .index 9; .etpreload dont_care; .etmatch enabled; .line 378; .endentry;
.defentry; .ettype alternate; .etpin output; .etpuclass CRANK; .ettable CRANK_EMUL; .etlabel _CRANK_AW613E_CRANK_WITH_GAP_EMUL_; .index 10; .etpreload dont_care; .etmatch enabled; .line 379; .endentry;
.defentry; .ettype alternate; .etpin output; .etpuclass CRANK; .ettable CRANK_EMUL; .etlabel _CRANK_AW613E_CRANK_WITH_GAP_EMUL_; .index 11; .etpreload dont_care; .etmatch enabled; .line 380; .endentry;
.defentry; .ettype alternate; .etpin output; .etpuclass CRANK; .ettable CRANK_EMUL; .etlabel _CRANK_AW613E_CRANK_WITH_GAP_EMUL_; .index 12; .etpreload dont_care; .etmatch enabled; .line 381; .endentry;
.defentry; .ettype alternate; .etpin output; .etpuclass CRANK; .ettable CRANK_EMUL; .etlabel _CRANK_AW613E_CRANK_WITH_GAP_EMUL_; .index 13; .etpreload dont_care; .etmatch enabled; .line 382; .endentry;
.defentry; .ettype alternate; .etpin output; .etpuclass CRANK; .ettable CRANK_EMUL; .etlabel _CRANK_AW613E_CRANK_WITH_GAP_EMUL_; .index 14; .etpreload dont_care; .etmatch enabled; .line 383; .endentry;
.defentry; .ettype alternate; .etpin output; .etpuclass CRANK; .ettable CRANK_EMUL; .etlabel _CRANK_AW613E_CRANK_WITH_GAP_EMUL_; .index 15; .etpreload dont_care; .etmatch enabled; .line 384; .endentry;
.defentry; .ettype alternate; .etpin output; .etpuclass CRANK; .ettable CRANK_EMUL; .etlabel _Error_handler_unexpected_thread; .index 16; .etpreload dont_care; .etmatch disabled; .line 389; .endentry;
.defentry; .ettype alternate; .etpin output; .etpuclass CRANK; .ettable CRANK_EMUL; .etlabel _Error_handler_unexpected_thread; .index 17; .etpreload dont_care; .etmatch disabled; .line 390; .endentry;
.defentry; .ettype alternate; .etpin output; .etpuclass CRANK; .ettable CRANK_EMUL; .etlabel _Error_handler_unexpected_thread; .index 18; .etpreload dont_care; .etmatch disabled; .line 391; .endentry;
.defentry; .ettype alternate; .etpin output; .etpuclass CRANK; .ettable CRANK_EMUL; .etlabel _Error_handler_unexpected_thread; .index 19; .etpreload dont_care; .etmatch disabled; .line 392; .endentry;
.defentry; .ettype alternate; .etpin output; .etpuclass CRANK; .ettable CRANK_EMUL; .etlabel _Error_handler_unexpected_thread; .index 20; .etpreload dont_care; .etmatch disabled; .line 393; .endentry;
.defentry; .ettype alternate; .etpin output; .etpuclass CRANK; .ettable CRANK_EMUL; .etlabel _Error_handler_unexpected_thread; .index 21; .etpreload dont_care; .etmatch disabled; .line 394; .endentry;
.defentry; .ettype alternate; .etpin output; .etpuclass CRANK; .ettable CRANK_EMUL; .etlabel _Error_handler_unexpected_thread; .index 22; .etpreload dont_care; .etmatch disabled; .line 395; .endentry;
.defentry; .ettype alternate; .etpin output; .etpuclass CRANK; .ettable CRANK_EMUL; .etlabel _Error_handler_unexpected_thread; .index 23; .etpreload dont_care; .etmatch disabled; .line 396; .endentry;
.defentry; .ettype alternate; .etpin output; .etpuclass CRANK; .ettable CRANK_EMUL; .etlabel _Error_handler_unexpected_thread; .index 24; .etpreload dont_care; .etmatch disabled; .line 397; .endentry;
.defentry; .ettype alternate; .etpin output; .etpuclass CRANK; .ettable CRANK_EMUL; .etlabel _Error_handler_unexpected_thread; .index 25; .etpreload dont_care; .etmatch disabled; .line 398; .endentry;
.defentry; .ettype alternate; .etpin output; .etpuclass CRANK; .ettable CRANK_EMUL; .etlabel _Error_handler_unexpected_thread; .index 26; .etpreload dont_care; .etmatch disabled; .line 399; .endentry;
.defentry; .ettype alternate; .etpin output; .etpuclass CRANK; .ettable CRANK_EMUL; .etlabel _Error_handler_unexpected_thread; .index 27; .etpreload dont_care; .etmatch disabled; .line 400; .endentry;
.defentry; .ettype alternate; .etpin output; .etpuclass CRANK; .ettable CRANK_EMUL; .etlabel _Error_handler_unexpected_thread; .index 28; .etpreload dont_care; .etmatch disabled; .line 401; .endentry;
.defentry; .ettype alternate; .etpin output; .etpuclass CRANK; .ettable CRANK_EMUL; .etlabel _Error_handler_unexpected_thread; .index 29; .etpreload dont_care; .etmatch disabled; .line 402; .endentry;
.defentry; .ettype alternate; .etpin output; .etpuclass CRANK; .ettable CRANK_EMUL; .etlabel _Error_handler_unexpected_thread; .index 30; .etpreload dont_care; .etmatch disabled; .line 403; .endentry;
.defentry; .ettype alternate; .etpin output; .etpuclass CRANK; .ettable CRANK_EMUL; .etlabel _Error_handler_unexpected_thread; .index 31; .etpreload dont_care; .etmatch disabled; .line 404; .endentry;

