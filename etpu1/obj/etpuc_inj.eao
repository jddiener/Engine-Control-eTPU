// assembly code generated from source file etpuc_inj.c

.file "..\..\src\etpuc_inj.c";
.producer ETEC_cc;
.version 3, 0, A;
.target ETPU1;
.compdir "C:\GIT\ASHWARE\Tests\Drivers\EnhancedEngineControl\src\";

.regisgp TPR, 0;
.regisgp TRR, 0;
.regisgp TCR1, 0;
.regisgp TCR2, 0;

.file "..\..\src\etpuc_inj.c";
.file "C:\\GIT\\ASHWARE\\Builds\\Include\\etpu_std.h";
.file "C:\\GIT\\ASHWARE\\Builds\\Include\\ETpu_Hw.h";
.def register_a; .scl 13; .type 0x4; .endef;
.def register_ac; .scl 13; .type 0x4; .endef;
.def registera; .scl 13; .type 0x4; .endef;
.def register_b; .scl 13; .type 0x4; .endef;
.def register_c; .scl 13; .type 0x4; .endef;
.def register_d; .scl 13; .type 0x4; .endef;
.def register_chan; .scl 13; .type 0xc; .endef;
.def register_diob; .scl 13; .type 0x4; .endef;
.def register_erta; .scl 13; .type 0x4; .endef;
.def register_ertb; .scl 13; .type 0x4; .endef;
.def register_link; .scl 13; .type 0xc; .endef;
.def register_mach; .scl 13; .type 0x4; .endef;
.def register_macl; .scl 13; .type 0x4; .endef;
.def register_p; .scl 13; .type 0x4; .endef;
.def register_p23_0; .scl 13; .type 0x4; .endef;
.def register_rar; .scl 13; .type 0x4; .endef;
.def register_sr; .scl 13; .type 0x4; .endef;
.def register_tcr1; .scl 13; .type 0x4; .endef;
.def register_tcr2; .scl 13; .type 0x4; .endef;
.def register_tpr; .scl 13; .type 0xd; .endef;
.def register_trr; .scl 13; .type 0x4; .endef;
.def register_chan_base; .scl 13; .type 0xe; .endef;
.def register_engine_base; .scl 13; .type 0xe; .endef;
.def register_p31_24; .scl 13; .type 0x2; .endef;
.def register_p23_16; .scl 13; .type 0x2; .endef;
.def register_p15_8; .scl 13; .type 0x2; .endef;
.def register_p7_0; .scl 13; .type 0x2; .endef;
.def register_p31_16; .scl 13; .type 0x3; .endef;
.def register_p15_0; .scl 13; .type 0x3; .endef;
.def register_p31_0; .scl 13; .type 0x5; .endef;
.def register_cc; .scl 13; .tag cc_struct; .type 0x0; .endef;

.def tpr_struct; .scl 10; .type 0x8; .size 2; .endef;
.def TICKS; .val 0x6; .scl 18; .size 10; .type 0xd; .endef;
.def TPR10; .val 0x5; .scl 18; .size 1; .type 0xd; .endef;
.def HOLD; .val 0x4; .scl 18; .size 1; .type 0xd; .endef;
.def IPH; .val 0x3; .scl 18; .size 1; .type 0xd; .endef;
.def MISSCNT; .val 0x1; .scl 18; .size 2; .type 0xd; .endef;
.def LAST; .val 0x0; .scl 18; .size 1; .type 0xd; .endef;
.def; .eos; .scl 102; .endef;

.file "C:\\GIT\\ASHWARE\\Builds\\Include\\etpu_std.h";
.file "C:\\GIT\\ASHWARE\\Builds\\Include\\ETpu_Lib.h";
.file "C:\\GIT\\ASHWARE\\Builds\\Include\\etpu_std.h";
.file "..\..\src\etpuc_inj.c";
.file "..\..\src\etpuc_inj.h";

.def AW_ANONYMOUS_STRUCT_0; .scl 10; .type 0x8; .size 4; .endef;
.def bits31_24; .val 0x0; .scl 8; .type 0xc; .endef;
.def bits23_0; .val 0x1; .scl 8; .type 0xe; .endef;
.def; .eos; .scl 102; .endef;


.def INJ_32_BIT; .scl 12; .type 0x9; .size 4; .endef;
.def parts; .val 0x0; .scl 11; .tag AW_ANONYMOUS_STRUCT_0; .size 4; .type 0x8; .endef;
.def all; .val 0x0; .scl 11; .type 0xf; .endef;
.def; .eos; .scl 102; .endef;


.def INJ_PHASE; .scl 10; .type 0x8; .size 4; .endef;
.def dmas_outputs; .val 0x0; .scl 8; .type 0x2; .const 0x1; .endef;
.def duration; .val 0x1; .scl 8; .type 0xe; .const 0x1; .endef;
.def; .eos; .scl 102; .endef;


.def INJ_INJECTION; .scl 10; .type 0x8; .size 8; .endef;
.def phase_count; .val 0x0; .scl 8; .type 0xc; .const 0x1; .endef;
.def p_phase_first; .val 0x1; .scl 8; .tag INJ_PHASE; .type 0x18; .const 0x1; .endef;
.def angle_start; .val 0x5; .scl 8; .type 0x4; .const 0x1; .endef;
.def; .eos; .scl 102; .endef;


.def INJ_GLOBAL_PARAMS; .scl 10; .type 0x8; .size 4; .endef;
.def active_bank_chans; .val 0x0; .scl 8; .tag INJ_32_BIT; .size 4; .type 0x9; .endef;
.def; .eos; .scl 102; .endef;

.line 141;
.def INJ; .scl 201; .type 0x80000006; .size 40; .endef;
.line 115;
.def _INJ_AW613E_INIT_; .val 0xffffffff; .scl 5; .etpuclass INJ; .type 0x80000022; .endef;
.line 116;
.def _INJ_AW613E_STOP_; .val 0xffffffff; .scl 5; .etpuclass INJ; .type 0x80000022; .endef;
.line 117;
.def _INJ_AW613E_UPDATE_; .val 0xffffffff; .scl 5; .etpuclass INJ; .type 0x80000022; .endef;
.line 118;
.def _INJ_AW613E_START_ANGLE_1ST_; .val 0xffffffff; .scl 5; .etpuclass INJ; .type 0x80000022; .endef;
.line 119;
.def _INJ_AW613E_PHASE_; .val 0xffffffff; .scl 5; .etpuclass INJ; .type 0x80000022; .endef;
.line 120;
.def _INJ_AW613E_STOP_ANGLE_WHILE_ACTIVE_; .val 0xffffffff; .scl 5; .etpuclass INJ; .type 0x80000022; .endef;
.line 121;
.def _INJ_AW613E_STOP_ANGLE_POST_ACTIVE_; .val 0xffffffff; .scl 5; .etpuclass INJ; .type 0x80000022; .endef;
.line 122;
.def _INJ_AW613E_IRQ_ANGLE_; .val 0xffffffff; .scl 5; .etpuclass INJ; .type 0x80000022; .endef;
.line 129;
.def _INJ_AW613E_ScheduleStartAngle1st_; .val 0xffffffff; .scl 5; .etpuclass INJ; .type 0x21; .endef;
.line 130;
.def _INJ_AW613E_ScheduleIRQAngle_; .val 0xffffffff; .scl 5; .etpuclass INJ; .type 0x21; .endef;
.line 131;
.def _INJ_AW613E_StopBankChannels_NoReturn_; .val 0xffffffff; .scl 5; .etpuclass INJ; .type 0x80000029; .endef;
.line 132;
.def _INJ_AW613E_Phase_NoReturn_; .val 0xffffffff; .scl 5; .etpuclass INJ; .type 0x80000029; .endef;
.line 133;
.def _INJ_AW613E_Init_NoReturn_; .val 0xffffffff; .scl 5; .etpuclass INJ; .type 0x80000029; .endef;

.file "..\..\src\etpuc_inj.c";
.file "..\..\src\etpuc_crank.h";
.line 163;
.def CRANK; .scl 201; .type 0x80000006; .size 92; .endef;
.line 123;
.def _CRANK_AW613E_INIT_; .val 0xffffffff; .scl 5; .etpuclass CRANK; .type 0x80000022; .endef;
.line 124;
.def _CRANK_AW613E_ANGLE_ADJUST_; .val 0xffffffff; .scl 5; .etpuclass CRANK; .type 0x80000022; .endef;
.line 125;
.def _CRANK_AW613E_CRANK_WITH_GAP_; .val 0xffffffff; .scl 5; .etpuclass CRANK; .type 0x80000022; .endef;
.line 126;
.def _CRANK_AW613E_CRANK_WITH_ADDITIONAL_TOOTH_; .val 0xffffffff; .scl 5; .etpuclass CRANK; .type 0x80000022; .endef;
.line 129;
.def _CRANK_AW613E_INIT_EMUL_; .val 0xffffffff; .scl 5; .etpuclass CRANK; .type 0x80000022; .endef;
.line 130;
.def _CRANK_AW613E_ANGLE_ADJUST_EMUL_; .val 0xffffffff; .scl 5; .etpuclass CRANK; .type 0x80000022; .endef;
.line 131;
.def _CRANK_AW613E_SET_SPEED_EMUL_; .val 0xffffffff; .scl 5; .etpuclass CRANK; .type 0x80000022; .endef;
.line 132;
.def _CRANK_AW613E_CRANK_WITH_GAP_EMUL_; .val 0xffffffff; .scl 5; .etpuclass CRANK; .type 0x80000022; .endef;
.line 140;
.def _CRANK_AW613E_ToothArray_Log_; .val 0xffffffff; .scl 5; .etpuclass CRANK; .type 0x21; .endef;
.line 141;
.def _CRANK_AW613E_Set_TRR_; .val 0xffffffff; .scl 5; .etpuclass CRANK; .type 0x21; .endef;
.line 146;
.def _CRANK_AW613E_Window_NoReturn_; .val 0xffffffff; .scl 5; .etpuclass CRANK; .type 0x80000029; .endef;
.line 148;
.def _CRANK_AW613E_WindowAcrossGap_NoReturn_; .val 0xffffffff; .scl 5; .etpuclass CRANK; .type 0x80000029; .endef;
.line 150;
.def _CRANK_AW613E_WindowCloseAt_NoReturn_; .val 0xffffffff; .scl 5; .etpuclass CRANK; .type 0x80000029; .endef;
.line 153;
.def _CRANK_AW613E_WindowClose_NoReturn_; .val 0xffffffff; .scl 5; .etpuclass CRANK; .type 0x80000029; .endef;
.line 154;
.def _CRANK_AW613E_Stall_NoReturn_; .val 0xffffffff; .scl 5; .etpuclass CRANK; .type 0x80000029; .endef;

.file "..\..\src\etpuc_inj.c";
.file "..\..\src\etpuc_set.h";
.file "..\..\src\etpuc_inj.c";
.line 791;
.pragmawrite h, (::ETPUfilename (cpu/etpu_inj_auto.h));
.line 792;
.pragmawrite h, (/**************************************************************** );
.line 793;
.pragmawrite h, (* WARNING: This file is automatically generated. DO NOT EDIT IT! );
.line 794;
.pragmawrite h, (*);
.line 795;
.pragmawrite h, (* FILE NAME: etpu_inj_auto.h  );
.line 797;
.pragmawrite h, (* ARCHITECTURE: eTPU );
.line 801;
.pragmawrite h, (*);
.line 802;
.pragmawrite h, (* This file was generated by: "etpuc_inj.c" on "Jan 12 2022", "17:19:32" );
.line 803;
.pragmawrite h, (*);
.line 804;
.pragmawrite h, (* This file provides an interface between eTPU code and CPU       );
.line 805;
.pragmawrite h, (* code. All references to the eTPU function should be made with   );
.line 806;
.pragmawrite h, (* information in this file. This allows only symbolic             );
.line 807;
.pragmawrite h, (* information to be referenced which allows the eTPU code to be   );
.line 808;
.pragmawrite h, (* optimized without effecting the CPU code.                       );
.line 809;
.pragmawrite h, (*****************************************************************/);
.line 810;
.pragmawrite h, (#ifndef _ETPU_INJ_AUTO_H_ );
.line 811;
.pragmawrite h, (#define _ETPU_INJ_AUTO_H_ );
.line 812;
.pragmawrite h, ( );
.line 813;
.pragmawrite h, (/* Function Configuration Information */);
.line 814;
.pragmawrite h, (::ETPUliteral(#define FS_ETPU_INJ_FUNCTION_NUMBER) ::ETPUfunctionnumber(INJ) );
.line 815;
.pragmawrite h, (::ETPUliteral(#define FS_ETPU_INJ_TABLE_SELECT) ::ETPUentrytype(INJ) );
.line 816;
.pragmawrite h, (::ETPUliteral(#define FS_ETPU_INJ_NUM_PARMS) ::ETPUram(INJ) );
.line 817;
.pragmawrite h, ( );
.line 818;
.pragmawrite h, (/* Host Service Request Definitions */);
.line 819;
.pragmawrite h, (::ETPUliteral(#define FS_ETPU_INJ_HSR_INIT)         7 );
.line 820;
.pragmawrite h, (::ETPUliteral(#define FS_ETPU_INJ_HSR_UPDATE)       3 );
.line 821;
.pragmawrite h, (::ETPUliteral(#define FS_ETPU_INJ_HSR_STOP)         5 );
.line 822;
.pragmawrite h, ( );
.line 823;
.pragmawrite h, (/* Function Mode Bit Definitions */);
.line 824;
.pragmawrite h, (::ETPUliteral(#define FS_ETPU_INJ_FM0_ACTIVE_HIGH)  (0) );
.line 825;
.pragmawrite h, (::ETPUliteral(#define FS_ETPU_INJ_FM0_ACTIVE_LOW)   (1) );
.line 826;
.pragmawrite h, (::ETPUliteral(#define FS_ETPU_INJ_FM1_CHANNEL_INJ)  ((0<<1)) );
.line 827;
.pragmawrite h, (::ETPUliteral(#define FS_ETPU_INJ_FM1_CHANNEL_BANK) ((1<<1)) );
.line 828;
.pragmawrite h, ( );
.line 829;
.pragmawrite h, (/* Parameter Definitions */);
.line 830;
.pragmawrite h, (::ETPUliteral(#define FS_ETPU_INJ_OFFSET_INJECTION_COUNT)   ::ETPUlocation (INJ, injection_count) );
.line 831;
.pragmawrite h, (::ETPUliteral(#define FS_ETPU_INJ_OFFSET_INJECTION_COUNTER) ::ETPUlocation (INJ, injection_counter) );
.line 832;
.pragmawrite h, (::ETPUliteral(#define FS_ETPU_INJ_OFFSET_PHASE_COUNTER)     ::ETPUlocation (INJ, phase_counter) );
.line 833;
.pragmawrite h, (::ETPUliteral(#define FS_ETPU_INJ_OFFSET_ERROR)             ::ETPUlocation (INJ, error) );
.line 834;
.pragmawrite h, (::ETPUliteral(#define FS_ETPU_INJ_OFFSET_INACTIVE_POLARITIES) ::ETPUlocation (INJ, inactive_polarities) );
.line 835;
.pragmawrite h, (::ETPUliteral(#define FS_ETPU_INJ_OFFSET_BANK_CHANS_COUNT)  ::ETPUlocation (INJ, bank_chan_count) );
.line 836;
.pragmawrite h, (::ETPUliteral(#define FS_ETPU_INJ_OFFSET_BANK_CHANS)        ::ETPUlocation (INJ, bank_chans) );
.line 837;
.pragmawrite h, (::ETPUliteral(#define FS_ETPU_INJ_OFFSET_BANK_CHANS_MASK)   ::ETPUlocation (INJ, bank_chans_mask) );
.line 838;
.pragmawrite h, (::ETPUliteral(#define FS_ETPU_INJ_OFFSET_P_INJECTION_FIRST) ::ETPUlocation (INJ, p_injection_first) );
.line 839;
.pragmawrite h, (::ETPUliteral(#define FS_ETPU_INJ_OFFSET_P_INJECTION)       ::ETPUlocation (INJ, p_injection) );
.line 840;
.pragmawrite h, (::ETPUliteral(#define FS_ETPU_INJ_OFFSET_P_PHASE)           ::ETPUlocation (INJ, p_phase) );
.line 841;
.pragmawrite h, (::ETPUliteral(#define FS_ETPU_INJ_OFFSET_ANGLE_IRQ)         ::ETPUlocation (INJ, angle_irq) );
.line 842;
.pragmawrite h, (::ETPUliteral(#define FS_ETPU_INJ_OFFSET_ANGLE_STOP)        ::ETPUlocation (INJ, angle_stop) );
.line 843;
.pragmawrite h, (::ETPUliteral(#define FS_ETPU_INJ_OFFSET_TDC_ANGLE)         ::ETPUlocation (INJ, tdc_angle) );
.line 844;
.pragmawrite h, (::ETPUliteral(#define FS_ETPU_INJ_OFFSET_TDC_ANGLE_ACTUAL)  ::ETPUlocation (INJ, tdc_angle_actual) );
.line 845;
.pragmawrite h, ( );
.line 846;
.pragmawrite h, (/* Global Variable Definitions */);
.line 847;
.pragmawrite h, (::ETPUliteral(#define FS_ETPU_INJ_OFFSET_ACTIVE_BANK_CHANS) ::ETPUlocation (inj_global.active_bank_chans) );
.line 848;
.pragmawrite h, ( );
.line 849;
.pragmawrite h, (/* Injection Structure Definitions */);
.line 850;
.pragmawrite h, (::ETPUliteral(#define FS_ETPU_INJ_OFFSET_PHASE_COUNT)   0x00 );
.line 851;
.pragmawrite h, (::ETPUliteral(#define FS_ETPU_INJ_OFFSET_P_PHASE_FIRST) 0x01 );
.line 852;
.pragmawrite h, (::ETPUliteral(#define FS_ETPU_INJ_OFFSET_ANGLE_START)   0x05 );
.line 853;
.pragmawrite h, ( );
.line 854;
.pragmawrite h, (/* Phase Structure Definitions */);
.line 855;
.pragmawrite h, (::ETPUliteral(#define FS_ETPU_INJ_OFFSET_DMAS_OUTPUTS)    0x00 );
.line 856;
.pragmawrite h, (::ETPUliteral(#define FS_ETPU_INJ_OFFSET_DURATION)        0x01 );
.line 857;
.pragmawrite h, ( );
.line 858;
.pragmawrite h, (/* Value Definitions */);
.line 859;
.pragmawrite h, (::ETPUliteral(#define FS_ETPU_INJ_INJECTION_STRUCT_SIZE)  0x08 );
.line 860;
.pragmawrite h, (::ETPUliteral(#define FS_ETPU_INJ_PHASE_STRUCT_SIZE)      0x04 );
.line 861;
.pragmawrite h, ( );
.line 862;
.pragmawrite h, (/* Error Flags Definitions */);
.line 863;
.pragmawrite h, (::ETPUliteral(#define FS_ETPU_INJ_ERROR_PREV_INJ_NOT_FINISHED) 0x01);
.line 864;
.pragmawrite h, (::ETPUliteral(#define FS_ETPU_INJ_ERROR_LATE_START_ANGLE_1ST)  0x02);
.line 865;
.pragmawrite h, (::ETPUliteral(#define FS_ETPU_INJ_ERROR_LATE_START_ANGLE_NTH)  0x04);
.line 866;
.pragmawrite h, (::ETPUliteral(#define FS_ETPU_INJ_ERROR_STOPPED_BY_STOP_ANGLE) 0x08);
.line 867;
.pragmawrite h, ( );
.line 868;
.pragmawrite h, (#endif );
.file "..\..\src\etpuc_inj.h";
.line 94;
.def _INJ_AW613E_injection_count_; .val 0x0; .scl 3; .etpuclass INJ; .type 0xc; .const 0x1; .endef;
.line 95;
.def _INJ_AW613E_p_injection_first_; .val 0x1; .scl 3; .etpuclass INJ; .tag INJ_INJECTION; .type 0x18; .const 0x1; .endef;
.line 96;
.def _INJ_AW613E_injection_counter_; .val 0x4; .scl 3; .etpuclass INJ; .type 0xc; .endef;
.line 97;
.def _INJ_AW613E_p_injection_; .val 0x5; .scl 3; .etpuclass INJ; .tag INJ_INJECTION; .type 0x18; .endef;
.line 98;
.def _INJ_AW613E_phase_counter_; .val 0x8; .scl 3; .etpuclass INJ; .type 0xc; .endef;
.line 99;
.def _INJ_AW613E_p_phase_; .val 0x9; .scl 3; .etpuclass INJ; .tag INJ_PHASE; .type 0x18; .endef;
.line 100;
.def _INJ_AW613E_bank_chan_count_; .val 0xc; .scl 3; .etpuclass INJ; .type 0xc; .const 0x1; .endef;
.line 101;
.def _INJ_AW613E_bank_chans_; .val 0xd; .scl 3; .etpuclass INJ; .type 0xe; .const 0x1; .endef;
.line 102;
.def _INJ_AW613E_bank_chans_mask_; .val 0x10; .scl 3; .etpuclass INJ; .tag INJ_32_BIT; .size 4; .type 0x9; .const 0x1; .endef;
.line 103;
.def _INJ_AW613E_error_; .val 0x14; .scl 3; .etpuclass INJ; .type 0xc; .endef;
.line 104;
.def _INJ_AW613E_angle_irq_; .val 0x15; .scl 3; .etpuclass INJ; .type 0x4; .const 0x1; .endef;
.line 105;
.def _INJ_AW613E_inactive_polarities_; .val 0x18; .scl 3; .etpuclass INJ; .type 0xc; .const 0x1; .endef;
.line 106;
.def _INJ_AW613E_angle_stop_; .val 0x19; .scl 3; .etpuclass INJ; .type 0x4; .const 0x1; .endef;
.line 107;
.def _INJ_AW613E_tdc_angle_; .val 0x1d; .scl 3; .etpuclass INJ; .type 0x4; .const 0x1; .endef;
.line 108;
.def _INJ_AW613E_tdc_angle_actual_; .val 0x21; .scl 3; .etpuclass INJ; .type 0x4; .endef;
.line 140;
.defentry; .etpuclass INJ; .ettable INJ; .endentry;
.line 141;
.def _INJ_AW613E___STACKBASE_; .val 0x25; .scl 3; .etpuclass INJ; .type 0x4; .endef;
.file "..\..\src\etpuc_crank.h";
.line -1;
.def _AW_CHAN_ALIAS_0; .val 0x54; .scl 3; .etpuclass CRANK; .type 0xf; .endef;
.line 81;
.def _CRANK_AW613E_blank_time_; .val 0x1; .scl 3; .etpuclass CRANK; .type 0xe; .const 0x1; .endef;
.line 82;
.def _CRANK_AW613E_tcr1_clock_source_div1_; .val 0x0; .scl 3; .etpuclass CRANK; .type 0xc; .const 0x1; .endef;
.line 83;
.def _CRANK_AW613E_tcr2_ticks_per_tooth_; .val 0x5; .scl 3; .etpuclass CRANK; .type 0xe; .const 0x1; .endef;
.line 84;
.def _CRANK_AW613E_tcr2_ticks_per_add_tooth_; .val 0x9; .scl 3; .etpuclass CRANK; .type 0xe; .const 0x1; .endef;
.line 85;
.def _CRANK_AW613E_last_tooth_tcr1_time_; .val 0xd; .scl 3; .etpuclass CRANK; .type 0xe; .endef;
.line 86;
.def _CRANK_AW613E_last_tooth_period_; .val 0x11; .scl 3; .etpuclass CRANK; .type 0xe; .endef;
.line 87;
.def _CRANK_AW613E_last_tooth_period_norm_; .val 0x15; .scl 3; .etpuclass CRANK; .type 0xe; .endef;
.line 88;
.def _CRANK_AW613E_last_last_tooth_period_norm_; .val 0x19; .scl 3; .etpuclass CRANK; .type 0xe; .endef;
.line 89;
.def _CRANK_AW613E_additional_tooth_period_; .val 0x1d; .scl 3; .etpuclass CRANK; .type 0xe; .endef;
.line 90;
.def _CRANK_AW613E_tcr2_adjustment_; .val 0x21; .scl 3; .etpuclass CRANK; .type 0x4; .endef;
.line 91;
.def _CRANK_AW613E_gap_ratio_; .val 0x25; .scl 3; .etpuclass CRANK; .type 0x8000000f; .const 0x1; .endef;
.line 92;
.def _CRANK_AW613E_win_ratio_normal_; .val 0x29; .scl 3; .etpuclass CRANK; .type 0x8000000f; .const 0x1; .endef;
.line 93;
.def _CRANK_AW613E_win_ratio_across_gap_; .val 0x2d; .scl 3; .etpuclass CRANK; .type 0x8000000f; .const 0x1; .endef;
.line 94;
.def _CRANK_AW613E_win_ratio_after_gap_; .val 0x31; .scl 3; .etpuclass CRANK; .type 0x8000000f; .const 0x1; .endef;
.line 95;
.def _CRANK_AW613E_win_ratio_after_timeout_; .val 0x35; .scl 3; .etpuclass CRANK; .type 0x8000000f; .const 0x1; .endef;
.line 96;
.def _CRANK_AW613E_first_tooth_timeout_; .val 0x39; .scl 3; .etpuclass CRANK; .type 0xe; .const 0x1; .endef;
.line 97;
.def _CRANK_AW613E_link_cam_; .val 0x3c; .scl 3; .etpuclass CRANK; .type 0xf; .const 0x1; .endef;
.line 98;
.def _CRANK_AW613E_link_1_; .val 0x40; .scl 3; .etpuclass CRANK; .type 0xf; .const 0x1; .endef;
.line 99;
.def _CRANK_AW613E_link_2_; .val 0x44; .scl 3; .etpuclass CRANK; .type 0xf; .const 0x1; .endef;
.line 100;
.def _CRANK_AW613E_link_3_; .val 0x48; .scl 3; .etpuclass CRANK; .type 0xf; .const 0x1; .endef;
.line 101;
.def _CRANK_AW613E_link_4_; .val 0x4c; .scl 3; .etpuclass CRANK; .type 0xf; .const 0x1; .endef;
.line 102;
.def _CRANK_AW613E_teeth_till_gap_; .val 0x4; .scl 3; .etpuclass CRANK; .type 0xc; .const 0x1; .endef;
.line 103;
.def _CRANK_AW613E_teeth_in_gap_; .val 0x8; .scl 3; .etpuclass CRANK; .type 0x2; .const 0x1; .endef;
.line 104;
.def _CRANK_AW613E_misscnt_mask_; .val 0x0; .scl 3; .etpuclass CRANK; .type 0xd; .const 0x1; .alias _AW_CHAN_ALIAS_0; .endef;
.line 105;
.def _CRANK_AW613E_teeth_per_cycle_; .val 0xc; .scl 3; .etpuclass CRANK; .type 0xc; .const 0x1; .endef;
.line 106;
.def _CRANK_AW613E_teeth_per_sync_; .val 0x10; .scl 3; .etpuclass CRANK; .type 0xc; .const 0x1; .endef;
.line 107;
.def _CRANK_AW613E_tooth_counter_gap_; .val 0x14; .scl 3; .etpuclass CRANK; .type 0xc; .endef;
.line 108;
.def _CRANK_AW613E_tooth_counter_cycle_; .val 0x18; .scl 3; .etpuclass CRANK; .type 0xc; .endef;
.line 109;
.def _CRANK_AW613E_blank_teeth_; .val 0x1c; .scl 3; .etpuclass CRANK; .type 0xc; .endef;
.line 110;
.def _CRANK_AW613E_state_; .val 0x20; .scl 3; .etpuclass CRANK; .type 0xc; .endef;
.line 111;
.def _CRANK_AW613E_error_; .val 0x24; .scl 3; .etpuclass CRANK; .type 0xc; .endef;
.line 112;
.def _CRANK_AW613E_tooth_period_log_; .val 0x51; .scl 3; .etpuclass CRANK; .type 0x1e; .const 0x1; .endef;
.line 161;
.defentry; .etpuclass CRANK; .ettable CRANK; .endentry;
.line 162;
.defentry; .etpuclass CRANK; .ettable CRANK_EMUL; .endentry;
.line 163;
.def _CRANK_AW613E___STACKBASE_; .val 0x59; .scl 3; .etpuclass CRANK; .type 0x4; .endef;
.file "..\..\src\etpuc_inj.c";
.line 128;
.line 128;
.def inj_global; .val 0x0; .scl 2; .tag INJ_GLOBAL_PARAMS; .size 4; .type 0x8; .volatile 0x1; .endef;
.file "C:\\GIT\\ASHWARE\\Builds\\Include\\ETpu_Hw.h";
.line 193;
.def chan; .val 0x28; .scl 4; .tag register_chan; .type 0x0; .endef;
.line 194;
.def ContextReg; .val 0x28; .scl 4; .tag register_chan; .type 0x0; .endef;
.line 195;
.def erta; .val 0x10; .scl 4; .tag register_erta; .type 0x0; .endef;
.line 196;
.def ertA; .val 0x10; .scl 4; .tag register_erta; .type 0x0; .endef;
.line 197;
.def ertb; .val 0x11; .scl 4; .tag register_ertb; .type 0x0; .endef;
.line 198;
.def ertB; .val 0x11; .scl 4; .tag register_ertb; .type 0x0; .endef;
.line 199;
.def tcr1; .val 0x20; .scl 4; .tag register_tcr1; .type 0x0; .endef;
.line 200;
.def tcr2; .val 0x21; .scl 4; .tag register_tcr2; .type 0x0; .endef;
.line 201;
.def tpr; .val 0x23; .scl 4; .tag register_tpr; .type 0x0; .endef;
.line 202;
.def trr; .val 0x22; .scl 4; .tag register_trr; .type 0x0; .endef;
.line 203;
.def link; .val 0x27; .scl 4; .tag register_link; .type 0x0; .endef;
.line 204;
.line 205;
.line 325;
.line 335;
.def tpr_reg; .val 0x23; .scl 4; .tag tpr_struct; .size 2; .type 0x8; .endef;
.line 336;
.def tpr_str; .val 0x23; .scl 4; .tag tpr_struct; .size 2; .type 0x8; .endef;
.file "C:\\GIT\\ASHWARE\\Builds\\Include\\ETpu_Lib.h";
.line 73;
.def _AtomicBegin; .val 0xffffffff; .scl 5; .type 0x21; .endef;
.line 74;
.def _AtomicEnd; .val 0xffffffff; .scl 5; .type 0x21; .endef;
.line 93;
.def _CoherentRead24_24; .val 0xffffffff; .scl 5; .type 0x21; .endef;
.line 94;
.def _CoherentRead24_8; .val 0xffffffff; .scl 5; .type 0x21; .endef;
.line 95;
.def _CoherentRead24_32; .val 0xffffffff; .scl 5; .type 0x21; .endef;
.line 99;
.def _CoherentWrite24_24; .val 0xffffffff; .scl 5; .type 0x21; .endef;
.line 100;
.def _CoherentWrite24_8; .val 0xffffffff; .scl 5; .type 0x21; .endef;
.line 101;
.def _CoherentWrite24_32; .val 0xffffffff; .scl 5; .type 0x21; .endef;
.line 120;
.def _OptimizationBoundaryAll; .val 0xffffffff; .scl 5; .type 0x21; .endef;
.line 126;
.def _OptimizationDisableStart; .val 0xffffffff; .scl 5; .type 0x21; .endef;
.line 127;
.def _OptimizationDisableEnd; .val 0xffffffff; .scl 5; .type 0x21; .endef;
.line 141;
.def _ExitThread; .val 0xffffffff; .scl 5; .type 0x21; .endef;
.line 157;
.def __rotate_right_1_b7_0; .val 0xffffffff; .scl 5; .type 0x24; .endef;
.line 161;
.def __rotate_right_1_b15_0; .val 0xffffffff; .scl 5; .type 0x24; .endef;
.line 165;
.def __rotate_right_1; .val 0xffffffff; .scl 5; .type 0x24; .endef;
.line 169;
.def __rotate_right_2n; .val 0xffffffff; .scl 5; .type 0x24; .endef;
.line 170;
.def __rotate_right_2n_sf8; .val 0xffffffff; .scl 5; .type 0x24; .endef;
.line 171;
.def __rotate_right_2n_sf16; .val 0xffffffff; .scl 5; .type 0x24; .endef;
.line 172;
.def __rotate_right_2n_sf24; .val 0xffffffff; .scl 5; .type 0x24; .endef;
.line 189;
.def __abs; .val 0xffffffff; .scl 5; .type 0x2e; .endef;
.line 190;
.def __abs_sf8; .val 0xffffffff; .scl 5; .type 0x2e; .endef;
.line 191;
.def __abs_sf16; .val 0xffffffff; .scl 5; .type 0x2e; .endef;
.line 192;
.def __abs_sf24; .val 0xffffffff; .scl 5; .type 0x2e; .endef;
.line 198;
.def __shift_right_SR; .val 0xffffffff; .scl 5; .type 0x21; .endef;
.line 203;
.def __shift_right_SR48; .val 0xffffffff; .scl 5; .type 0x24; .endef;
.line 204;
.def __shift_right_SR48_sf8; .val 0xffffffff; .scl 5; .type 0x24; .endef;
.line 205;
.def __shift_right_SR48_sf16; .val 0xffffffff; .scl 5; .type 0x24; .endef;
.line 206;
.def __shift_right_SR48_sf24; .val 0xffffffff; .scl 5; .type 0x24; .endef;
.line 214;
.def __shift_left_2n; .val 0xffffffff; .scl 5; .type 0x24; .endef;
.line 215;
.def __shift_left_2n_sf8; .val 0xffffffff; .scl 5; .type 0x24; .endef;
.line 216;
.def __shift_left_2n_sf16; .val 0xffffffff; .scl 5; .type 0x24; .endef;
.line 217;
.def __shift_left_2n_sf24; .val 0xffffffff; .scl 5; .type 0x24; .endef;
.line 218;
.def __shift_right_2n; .val 0xffffffff; .scl 5; .type 0x24; .endef;
.line 219;
.def __shift_right_2n_sf8; .val 0xffffffff; .scl 5; .type 0x24; .endef;
.line 220;
.def __shift_right_2n_sf16; .val 0xffffffff; .scl 5; .type 0x24; .endef;
.line 221;
.def __shift_right_2n_sf24; .val 0xffffffff; .scl 5; .type 0x24; .endef;
.line 230;
.def __bit_n_update; .val 0xffffffff; .scl 5; .type 0x24; .endef;
.line 231;
.def __bit_n_update_sf8; .val 0xffffffff; .scl 5; .type 0x24; .endef;
.line 232;
.def __bit_n_update_sf16; .val 0xffffffff; .scl 5; .type 0x24; .endef;
.line 233;
.def __bit_n_update_sf24; .val 0xffffffff; .scl 5; .type 0x24; .endef;
.line 242;
.def __bit_n_exchange_C; .val 0xffffffff; .scl 5; .type 0x24; .endef;
.line 243;
.def __bit_n_exchange_C_sf8; .val 0xffffffff; .scl 5; .type 0x24; .endef;
.line 244;
.def __bit_n_exchange_C_sf16; .val 0xffffffff; .scl 5; .type 0x24; .endef;
.line 245;
.def __bit_n_exchange_C_sf24; .val 0xffffffff; .scl 5; .type 0x24; .endef;
.line 256;
.def __mults8; .val 0xffffffff; .scl 5; .type 0x21; .endef;
.line 257;
.def __mults16; .val 0xffffffff; .scl 5; .type 0x21; .endef;
.line 258;
.def __mults24; .val 0xffffffff; .scl 5; .type 0x21; .endef;
.line 260;
.def __multu8; .val 0xffffffff; .scl 5; .type 0x21; .endef;
.line 261;
.def __multu16; .val 0xffffffff; .scl 5; .type 0x21; .endef;
.line 262;
.def __multu24; .val 0xffffffff; .scl 5; .type 0x21; .endef;
.line 265;
.def __macs; .val 0xffffffff; .scl 5; .type 0x21; .endef;
.line 268;
.def __macu; .val 0xffffffff; .scl 5; .type 0x21; .endef;
.line 271;
.def __fmults8; .val 0xffffffff; .scl 5; .type 0x21; .endef;
.line 274;
.def __fmults16; .val 0xffffffff; .scl 5; .type 0x21; .endef;
.line 277;
.def __fmultu8; .val 0xffffffff; .scl 5; .type 0x21; .endef;
.line 280;
.def __fmultu16; .val 0xffffffff; .scl 5; .type 0x21; .endef;
.line 283;
.def __divu8; .val 0xffffffff; .scl 5; .type 0x21; .endef;
.line 284;
.def __divu16; .val 0xffffffff; .scl 5; .type 0x21; .endef;
.line 285;
.def __divu24; .val 0xffffffff; .scl 5; .type 0x21; .endef;
.line 347;
.def mulir; .val 0xffffffff; .scl 5; .type 0x24; .endef;
.line 348;
.def muliur; .val 0xffffffff; .scl 5; .type 0x2e; .endef;
.line 352;
.def muli8r8; .val 0xffffffff; .scl 5; .type 0x22; .endef;
.line 353;
.def muli8ur8; .val 0xffffffff; .scl 5; .type 0x2c; .endef;
.line 354;
.def muli16r16; .val 0xffffffff; .scl 5; .type 0x23; .endef;
.line 355;
.def muli16ur16; .val 0xffffffff; .scl 5; .type 0x2d; .endef;
.line 356;
.def muli24r8; .val 0xffffffff; .scl 5; .type 0x24; .endef;
.line 357;
.def muli24ur8; .val 0xffffffff; .scl 5; .type 0x2e; .endef;
.line 358;
.def muli24r16; .val 0xffffffff; .scl 5; .type 0x24; .endef;
.line 359;
.def muli24ur16; .val 0xffffffff; .scl 5; .type 0x2e; .endef;
.line 361;
.def muli8r8u; .val 0xffffffff; .scl 5; .type 0x22; .endef;
.line 362;
.def muli16r16u; .val 0xffffffff; .scl 5; .type 0x23; .endef;
.line 381;
.def _Error_handler_entry; .val 0xffffffff; .scl 5; .type 0x80000022; .endef;
.line 382;
.def _Error_handler_unexpected_thread; .val 0xffffffff; .scl 5; .type 0x80000022; .endef;
.line 383;
.def _Error_handler_scm_off_weeds; .val 0xffffffff; .scl 5; .type 0x80000029; .endef;
.line 384;
.def _Error_handler_fill_weeds; .val 0xffffffff; .scl 5; .type 0x80000029; .endef;
.file "..\..\src\etpuc_crank.h";
.line 123;
.def _CRANK_AW613E_INIT_; .val 0xffffffff; .scl 5; .type 0x80000022; .endef;
.line 124;
.def _CRANK_AW613E_ANGLE_ADJUST_; .val 0xffffffff; .scl 5; .type 0x80000022; .endef;
.line 125;
.def _CRANK_AW613E_CRANK_WITH_GAP_; .val 0xffffffff; .scl 5; .type 0x80000022; .endef;
.line 126;
.def _CRANK_AW613E_CRANK_WITH_ADDITIONAL_TOOTH_; .val 0xffffffff; .scl 5; .type 0x80000022; .endef;
.line 129;
.def _CRANK_AW613E_INIT_EMUL_; .val 0xffffffff; .scl 5; .type 0x80000022; .endef;
.line 130;
.def _CRANK_AW613E_ANGLE_ADJUST_EMUL_; .val 0xffffffff; .scl 5; .type 0x80000022; .endef;
.line 131;
.def _CRANK_AW613E_SET_SPEED_EMUL_; .val 0xffffffff; .scl 5; .type 0x80000022; .endef;
.line 132;
.def _CRANK_AW613E_CRANK_WITH_GAP_EMUL_; .val 0xffffffff; .scl 5; .type 0x80000022; .endef;
.line 140;
.def _CRANK_AW613E_ToothArray_Log_; .val 0xffffffff; .scl 5; .type 0x21; .endef;
.line 141;
.def _CRANK_AW613E_Set_TRR_; .val 0xffffffff; .scl 5; .type 0x21; .endef;
.line 146;
.def _CRANK_AW613E_Window_NoReturn_; .val 0xffffffff; .scl 5; .type 0x80000029; .endef;
.line 148;
.def _CRANK_AW613E_WindowAcrossGap_NoReturn_; .val 0xffffffff; .scl 5; .type 0x80000029; .endef;
.line 150;
.def _CRANK_AW613E_WindowCloseAt_NoReturn_; .val 0xffffffff; .scl 5; .type 0x80000029; .endef;
.line 153;
.def _CRANK_AW613E_WindowClose_NoReturn_; .val 0xffffffff; .scl 5; .type 0x80000029; .endef;
.line 154;
.def _CRANK_AW613E_Stall_NoReturn_; .val 0xffffffff; .scl 5; .type 0x80000029; .endef;
.line 170;
.def CRANK_Time_to_Angle_HighRes; .val 0xffffffff; .scl 5; .type 0x24; .endef;
.line 172;
.def CRANK_Time_to_Angle_LowRes; .val 0xffffffff; .scl 5; .type 0x24; .endef;
.line 180;
.line 180;
.def eng_pos_state; .scl 5; .type 0xc; .endef;
.line 181;
.line 181;
.def eng_cycle_tcr2_ticks; .scl 5; .type 0xe; .const 0x1; .endef;
.line 182;
.line 182;
.def eng_cycle_tcr2_start; .scl 5; .type 0xe; .endef;
.line 183;
.line 183;
.def eng_trr_norm; .scl 5; .type 0xe; .endef;
.file "..\..\src\etpuc_set.h";
.line 31;
.def Link4; .val 0xffffffff; .scl 5; .type 0x21; .endef;
.file "..\..\src\etpuc_inj.c";

.line 139;
.def _INJ_AW613E_ScheduleIRQAngle_; .val 0x0; .scl 2; .etpuclass INJ; .type 0x21; .endef;
.def; .bf; .scl 101; .tag _INJ_AW613E_ScheduleIRQAngle_; .endef;
.def _INJ_AW613E_ScheduleIRQAngle_; .val 0xffffffff; .scl 200; .type 0xe; .endef;
.def; .bb; .scl 100; .tag __INJ_AW613E_ScheduleIRQAngle__AW613E_SCOPEBLOCK_0_; .endef;

.line 142;
	// ram   p_23_0 = tdc_angle_actual;; // *((channel int24 *) 0x21;
.opstart 0xbfeffb88; .oplabel AID_6_0_,INJ,_INJ_AW613E_tdc_angle_actual_,0;  .opend;
	// alu    a = p+0x0;;
.opstart 0x00080419; .opend;
	// ram   p_23_0 = angle_irq;; // *((channel int24 *) 0x15;
.opstart 0xbfeffb85; .oplabel AID_6_0_,INJ,_INJ_AW613E_angle_irq_,0;  .opend;
	// alu    a = a-p, SampleFlags;;
.opstart 0x1c190eff; .opend;
	// alu    ertB = a+0x0;;
.opstart 0x00093419; .opend;

.line 143;
	// chan  clear MatchRecognitionLatchB;;
.opstart 0x7fffffbf; .opend;

.line 144;
	// chan  matchB = ertB, set MatchEnableLatchB;;
.opstart 0x7fffffdf; .opend;

.line 146;
	// chan  clear ChannelFlag1;;
.opstart 0x0fffff7e; .opend;

.line 147;
.def; .eb; .scl 100; .tag __INJ_AW613E_ScheduleIRQAngle__AW613E_SCOPEBLOCK_0_; .stackUsage 0; .scratchpadUsage 0; .endef;
.def __INJ_AW613E_ScheduleIRQAngle__AW613E_FUNC_END_; .val 0xffffffff; .scl 200; .type 0xe; .endef;
	// seq  return, flush;;
.opstart 0xffdfcef9; .opend;
.def; .ef; .scl 101; .tag _INJ_AW613E_ScheduleIRQAngle_; .endef;
.breakable;

.file "..\..\src\etpuc_inj.c";

.line 153;
.def _INJ_AW613E_ScheduleStartAngle1st_; .val 0x0; .scl 2; .etpuclass INJ; .type 0x21; .endef;
.def; .bf; .scl 101; .tag _INJ_AW613E_ScheduleStartAngle1st_; .endef;
.def _INJ_AW613E_ScheduleStartAngle1st_; .val 0xffffffff; .scl 200; .type 0xe; .endef;
.def; .bb; .scl 100; .tag __INJ_AW613E_ScheduleStartAngle1st__AW613E_SCOPEBLOCK_1_; .endef;
.def p_inj; .val 0x1e; .scl 4; .tag INJ_INJECTION; .type 0x18; .const 0x1; .endef;

.line 158;
	// chan  clear ChannelFlag0;;
.opstart 0x0ffffe7e; .opend;

.line 161;
	// ram   p_31_24 = injection_count;; // *((channel int8 *) 0x0;
.opstart 0xcfeff980; .oplabel AID_6_0_,INJ,_INJ_AW613E_injection_count_,0;  .opend;
	// alu    a = p_31_24+0x0;;
.opstart 0x00020419; .opend;
	// alu    p_31_24 = a+0x0, SampleFlags;;
.opstart 0x0009a019; .opend;
	// seq  if z==true then goto ScheduleStartAngle1st__AW613E_END_IFELSE_0, flush;;
.opstart 0xf0d80007; .oplabel BAF_13_0_,StandardTest,__INJ_AW613E_ScheduleStartAngle1st__AW613E_END_IFELSE_0_,0;  .opend;
.def __INJ_AW613E_ScheduleStartAngle1st__AW613E_THEN_IF_ELSE_0_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 162;
.def; .bb; .scl 100; .tag __INJ_AW613E_ScheduleStartAngle1st__AW613E_SCOPEBLOCK_2_; .endef;

.line 164;
	// ram   p_23_0 = p_injection_first;; // *((channel int24 *) 0x1;
.opstart 0xbfeffb80; .oplabel AID_6_0_,INJ,_INJ_AW613E_p_injection_first_,0;  .opend;
	// alu    sr = p+0x0;;
.opstart 0x00081419; .opend;

.line 165;
	// alu    a = sr+0x4;;
.opstart 0x001a0419; .opend;
	// alu    diob = a+0x0;;
.opstart 0x00094419; .opend;
	// ram   p_23_0 = *((int24 *) diob);;
.opstart 0x1feffbdf; .opend;
	// alu    a = p+0x0;;
.opstart 0x00080419; .opend;
	// ram   p_23_0 = tdc_angle_actual;; // *((channel int24 *) 0x21;
.opstart 0xbfeffb88; .oplabel AID_6_0_,INJ,_INJ_AW613E_tdc_angle_actual_,0;  .opend;
	// alu    a = p-a, SampleFlags;;
.opstart 0x1c380eff; .opend;
	// alu    ertA = a+0x0;;
.opstart 0x00092419; .opend;

.line 167;
	// alu    a = tcr2+0x0;;
.opstart 0x000d0419; .opend;
	// alu    a = ertA-a, SampleFlags;;
.opstart 0x1c3e0eff; .opend;
	// alu    nil = a+0x0, SampleFlags;;
.opstart 0x0009f019; .opend;
	// seq  if n==true then goto ScheduleStartAngle1st__AW613E_ELSE_IFELSE_1, flush;;
.opstart 0xf0580007; .oplabel BAF_13_0_,StandardTest,__INJ_AW613E_ScheduleStartAngle1st__AW613E_ELSE_IFELSE_1_,0;  .opend;
.def __INJ_AW613E_ScheduleStartAngle1st__AW613E_THEN_IF_ELSE_1_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 168;
.def; .bb; .scl 100; .tag __INJ_AW613E_ScheduleStartAngle1st__AW613E_SCOPEBLOCK_3_; .endef;

.line 169;
	// chan  FutureOutputPin no change on matchA;;
.opstart 0x48ffffff; .opend;

.line 170;
	// chan  ActionUnitA: tcr2 >= match, capture tcr1;;
.opstart 0x4ff1ffff; .opend;

.line 171;
	// chan  clear MatchRecognitionLatchA;;
.opstart 0x7ffffeff; .opend;

.line 172;
	// chan  matchA = ertA, set MatchEnableLatchA;;
.opstart 0x7fffff7f; .opend;

.line 173;
.def; .eb; .scl 100; .tag __INJ_AW613E_ScheduleStartAngle1st__AW613E_SCOPEBLOCK_3_; .stackUsage 0; .scratchpadUsage 0; .endef;
	// seq  goto ScheduleStartAngle1st__AW613E_END_IFELSE_1, flush;;
.opstart 0xf7d00007; .oplabel BAF_13_0_,StandardTest,__INJ_AW613E_ScheduleStartAngle1st__AW613E_END_IFELSE_1_,0;  .opend;
.def __INJ_AW613E_ScheduleStartAngle1st__AW613E_ELSE_IFELSE_1_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 175;
.def; .bb; .scl 100; .tag __INJ_AW613E_ScheduleStartAngle1st__AW613E_SCOPEBLOCK_4_; .endef;

.line 178;
	// ram   p_31_24 = error;; // *((channel int8 *) 0x14;
.opstart 0xcfeff985; .oplabel AID_6_0_,INJ,_INJ_AW613E_error_,0;  .opend;
	// alu    a = p_31_24+0x0;;
.opstart 0x00020419; .opend;
	// alu    a = a | 0x2, SampleFlags;;
.opstart 0x08090bc2; .opend;
	// alu    p_31_24 = a+0x0;;
.opstart 0x0009a419; .opend;
	// ram   error = p_31_24;; // *((channel int8 *) 0x14;
.opstart 0xcffff985; .oplabel AID_6_0_,INJ,_INJ_AW613E_error_,0;  .opend;

.line 179;
.def; .eb; .scl 100; .tag __INJ_AW613E_ScheduleStartAngle1st__AW613E_SCOPEBLOCK_4_; .stackUsage 0; .scratchpadUsage 0; .endef;
.def __INJ_AW613E_ScheduleStartAngle1st__AW613E_END_IFELSE_1_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 180;
.def; .eb; .scl 100; .tag __INJ_AW613E_ScheduleStartAngle1st__AW613E_SCOPEBLOCK_2_; .stackUsage 0; .scratchpadUsage 0; .endef;
.def __INJ_AW613E_ScheduleStartAngle1st__AW613E_END_IFELSE_0_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 181;
.def; .eb; .scl 100; .tag __INJ_AW613E_ScheduleStartAngle1st__AW613E_SCOPEBLOCK_1_; .stackUsage 0; .scratchpadUsage 0; .endef;
.def __INJ_AW613E_ScheduleStartAngle1st__AW613E_FUNC_END_; .val 0xffffffff; .scl 200; .type 0xe; .endef;
	// seq  return, flush;;
.opstart 0xffdfcef9; .opend;
.def; .ef; .scl 101; .tag _INJ_AW613E_ScheduleStartAngle1st_; .endef;
.breakable;

.file "..\..\src\etpuc_inj.c";

.line 189;
.def _INJ_AW613E_StopBankChannels_NoReturn_; .val 0x0; .scl 2; .etpuclass INJ; .type 0x80000029; .endef;
.def; .bf; .scl 101; .tag _INJ_AW613E_StopBankChannels_NoReturn_; .endef;
.def _INJ_AW613E_StopBankChannels_NoReturn_; .val 0xffffffff; .scl 200; .type 0xe; .endef;
.def; .bb; .scl 100; .tag __INJ_AW613E_StopBankChannels_NoReturn__AW613E_SCOPEBLOCK_5_; .endef;
.def cnt; .val 0x1e; .scl 4; .type 0xe; .endef;
.def chn; .val 0x1f; .scl 4; .type 0xe; .endef;
.def out; .val 0x26; .scl 4; .type 0xe; .endef;

.line 195;
	// ram   p_31_24 = bank_chan_count;; // *((channel int8 *) 0xC;
.opstart 0xcfeff983; .oplabel AID_6_0_,INJ,_INJ_AW613E_bank_chan_count_,0;  .opend;
	// alu    a = p_31_24+0x0;;
.opstart 0x00020419; .opend;
	// alu    sr = a+0x0;;
.opstart 0x00091419; .opend;

.line 196;
	// ram   p_23_0 = bank_chans;; // *((channel int24 *) 0xD;
.opstart 0xbfeffb83; .oplabel AID_6_0_,INJ,_INJ_AW613E_bank_chans_,0;  .opend;
	// alu    diob = p+0x0;;
.opstart 0x00084419; .opend;

.line 197;
	// ram   p_31_24 = inactive_polarities;; // *((channel int8 *) 0x18;
.opstart 0xcfeff986; .oplabel AID_6_0_,INJ,_INJ_AW613E_inactive_polarities_,0;  .opend;
	// alu    a = p_31_24+0x0;;
.opstart 0x00020419; .opend;
	// alu    d = a+0x0;;
.opstart 0x00095411; .opend;

.line 198;
.def __INJ_AW613E_StopBankChannels_NoReturn__AW613E___WhileLoop_0_; .val 0xffffffff; .scl 200; .type 0xe; .endef;
.def __INJ_AW613E_StopBankChannels_NoReturn__AW613E___ContinueLoc_0_; .val 0xffffffff; .scl 200; .type 0xe; .endef;
	// output the while loop test

	// alu    nil = sr+0x0, SampleFlags;;
.opstart 0x000af019; .opend;
	// seq  if z==true then goto StopBankChannels_NoReturn__AW613E___BreakLoc_0, flush;;
.opstart 0xf0d80007; .oplabel BAF_13_0_,StandardTest,__INJ_AW613E_StopBankChannels_NoReturn__AW613E___BreakLoc_0_,0;  .opend;
.def __INJ_AW613E_StopBankChannels_NoReturn__AW613E___LoopStart_0_; .val 0xffffffff; .scl 200; .type 0xe; .endef;
	// output the while loop contents


.line 199;
.def; .bb; .scl 100; .tag __INJ_AW613E_StopBankChannels_NoReturn__AW613E_SCOPEBLOCK_6_; .endef;

.line 200;
	// alu    a = diob+0x0;;
.opstart 0x000b0419; .opend;
	// alu    chan = a+0x0;;
.opstart 0x00094411; .opend;

.line 201;
	// alu    a = ((u24) 0)+0x1;;
.opstart 0x00000428; .opend;
	// alu    a = sr-a, SampleFlags;;
.opstart 0x1c3a0eff; .opend;
	// alu    sr = a+0x0;;
.opstart 0x00091419; .opend;

.line 202;
	// alu    a = diob >> 8, SampleFlags;;
.opstart 0x180b0bd2; .opend;
	// alu    diob = a+0x0;;
.opstart 0x00094419; .opend;

.line 203;
	// alu    a = (d+0x0) >> 1, SampleFlags;;
.opstart 0x18040792; .opend;
	// alu    d = a+0x0;;
.opstart 0x00095411; .opend;

.line 205;
	// chan  clear MatchEnableLatches;;
.opstart 0x7ffffffd; .opend;

.line 207;
	// chan  clear MatchRecognitionLatchA;;
.opstart 0x7ffffeff; .opend;

.line 208;
	// chan  clear MatchRecognitionLatchB;;
.opstart 0x7fffffbf; .opend;

.line 210;
	// alu    p_31_24 = d+0x0;;
.opstart 0x0004a419; .opend;
	// seq  if p.bit(24)==false then goto StopBankChannels_NoReturn__AW613E_ELSE_IFELSE_2, flush;;
.opstart 0xf5100007; .oplabel BAF_13_0_,StandardTest,__INJ_AW613E_StopBankChannels_NoReturn__AW613E_ELSE_IFELSE_2_,0;  .opend;
.def __INJ_AW613E_StopBankChannels_NoReturn__AW613E_THEN_IF_ELSE_2_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 211;
.def; .bb; .scl 100; .tag __INJ_AW613E_StopBankChannels_NoReturn__AW613E_SCOPEBLOCK_7_; .endef;

.line 212;
	// chan  CurrentOutputPin = high;;
.opstart 0x7ffffbfe; .opend;

.line 213;
.def; .eb; .scl 100; .tag __INJ_AW613E_StopBankChannels_NoReturn__AW613E_SCOPEBLOCK_7_; .stackUsage 0; .scratchpadUsage 0; .endef;
	// seq  goto StopBankChannels_NoReturn__AW613E_END_IFELSE_2, flush;;
.opstart 0xf7d00007; .oplabel BAF_13_0_,StandardTest,__INJ_AW613E_StopBankChannels_NoReturn__AW613E_END_IFELSE_2_,0;  .opend;
.def __INJ_AW613E_StopBankChannels_NoReturn__AW613E_ELSE_IFELSE_2_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 215;
.def; .bb; .scl 100; .tag __INJ_AW613E_StopBankChannels_NoReturn__AW613E_SCOPEBLOCK_8_; .endef;

.line 216;
	// chan  CurrentOutputPin = low;;
.opstart 0x7ffffdfe; .opend;

.line 217;
.def; .eb; .scl 100; .tag __INJ_AW613E_StopBankChannels_NoReturn__AW613E_SCOPEBLOCK_8_; .stackUsage 0; .scratchpadUsage 0; .endef;
.def __INJ_AW613E_StopBankChannels_NoReturn__AW613E_END_IFELSE_2_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 218;
.def; .eb; .scl 100; .tag __INJ_AW613E_StopBankChannels_NoReturn__AW613E_SCOPEBLOCK_6_; .stackUsage 0; .scratchpadUsage 0; .endef;
	// seq  goto StopBankChannels_NoReturn__AW613E___WhileLoop_0, flush;;
.opstart 0xf7d00007; .oplabel BAF_13_0_,StandardTest,__INJ_AW613E_StopBankChannels_NoReturn__AW613E___WhileLoop_0_,0;  .opend;
.def __INJ_AW613E_StopBankChannels_NoReturn__AW613E___BreakLoc_0_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 219;
.def; .eb; .scl 100; .tag __INJ_AW613E_StopBankChannels_NoReturn__AW613E_SCOPEBLOCK_5_; .stackUsage 0; .scratchpadUsage 0; .endef;
.def __INJ_AW613E_StopBankChannels_NoReturn__AW613E_FUNC_END_; .val 0xffffffff; .scl 200; .type 0xe; .endef;
	// seq   end;;
.opstart 0x0fffffff; .opend;
.def; .ef; .scl 101; .tag _INJ_AW613E_StopBankChannels_NoReturn_; .endef;
.breakable;

.file "..\..\src\etpuc_inj.c";

.line 225;
.def _INJ_AW613E_Phase_NoReturn_; .val 0x0; .scl 2; .etpuclass INJ; .type 0x80000029; .endef;
.def; .bf; .scl 101; .tag _INJ_AW613E_Phase_NoReturn_; .endef;
.def _INJ_AW613E_Phase_NoReturn_; .val 0xffffffff; .scl 200; .type 0xe; .endef;
.def; .bb; .scl 100; .tag __INJ_AW613E_Phase_NoReturn__AW613E_SCOPEBLOCK_9_; .endef;
.def out; .val 0x1e; .scl 4; .type 0xe; .endef;
.def cnt; .val 0x26; .scl 4; .type 0xe; .endef;
.def chn; .val 0x14; .scl 4; .type 0xe; .endef;
.def p_inj; .val 0x26; .scl 4; .tag INJ_INJECTION; .type 0x18; .endef;
.def p_ph; .val 0x1e; .scl 4; .tag INJ_PHASE; .type 0x18; .endef;
.def end; .val 0x25; .scl 4; .type 0xe; .endef;
.def dma; .val 0x14; .scl 4; .type 0xe; .endef;

.line 236;
	// ram   p_23_0 = p_injection;; // *((channel int24 *) 0x5;
.opstart 0xbfeffb81; .oplabel AID_6_0_,INJ,_INJ_AW613E_p_injection_,0;  .opend;
	// alu    d = p+0x0;;
.opstart 0x00085411; .opend;

.line 237;
	// ram   p_23_0 = p_phase;; // *((channel int24 *) 0x9;
.opstart 0xbfeffb82; .oplabel AID_6_0_,INJ,_INJ_AW613E_p_phase_,0;  .opend;
	// alu    sr = p+0x0;;
.opstart 0x00081419; .opend;

.line 238;
	// alu    a = sr+0x0;;
.opstart 0x000a0419; .opend;
	// alu    diob = a+0x0;;
.opstart 0x00094419; .opend;
	// ram   p_23_0 = *((int24 *) diob);;
.opstart 0x1feffbdf; .opend;
	// alu    a = ertA+p, SampleFlags;;
.opstart 0x1f1e0eff; .opend;
	// alu    cReg = a+0x0;;
.opstart 0x00090411; .opend;

.line 239;
	// alu    diob = sr+0x0;;
.opstart 0x000a4419; .opend;
	// ram   p_31_24 = *((int8 *) diob);;
.opstart 0xffeff9d9; .opend;
	// alu    p = p_31_24+0x0;;
.opstart 0x00027419; .opend;
	// alu    p = ((s8) p)+0x0;;
.opstart 0x3ff87874; .opend;
	// alu    macl = p+0x0;;
.opstart 0x00088411; .opend;

.line 242;
	// ram   p_31_24 = phase_counter;; // *((channel int8 *) 0x8;
.opstart 0xcfeff982; .oplabel AID_6_0_,INJ,_INJ_AW613E_phase_counter_,0;  .opend;
	// alu    a = p_31_24+0x0;;
.opstart 0x00020419; .opend;
	// alu    a = a+0x1, SampleFlags;;
.opstart 0x00090039; .opend;
	// alu    p_31_24 = a+0x0;;
.opstart 0x0009a419; .opend;
	// ram   phase_counter = p_31_24;; // *((channel int8 *) 0x8;
.opstart 0xcffff982; .oplabel AID_6_0_,INJ,_INJ_AW613E_phase_counter_,0;  .opend;

.line 244;
	// alu    diob = d+0x0;;
.opstart 0x00044419; .opend;
	// ram   p_31_24 = *((int8 *) diob);;
.opstart 0xffeff9d9; .opend;
	// alu    p = p_31_24+0x0;;
.opstart 0x00027419; .opend;
	// alu    a = p+0x0;;
.opstart 0x00080419; .opend;
	// ram   p_31_24 = phase_counter;; // *((channel int8 *) 0x8;
.opstart 0xcfeff982; .oplabel AID_6_0_,INJ,_INJ_AW613E_phase_counter_,0;  .opend;
	// alu    b = p_31_24+0x0;;
.opstart 0x00023411; .opend;
	// alu    p_31_24 = b-a, SampleFlags;;
.opstart 0x1c33aeef; .opend;
	// seq  if LowerOrEqual==true then goto Phase_NoReturn__AW613E_ELSE_IFELSE_3, flush;;
.opstart 0xf4d80007; .oplabel BAF_13_0_,StandardTest,__INJ_AW613E_Phase_NoReturn__AW613E_ELSE_IFELSE_3_,0;  .opend;
.def __INJ_AW613E_Phase_NoReturn__AW613E_THEN_IF_ELSE_3_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 245;
.def; .bb; .scl 100; .tag __INJ_AW613E_Phase_NoReturn__AW613E_SCOPEBLOCK_10_; .endef;

.line 249;
	// ram   p_31_24 = injection_counter;; // *((channel int8 *) 0x4;
.opstart 0xcfeff981; .oplabel AID_6_0_,INJ,_INJ_AW613E_injection_counter_,0;  .opend;
	// alu    a = p_31_24+0x0;;
.opstart 0x00020419; .opend;
	// ram   p_31_24 = injection_count;; // *((channel int8 *) 0x0;
.opstart 0xcfeff980; .oplabel AID_6_0_,INJ,_INJ_AW613E_injection_count_,0;  .opend;
	// alu    b = p_31_24+0x0;;
.opstart 0x00023411; .opend;
	// alu    p_31_24 = b-a, SampleFlags;;
.opstart 0x1c33aeef; .opend;
	// seq  if LowerOrEqual==true then goto Phase_NoReturn__AW613E_ELSE_IFELSE_4, flush;;
.opstart 0xf4d80007; .oplabel BAF_13_0_,StandardTest,__INJ_AW613E_Phase_NoReturn__AW613E_ELSE_IFELSE_4_,0;  .opend;
.def __INJ_AW613E_Phase_NoReturn__AW613E_THEN_IF_ELSE_4_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 250;
.def; .bb; .scl 100; .tag __INJ_AW613E_Phase_NoReturn__AW613E_SCOPEBLOCK_11_; .endef;

.line 253;
	// ram   p_31_24 = injection_counter;; // *((channel int8 *) 0x4;
.opstart 0xcfeff981; .oplabel AID_6_0_,INJ,_INJ_AW613E_injection_counter_,0;  .opend;
	// alu    a = p_31_24+0x0;;
.opstart 0x00020419; .opend;
	// alu    a = a+0x1, SampleFlags;;
.opstart 0x00090039; .opend;
	// alu    p_31_24 = a+0x0;;
.opstart 0x0009a419; .opend;
	// ram   injection_counter = p_31_24;; // *((channel int8 *) 0x4;
.opstart 0xcffff981; .oplabel AID_6_0_,INJ,_INJ_AW613E_injection_counter_,0;  .opend;

.line 254;
	// alu    a = d+0x8, SampleFlags;;
.opstart 0x00240019; .opend;
	// alu    d = a+0x0;;
.opstart 0x00095411; .opend;

.line 255;
	// alu    p = d+0x0;;
.opstart 0x00047419; .opend;
	// ram   p_injection = p_23_0;; // *((channel int24 *) 0x5;
.opstart 0xbffffb81; .oplabel AID_6_0_,INJ,_INJ_AW613E_p_injection_,0;  .opend;

.line 257;
	// ram   phase_counter =  0;; // *((channel int8 *) 0x8;
.opstart 0xcffff902; .oplabel AID_6_0_,INJ,_INJ_AW613E_phase_counter_,0;  .opend;

.line 258;
	// alu    a = d+0x0;;
.opstart 0x00040419; .opend;
	// alu    diob = a+0x0;;
.opstart 0x00094419; .opend;
	// ram   p_23_0 = *((int24 *) diob);;
.opstart 0x1feffbdf; .opend;
	// ram   p_phase = p_23_0;; // *((channel int24 *) 0x9;
.opstart 0xbffffb82; .oplabel AID_6_0_,INJ,_INJ_AW613E_p_phase_,0;  .opend;

.line 261;
	// alu    a = d+0x4;;
.opstart 0x00140419; .opend;
	// alu    diob = a+0x0;;
.opstart 0x00094419; .opend;
	// ram   p_23_0 = *((int24 *) diob);;
.opstart 0x1feffbdf; .opend;
	// alu    a = p+0x0;;
.opstart 0x00080419; .opend;
	// ram   p_23_0 = tdc_angle_actual;; // *((channel int24 *) 0x21;
.opstart 0xbfeffb88; .oplabel AID_6_0_,INJ,_INJ_AW613E_tdc_angle_actual_,0;  .opend;
	// alu    a = p-a, SampleFlags;;
.opstart 0x1c380eff; .opend;
	// alu    ertA = a+0x0;;
.opstart 0x00092419; .opend;

.line 263;
	// alu    a = tcr2+0x0;;
.opstart 0x000d0419; .opend;
	// alu    a = ertA-a, SampleFlags;;
.opstart 0x1c3e0eff; .opend;
	// alu    nil = a+0x0, SampleFlags;;
.opstart 0x0009f019; .opend;
	// seq  if n==true then goto Phase_NoReturn__AW613E_ELSE_IFELSE_5, flush;;
.opstart 0xf0580007; .oplabel BAF_13_0_,StandardTest,__INJ_AW613E_Phase_NoReturn__AW613E_ELSE_IFELSE_5_,0;  .opend;
.def __INJ_AW613E_Phase_NoReturn__AW613E_THEN_IF_ELSE_5_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 264;
.def; .bb; .scl 100; .tag __INJ_AW613E_Phase_NoReturn__AW613E_SCOPEBLOCK_12_; .endef;

.line 266;
	// ram   diob = p_phase;; // *((channel int24 *) 0x9;
.opstart 0xbfefff82; .oplabel AID_6_0_,INJ,_INJ_AW613E_p_phase_,0;  .opend;
	// alu    a = diob+0x0;;
.opstart 0x000b0419; .opend;
	// alu    diob = a+0x0;;
.opstart 0x00094419; .opend;
	// ram   p_31_24 = *((int8 *) diob);;
.opstart 0xffeff9d9; .opend;
	// alu    p = p_31_24+0x0;;
.opstart 0x00027419; .opend;
	// alu    p = ((s8) p)+0x0;;
.opstart 0x3ff87874; .opend;
	// alu    sr = p+0x0;;
.opstart 0x00081419; .opend;

.line 267;
	// alu    p_31_24 = sr+0x0;;
.opstart 0x000aa419; .opend;
	// seq  if p.bit(24)==false then goto Phase_NoReturn__AW613E_ELSE_IFELSE_6, flush;;
.opstart 0xf5100007; .oplabel BAF_13_0_,StandardTest,__INJ_AW613E_Phase_NoReturn__AW613E_ELSE_IFELSE_6_,0;  .opend;
.def __INJ_AW613E_Phase_NoReturn__AW613E_THEN_IF_ELSE_6_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 268;
.def; .bb; .scl 100; .tag __INJ_AW613E_Phase_NoReturn__AW613E_SCOPEBLOCK_13_; .endef;

.line 269;
	// chan  FutureOutputPin high on matchA;;
.opstart 0x49ffffff; .opend;

.line 270;
.def; .eb; .scl 100; .tag __INJ_AW613E_Phase_NoReturn__AW613E_SCOPEBLOCK_13_; .stackUsage 0; .scratchpadUsage 0; .endef;
	// seq  goto Phase_NoReturn__AW613E_END_IFELSE_6, flush;;
.opstart 0xf7d00007; .oplabel BAF_13_0_,StandardTest,__INJ_AW613E_Phase_NoReturn__AW613E_END_IFELSE_6_,0;  .opend;
.def __INJ_AW613E_Phase_NoReturn__AW613E_ELSE_IFELSE_6_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 272;
.def; .bb; .scl 100; .tag __INJ_AW613E_Phase_NoReturn__AW613E_SCOPEBLOCK_14_; .endef;

.line 273;
	// chan  FutureOutputPin low on matchA;;
.opstart 0x4affffff; .opend;

.line 274;
.def; .eb; .scl 100; .tag __INJ_AW613E_Phase_NoReturn__AW613E_SCOPEBLOCK_14_; .stackUsage 0; .scratchpadUsage 0; .endef;
.def __INJ_AW613E_Phase_NoReturn__AW613E_END_IFELSE_6_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 275;
	// chan  clear MatchRecognitionLatchA;;
.opstart 0x7ffffeff; .opend;

.line 276;
	// chan  ActionUnitA: tcr2 >= match, capture tcr1;;
.opstart 0x4ff1ffff; .opend;

.line 277;
	// chan  matchA = ertA, set MatchEnableLatchA;;
.opstart 0x7fffff7f; .opend;

.line 279;
	// alu    cReg = ertA+0x0;;
.opstart 0x000e0411; .opend;

.line 280;
	// ram   p_31_24 = bank_chan_count;; // *((channel int8 *) 0xC;
.opstart 0xcfeff983; .oplabel AID_6_0_,INJ,_INJ_AW613E_bank_chan_count_,0;  .opend;
	// alu    a = p_31_24+0x0;;
.opstart 0x00020419; .opend;
	// alu    d = a+0x0;;
.opstart 0x00095411; .opend;

.line 281;
	// ram   p_23_0 = bank_chans;; // *((channel int24 *) 0xD;
.opstart 0xbfeffb83; .oplabel AID_6_0_,INJ,_INJ_AW613E_bank_chans_,0;  .opend;
	// alu    macl = p+0x0;;
.opstart 0x00088411; .opend;

.line 282;
.def __INJ_AW613E_Phase_NoReturn__AW613E___WhileLoop_1_; .val 0xffffffff; .scl 200; .type 0xe; .endef;
.def __INJ_AW613E_Phase_NoReturn__AW613E___ContinueLoc_1_; .val 0xffffffff; .scl 200; .type 0xe; .endef;
	// output the while loop test

	// alu    nil = d+0x0, SampleFlags;;
.opstart 0x0004f019; .opend;
	// seq  if z==true then goto Phase_NoReturn__AW613E___BreakLoc_1, flush;;
.opstart 0xf0d80007; .oplabel BAF_13_0_,StandardTest,__INJ_AW613E_Phase_NoReturn__AW613E___BreakLoc_1_,0;  .opend;
.def __INJ_AW613E_Phase_NoReturn__AW613E___LoopStart_1_; .val 0xffffffff; .scl 200; .type 0xe; .endef;
	// output the while loop contents


.line 283;
.def; .bb; .scl 100; .tag __INJ_AW613E_Phase_NoReturn__AW613E_SCOPEBLOCK_15_; .endef;

.line 284;
	// alu    a = ((u24) 0)+0x1;;
.opstart 0x00000428; .opend;
	// alu    a = d-a, SampleFlags;;
.opstart 0x1c340eff; .opend;
	// alu    d = a+0x0;;
.opstart 0x00095411; .opend;

.line 285;
	// alu    a = macl+0x0;;
.opstart 0x00080409; .opend;
	// alu    chan = a+0x0;;
.opstart 0x00094411; .opend;

.line 286;
	// alu    p = ((u24) 0)+0x2;;
.opstart 0x00000440; .opend;
	// alu    a = macl >> (2^^(p+1)), SampleFlags;;
.opstart 0x3b180fba; .opend;
	// alu    macl = a+0x0;;
.opstart 0x00098411; .opend;

.line 287;
	// alu    ertA = cReg+0x0;;
.opstart 0x00012409; .opend;

.line 288;
	// alu    a = (sr+0x0) >> 1, SampleFlags;;
.opstart 0x180a0792; .opend;
	// alu    sr = a+0x0;;
.opstart 0x00091419; .opend;

.line 289;
	// alu    p_31_24 = sr+0x0;;
.opstart 0x000aa419; .opend;
	// seq  if p.bit(24)==false then goto Phase_NoReturn__AW613E_ELSE_IFELSE_7, flush;;
.opstart 0xf5100007; .oplabel BAF_13_0_,StandardTest,__INJ_AW613E_Phase_NoReturn__AW613E_ELSE_IFELSE_7_,0;  .opend;
.def __INJ_AW613E_Phase_NoReturn__AW613E_THEN_IF_ELSE_7_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 290;
.def; .bb; .scl 100; .tag __INJ_AW613E_Phase_NoReturn__AW613E_SCOPEBLOCK_16_; .endef;

.line 291;
	// chan  FutureOutputPin high on matchA;;
.opstart 0x49ffffff; .opend;

.line 292;
.def; .eb; .scl 100; .tag __INJ_AW613E_Phase_NoReturn__AW613E_SCOPEBLOCK_16_; .stackUsage 0; .scratchpadUsage 0; .endef;
	// seq  goto Phase_NoReturn__AW613E_END_IFELSE_7, flush;;
.opstart 0xf7d00007; .oplabel BAF_13_0_,StandardTest,__INJ_AW613E_Phase_NoReturn__AW613E_END_IFELSE_7_,0;  .opend;
.def __INJ_AW613E_Phase_NoReturn__AW613E_ELSE_IFELSE_7_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 294;
.def; .bb; .scl 100; .tag __INJ_AW613E_Phase_NoReturn__AW613E_SCOPEBLOCK_17_; .endef;

.line 295;
	// chan  FutureOutputPin low on matchA;;
.opstart 0x4affffff; .opend;

.line 296;
.def; .eb; .scl 100; .tag __INJ_AW613E_Phase_NoReturn__AW613E_SCOPEBLOCK_17_; .stackUsage 0; .scratchpadUsage 0; .endef;
.def __INJ_AW613E_Phase_NoReturn__AW613E_END_IFELSE_7_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 297;
	// chan  clear MatchRecognitionLatchA;;
.opstart 0x7ffffeff; .opend;

.line 298;
	// chan  ActionUnitA: tcr2 >= match, capture tcr1;;
.opstart 0x4ff1ffff; .opend;

.line 299;
	// chan  matchA = ertA, set MatchEnableLatchA;;
.opstart 0x7fffff7f; .opend;

.line 300;
.def; .eb; .scl 100; .tag __INJ_AW613E_Phase_NoReturn__AW613E_SCOPEBLOCK_15_; .stackUsage 0; .scratchpadUsage 0; .endef;
	// seq  goto Phase_NoReturn__AW613E___WhileLoop_1, flush;;
.opstart 0xf7d00007; .oplabel BAF_13_0_,StandardTest,__INJ_AW613E_Phase_NoReturn__AW613E___WhileLoop_1_,0;  .opend;
.def __INJ_AW613E_Phase_NoReturn__AW613E___BreakLoc_1_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 301;
.def; .eb; .scl 100; .tag __INJ_AW613E_Phase_NoReturn__AW613E_SCOPEBLOCK_12_; .stackUsage 0; .scratchpadUsage 0; .endef;
	// seq  goto Phase_NoReturn__AW613E_END_IFELSE_5, flush;;
.opstart 0xf7d00007; .oplabel BAF_13_0_,StandardTest,__INJ_AW613E_Phase_NoReturn__AW613E_END_IFELSE_5_,0;  .opend;
.def __INJ_AW613E_Phase_NoReturn__AW613E_ELSE_IFELSE_5_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 303;
.def; .bb; .scl 100; .tag __INJ_AW613E_Phase_NoReturn__AW613E_SCOPEBLOCK_18_; .endef;

.line 306;
	// ram   p_31_24 = error;; // *((channel int8 *) 0x14;
.opstart 0xcfeff985; .oplabel AID_6_0_,INJ,_INJ_AW613E_error_,0;  .opend;
	// alu    a = p_31_24+0x0;;
.opstart 0x00020419; .opend;
	// alu    a = a | 0x4, SampleFlags;;
.opstart 0x08190b82; .opend;
	// alu    p_31_24 = a+0x0;;
.opstart 0x0009a419; .opend;
	// ram   error = p_31_24;; // *((channel int8 *) 0x14;
.opstart 0xcffff985; .oplabel AID_6_0_,INJ,_INJ_AW613E_error_,0;  .opend;

.line 308;
	// ram   p_31_24 = bank_chans_mask;; // *((channel int8 *) 0x10;
.opstart 0xcfeff984; .oplabel AID_6_0_,INJ,_INJ_AW613E_bank_chans_mask_,0;  .opend;
	// alu    a = p_31_24+0x0;;
.opstart 0x00020419; .opend;
	// alu    a = ((u24) 0)-a-1, SampleFlags;;
.opstart 0x1e3f0eff; .opend;
	// ram   p_31_24 = inj_global;; // *((global int8 *) 0x0;
.opstart 0xcfeff100; .oplabel AID_7_0_,AW6B2D_NAMELESS_CLASS,inj_global,0;  .opend;
	// alu    b = p_31_24+0x0;;
.opstart 0x00023411; .opend;
	// alu    a = b & a, SampleFlags;;
.opstart 0x3b330fb2; .opend;
	// alu    p_31_24 = a+0x0;;
.opstart 0x0009a419; .opend;
	// ram   inj_global = p_31_24;; // *((global int8 *) 0x0;
.opstart 0xcffff100; .oplabel AID_7_0_,AW6B2D_NAMELESS_CLASS,inj_global,0;  .opend;

.line 309;
	// ram   p_23_0 = bank_chans_mask;; // *((channel int24 *) 0x11;
.opstart 0xbfeffb84; .oplabel AID_6_0_,INJ,_INJ_AW613E_bank_chans_mask_,1;  .opend;
	// alu    a = ((u24) 0)-p-1, SampleFlags;;
.opstart 0x1e1f0eff; .opend;
	// ram   p_23_0 = inj_global;; // *((global int24 *) 0x1;
.opstart 0x9feffb00; .oplabel AID_7_0_,AW6B2D_NAMELESS_CLASS,inj_global,1;  .opend;
	// alu    a = p & a, SampleFlags;;
.opstart 0x2b380ff2; .opend;
	// alu    p = a+0x0;;
.opstart 0x00097419; .opend;
	// ram   inj_global = p_23_0;; // *((global int24 *) 0x1;
.opstart 0x9ffffb00; .oplabel AID_7_0_,AW6B2D_NAMELESS_CLASS,inj_global,1;  .opend;

.line 311;
	// chan  clear ChannelFlag0;;
.opstart 0x0ffffe7e; .opend;

.line 312;
	// chan  clear MatchRecognitionLatchA;;
.opstart 0x7ffffeff; .opend;

.line 313;
.def; .eb; .scl 100; .tag __INJ_AW613E_Phase_NoReturn__AW613E_SCOPEBLOCK_18_; .stackUsage 0; .scratchpadUsage 0; .endef;
.def __INJ_AW613E_Phase_NoReturn__AW613E_END_IFELSE_5_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 314;
.def; .eb; .scl 100; .tag __INJ_AW613E_Phase_NoReturn__AW613E_SCOPEBLOCK_11_; .stackUsage 0; .scratchpadUsage 0; .endef;
	// seq  goto Phase_NoReturn__AW613E_END_IFELSE_4, flush;;
.opstart 0xf7d00007; .oplabel BAF_13_0_,StandardTest,__INJ_AW613E_Phase_NoReturn__AW613E_END_IFELSE_4_,0;  .opend;
.def __INJ_AW613E_Phase_NoReturn__AW613E_ELSE_IFELSE_4_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 316;
.def; .bb; .scl 100; .tag __INJ_AW613E_Phase_NoReturn__AW613E_SCOPEBLOCK_19_; .endef;

.line 319;
	// ram   p_31_24 = bank_chans_mask;; // *((channel int8 *) 0x10;
.opstart 0xcfeff984; .oplabel AID_6_0_,INJ,_INJ_AW613E_bank_chans_mask_,0;  .opend;
	// alu    a = p_31_24+0x0;;
.opstart 0x00020419; .opend;
	// alu    a = ((u24) 0)-a-1, SampleFlags;;
.opstart 0x1e3f0eff; .opend;
	// ram   p_31_24 = inj_global;; // *((global int8 *) 0x0;
.opstart 0xcfeff100; .oplabel AID_7_0_,AW6B2D_NAMELESS_CLASS,inj_global,0;  .opend;
	// alu    b = p_31_24+0x0;;
.opstart 0x00023411; .opend;
	// alu    a = b & a, SampleFlags;;
.opstart 0x3b330fb2; .opend;
	// alu    p_31_24 = a+0x0;;
.opstart 0x0009a419; .opend;
	// ram   inj_global = p_31_24;; // *((global int8 *) 0x0;
.opstart 0xcffff100; .oplabel AID_7_0_,AW6B2D_NAMELESS_CLASS,inj_global,0;  .opend;

.line 320;
	// ram   p_23_0 = bank_chans_mask;; // *((channel int24 *) 0x11;
.opstart 0xbfeffb84; .oplabel AID_6_0_,INJ,_INJ_AW613E_bank_chans_mask_,1;  .opend;
	// alu    a = ((u24) 0)-p-1, SampleFlags;;
.opstart 0x1e1f0eff; .opend;
	// ram   p_23_0 = inj_global;; // *((global int24 *) 0x1;
.opstart 0x9feffb00; .oplabel AID_7_0_,AW6B2D_NAMELESS_CLASS,inj_global,1;  .opend;
	// alu    a = p & a, SampleFlags;;
.opstart 0x2b380ff2; .opend;
	// alu    p = a+0x0;;
.opstart 0x00097419; .opend;
	// ram   inj_global = p_23_0;; // *((global int24 *) 0x1;
.opstart 0x9ffffb00; .oplabel AID_7_0_,AW6B2D_NAMELESS_CLASS,inj_global,1;  .opend;

.line 322;
	// chan  clear ChannelFlag0;;
.opstart 0x0ffffe7e; .opend;

.line 323;
	// chan  clear MatchRecognitionLatchA;;
.opstart 0x7ffffeff; .opend;

.line 325;
	// ram   injection_counter =  0;; // *((channel int8 *) 0x4;
.opstart 0xcffff901; .oplabel AID_6_0_,INJ,_INJ_AW613E_injection_counter_,0;  .opend;

.line 326;
.def; .eb; .scl 100; .tag __INJ_AW613E_Phase_NoReturn__AW613E_SCOPEBLOCK_19_; .stackUsage 0; .scratchpadUsage 0; .endef;
.def __INJ_AW613E_Phase_NoReturn__AW613E_END_IFELSE_4_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 327;
.def; .eb; .scl 100; .tag __INJ_AW613E_Phase_NoReturn__AW613E_SCOPEBLOCK_10_; .stackUsage 0; .scratchpadUsage 0; .endef;
	// seq  goto Phase_NoReturn__AW613E_END_IFELSE_3, flush;;
.opstart 0xf7d00007; .oplabel BAF_13_0_,StandardTest,__INJ_AW613E_Phase_NoReturn__AW613E_END_IFELSE_3_,0;  .opend;
.def __INJ_AW613E_Phase_NoReturn__AW613E_ELSE_IFELSE_3_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 329;
.def; .bb; .scl 100; .tag __INJ_AW613E_Phase_NoReturn__AW613E_SCOPEBLOCK_20_; .endef;

.line 331;
	// alu    diob = d+0x0;;
.opstart 0x00044419; .opend;
	// ram   p_31_24 = *((int8 *) diob);;
.opstart 0xffeff9d9; .opend;
	// alu    p = p_31_24+0x0;;
.opstart 0x00027419; .opend;
	// alu    a = p+0x0;;
.opstart 0x00080419; .opend;
	// ram   p_31_24 = phase_counter;; // *((channel int8 *) 0x8;
.opstart 0xcfeff982; .oplabel AID_6_0_,INJ,_INJ_AW613E_phase_counter_,0;  .opend;
	// alu    b = p_31_24+0x0;;
.opstart 0x00023411; .opend;
	// alu    p_31_24 = b-a, SampleFlags;;
.opstart 0x1c33aeef; .opend;
	// seq  if cFlag==false then goto Phase_NoReturn__AW613E_ELSE_IFELSE_8, flush;;
.opstart 0xf0900007; .oplabel BAF_13_0_,StandardTest,__INJ_AW613E_Phase_NoReturn__AW613E_ELSE_IFELSE_8_,0;  .opend;
.def __INJ_AW613E_Phase_NoReturn__AW613E_THEN_IF_ELSE_8_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 332;
.def; .bb; .scl 100; .tag __INJ_AW613E_Phase_NoReturn__AW613E_SCOPEBLOCK_21_; .endef;

.line 334;
	// alu    a = sr+0x4, SampleFlags;;
.opstart 0x001a0019; .opend;
	// alu    sr = a+0x0;;
.opstart 0x00091419; .opend;

.line 335;
	// alu    p = sr+0x0;;
.opstart 0x000a7419; .opend;
	// ram   p_phase = p_23_0;; // *((channel int24 *) 0x9;
.opstart 0xbffffb82; .oplabel AID_6_0_,INJ,_INJ_AW613E_p_phase_,0;  .opend;

.line 336;
	// alu    diob = sr+0x0;;
.opstart 0x000a4419; .opend;
	// ram   p_31_24 = *((int8 *) diob);;
.opstart 0xffeff9d9; .opend;
	// alu    p = p_31_24+0x0;;
.opstart 0x00027419; .opend;
	// alu    p = ((s8) p)+0x0;;
.opstart 0x3ff87874; .opend;
	// alu    sr = p+0x0;;
.opstart 0x00081419; .opend;

.line 337;
.def; .eb; .scl 100; .tag __INJ_AW613E_Phase_NoReturn__AW613E_SCOPEBLOCK_21_; .stackUsage 0; .scratchpadUsage 0; .endef;
	// seq  goto Phase_NoReturn__AW613E_END_IFELSE_8, flush;;
.opstart 0xf7d00007; .oplabel BAF_13_0_,StandardTest,__INJ_AW613E_Phase_NoReturn__AW613E_END_IFELSE_8_,0;  .opend;
.def __INJ_AW613E_Phase_NoReturn__AW613E_ELSE_IFELSE_8_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 339;
.def; .bb; .scl 100; .tag __INJ_AW613E_Phase_NoReturn__AW613E_SCOPEBLOCK_22_; .endef;

.line 341;
	// ram   p_31_24 = inactive_polarities;; // *((channel int8 *) 0x18;
.opstart 0xcfeff986; .oplabel AID_6_0_,INJ,_INJ_AW613E_inactive_polarities_,0;  .opend;
	// alu    a = p_31_24+0x0;;
.opstart 0x00020419; .opend;
	// alu    sr = a+0x0;;
.opstart 0x00091419; .opend;

.line 342;
.def; .eb; .scl 100; .tag __INJ_AW613E_Phase_NoReturn__AW613E_SCOPEBLOCK_22_; .stackUsage 0; .scratchpadUsage 0; .endef;
.def __INJ_AW613E_Phase_NoReturn__AW613E_END_IFELSE_8_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 345;
	// alu    ertA = cReg+0x0;;
.opstart 0x00012409; .opend;

.line 346;
	// alu    p_31_24 = sr+0x0;;
.opstart 0x000aa419; .opend;
	// seq  if p.bit(24)==false then goto Phase_NoReturn__AW613E_ELSE_IFELSE_9, flush;;
.opstart 0xf5100007; .oplabel BAF_13_0_,StandardTest,__INJ_AW613E_Phase_NoReturn__AW613E_ELSE_IFELSE_9_,0;  .opend;
.def __INJ_AW613E_Phase_NoReturn__AW613E_THEN_IF_ELSE_9_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 347;
.def; .bb; .scl 100; .tag __INJ_AW613E_Phase_NoReturn__AW613E_SCOPEBLOCK_23_; .endef;

.line 348;
	// chan  FutureOutputPin high on matchA;;
.opstart 0x49ffffff; .opend;

.line 349;
.def; .eb; .scl 100; .tag __INJ_AW613E_Phase_NoReturn__AW613E_SCOPEBLOCK_23_; .stackUsage 0; .scratchpadUsage 0; .endef;
	// seq  goto Phase_NoReturn__AW613E_END_IFELSE_9, flush;;
.opstart 0xf7d00007; .oplabel BAF_13_0_,StandardTest,__INJ_AW613E_Phase_NoReturn__AW613E_END_IFELSE_9_,0;  .opend;
.def __INJ_AW613E_Phase_NoReturn__AW613E_ELSE_IFELSE_9_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 351;
.def; .bb; .scl 100; .tag __INJ_AW613E_Phase_NoReturn__AW613E_SCOPEBLOCK_24_; .endef;

.line 352;
	// chan  FutureOutputPin low on matchA;;
.opstart 0x4affffff; .opend;

.line 353;
.def; .eb; .scl 100; .tag __INJ_AW613E_Phase_NoReturn__AW613E_SCOPEBLOCK_24_; .stackUsage 0; .scratchpadUsage 0; .endef;
.def __INJ_AW613E_Phase_NoReturn__AW613E_END_IFELSE_9_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 354;
	// chan  clear MatchRecognitionLatchA;;
.opstart 0x7ffffeff; .opend;

.line 355;
	// chan  ActionUnitA: tcr1 >= match, capture tcr1;;
.opstart 0x4ff0ffff; .opend;

.line 356;
	// chan  matchA = ertA, set MatchEnableLatchA;;
.opstart 0x7fffff7f; .opend;

.line 358;
	// alu    p_31_24 = macl+0x0;;
.opstart 0x0008a409; .opend;
	// seq  if p.bit(28)==false then goto Phase_NoReturn__AW613E_END_IFELSE_10, flush;;
.opstart 0xf6100007; .oplabel BAF_13_0_,StandardTest,__INJ_AW613E_Phase_NoReturn__AW613E_END_IFELSE_10_,0;  .opend;
.def __INJ_AW613E_Phase_NoReturn__AW613E_THEN_IF_ELSE_10_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 359;
.def; .bb; .scl 100; .tag __INJ_AW613E_Phase_NoReturn__AW613E_SCOPEBLOCK_25_; .endef;

.line 360;
	// chan  set SvcdChan DataTransferIntr;;
.opstart 0xffff7ef9; .opend;

.line 361;
.def; .eb; .scl 100; .tag __INJ_AW613E_Phase_NoReturn__AW613E_SCOPEBLOCK_25_; .stackUsage 0; .scratchpadUsage 0; .endef;
.def __INJ_AW613E_Phase_NoReturn__AW613E_END_IFELSE_10_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 363;
	// ram   p_31_24 = bank_chan_count;; // *((channel int8 *) 0xC;
.opstart 0xcfeff983; .oplabel AID_6_0_,INJ,_INJ_AW613E_bank_chan_count_,0;  .opend;
	// alu    a = p_31_24+0x0;;
.opstart 0x00020419; .opend;
	// alu    d = a+0x0;;
.opstart 0x00095411; .opend;

.line 364;
	// ram   p_23_0 = bank_chans;; // *((channel int24 *) 0xD;
.opstart 0xbfeffb83; .oplabel AID_6_0_,INJ,_INJ_AW613E_bank_chans_,0;  .opend;
	// alu    macl = p+0x0;;
.opstart 0x00088411; .opend;

.line 365;
.def __INJ_AW613E_Phase_NoReturn__AW613E___WhileLoop_2_; .val 0xffffffff; .scl 200; .type 0xe; .endef;
.def __INJ_AW613E_Phase_NoReturn__AW613E___ContinueLoc_2_; .val 0xffffffff; .scl 200; .type 0xe; .endef;
	// output the while loop test

	// alu    nil = d+0x0, SampleFlags;;
.opstart 0x0004f019; .opend;
	// seq  if z==true then goto Phase_NoReturn__AW613E___BreakLoc_2, flush;;
.opstart 0xf0d80007; .oplabel BAF_13_0_,StandardTest,__INJ_AW613E_Phase_NoReturn__AW613E___BreakLoc_2_,0;  .opend;
.def __INJ_AW613E_Phase_NoReturn__AW613E___LoopStart_2_; .val 0xffffffff; .scl 200; .type 0xe; .endef;
	// output the while loop contents


.line 366;
.def; .bb; .scl 100; .tag __INJ_AW613E_Phase_NoReturn__AW613E_SCOPEBLOCK_26_; .endef;

.line 367;
	// alu    a = ((u24) 0)+0x1;;
.opstart 0x00000428; .opend;
	// alu    a = d-a, SampleFlags;;
.opstart 0x1c340eff; .opend;
	// alu    d = a+0x0;;
.opstart 0x00095411; .opend;

.line 368;
	// alu    a = macl+0x0;;
.opstart 0x00080409; .opend;
	// alu    chan = a+0x0;;
.opstart 0x00094411; .opend;

.line 369;
	// alu    p = ((u24) 0)+0x2;;
.opstart 0x00000440; .opend;
	// alu    a = macl >> (2^^(p+1)), SampleFlags;;
.opstart 0x3b180fba; .opend;
	// alu    macl = a+0x0;;
.opstart 0x00098411; .opend;

.line 370;
	// alu    ertA = cReg+0x0;;
.opstart 0x00012409; .opend;

.line 371;
	// alu    a = (sr+0x0) >> 1, SampleFlags;;
.opstart 0x180a0792; .opend;
	// alu    sr = a+0x0;;
.opstart 0x00091419; .opend;

.line 372;
	// alu    p_31_24 = sr+0x0;;
.opstart 0x000aa419; .opend;
	// seq  if p.bit(24)==false then goto Phase_NoReturn__AW613E_ELSE_IFELSE_11, flush;;
.opstart 0xf5100007; .oplabel BAF_13_0_,StandardTest,__INJ_AW613E_Phase_NoReturn__AW613E_ELSE_IFELSE_11_,0;  .opend;
.def __INJ_AW613E_Phase_NoReturn__AW613E_THEN_IF_ELSE_11_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 373;
.def; .bb; .scl 100; .tag __INJ_AW613E_Phase_NoReturn__AW613E_SCOPEBLOCK_27_; .endef;

.line 374;
	// chan  FutureOutputPin high on matchA;;
.opstart 0x49ffffff; .opend;

.line 375;
.def; .eb; .scl 100; .tag __INJ_AW613E_Phase_NoReturn__AW613E_SCOPEBLOCK_27_; .stackUsage 0; .scratchpadUsage 0; .endef;
	// seq  goto Phase_NoReturn__AW613E_END_IFELSE_11, flush;;
.opstart 0xf7d00007; .oplabel BAF_13_0_,StandardTest,__INJ_AW613E_Phase_NoReturn__AW613E_END_IFELSE_11_,0;  .opend;
.def __INJ_AW613E_Phase_NoReturn__AW613E_ELSE_IFELSE_11_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 377;
.def; .bb; .scl 100; .tag __INJ_AW613E_Phase_NoReturn__AW613E_SCOPEBLOCK_28_; .endef;

.line 378;
	// chan  FutureOutputPin low on matchA;;
.opstart 0x4affffff; .opend;

.line 379;
.def; .eb; .scl 100; .tag __INJ_AW613E_Phase_NoReturn__AW613E_SCOPEBLOCK_28_; .stackUsage 0; .scratchpadUsage 0; .endef;
.def __INJ_AW613E_Phase_NoReturn__AW613E_END_IFELSE_11_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 380;
	// chan  clear MatchRecognitionLatchA;;
.opstart 0x7ffffeff; .opend;

.line 381;
	// chan  ActionUnitA: tcr1 >= match, capture tcr1;;
.opstart 0x4ff0ffff; .opend;

.line 382;
	// chan  matchA = ertA, set MatchEnableLatchA;;
.opstart 0x7fffff7f; .opend;

.line 391;
.def; .eb; .scl 100; .tag __INJ_AW613E_Phase_NoReturn__AW613E_SCOPEBLOCK_26_; .stackUsage 0; .scratchpadUsage 0; .endef;
	// seq  goto Phase_NoReturn__AW613E___WhileLoop_2, flush;;
.opstart 0xf7d00007; .oplabel BAF_13_0_,StandardTest,__INJ_AW613E_Phase_NoReturn__AW613E___WhileLoop_2_,0;  .opend;
.def __INJ_AW613E_Phase_NoReturn__AW613E___BreakLoc_2_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 392;
.def; .eb; .scl 100; .tag __INJ_AW613E_Phase_NoReturn__AW613E_SCOPEBLOCK_20_; .stackUsage 0; .scratchpadUsage 0; .endef;
.def __INJ_AW613E_Phase_NoReturn__AW613E_END_IFELSE_3_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 393;
.def; .eb; .scl 100; .tag __INJ_AW613E_Phase_NoReturn__AW613E_SCOPEBLOCK_9_; .stackUsage 0; .scratchpadUsage 0; .endef;
.def __INJ_AW613E_Phase_NoReturn__AW613E_FUNC_END_; .val 0xffffffff; .scl 200; .type 0xe; .endef;
	// seq   end;;
.opstart 0x0fffffff; .opend;
.def; .ef; .scl 101; .tag _INJ_AW613E_Phase_NoReturn_; .endef;
.breakable;

.file "..\..\src\etpuc_inj.c";

.line 399;
.def _INJ_AW613E_Init_NoReturn_; .val 0x0; .scl 2; .etpuclass INJ; .type 0x80000029; .endef;
.def; .bf; .scl 101; .tag _INJ_AW613E_Init_NoReturn_; .endef;
.def _INJ_AW613E_Init_NoReturn_; .val 0xffffffff; .scl 200; .type 0xe; .endef;
.def; .bb; .scl 100; .tag __INJ_AW613E_Init_NoReturn__AW613E_SCOPEBLOCK_29_; .endef;

.line 403;
	// chan  DisableMatchTransitionServicing;;
.opstart 0xff7ffefb; .opend;

.line 405;
	// chan  clear MatchEnableLatches;;
.opstart 0x7ffffffd; .opend;

.line 407;
	// chan  clear TransitionDetectionLatches;;
.opstart 0x7fefffff; .opend;

.line 408;
	// chan  clear LinkServiceRequest;;
.opstart 0x4ffff7ff; .opend;

.line 409;
	// chan  clear MatchRecognitionLatchA;;
.opstart 0x7ffffeff; .opend;

.line 410;
	// chan  clear MatchRecognitionLatchB;;
.opstart 0x7fffffbf; .opend;

.line 414;
	// chan  mode = either match non blocking single transition;;
.opstart 0x4fffffe5; .opend;

.line 416;
	// chan  ActionUnitA: tcr1 >= match, capture tcr1;;
.opstart 0x4ff0ffff; .opend;

.line 417;
	// chan  ActionUnitB: tcr2 >= match, capture tcr2;;
.opstart 0x4fff3fff; .opend;

.line 419;
	// chan  detectA = off;;
.opstart 0x58ffffff; .opend;

.line 420;
	// chan  detectB = off;;
.opstart 0x5f1fffff; .opend;

.line 422;
	// seq  if FunctionMode0==true then goto Init_NoReturn__AW613E_ELSE_IFELSE_12, flush;;
.opstart 0xf3d80007; .oplabel BAF_13_0_,StandardTest,__INJ_AW613E_Init_NoReturn__AW613E_ELSE_IFELSE_12_,0;  .opend;
.def __INJ_AW613E_Init_NoReturn__AW613E_THEN_IF_ELSE_12_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 423;
.def; .bb; .scl 100; .tag __INJ_AW613E_Init_NoReturn__AW613E_SCOPEBLOCK_30_; .endef;

.line 424;
	// chan  CurrentOutputPin = low;;
.opstart 0x7ffffdfe; .opend;

.line 425;
	// chan  FutureOutputPin low on matchA;;
.opstart 0x4affffff; .opend;

.line 426;
	// chan  FutureOutputPin no change on matchB;;
.opstart 0x4f1fffff; .opend;

.line 427;
.def; .eb; .scl 100; .tag __INJ_AW613E_Init_NoReturn__AW613E_SCOPEBLOCK_30_; .stackUsage 0; .scratchpadUsage 0; .endef;
	// seq  goto Init_NoReturn__AW613E_END_IFELSE_12, flush;;
.opstart 0xf7d00007; .oplabel BAF_13_0_,StandardTest,__INJ_AW613E_Init_NoReturn__AW613E_END_IFELSE_12_,0;  .opend;
.def __INJ_AW613E_Init_NoReturn__AW613E_ELSE_IFELSE_12_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 429;
.def; .bb; .scl 100; .tag __INJ_AW613E_Init_NoReturn__AW613E_SCOPEBLOCK_31_; .endef;

.line 430;
	// chan  CurrentOutputPin = high;;
.opstart 0x7ffffbfe; .opend;

.line 431;
	// chan  FutureOutputPin high on matchA;;
.opstart 0x49ffffff; .opend;

.line 432;
	// chan  FutureOutputPin no change on matchB;;
.opstart 0x4f1fffff; .opend;

.line 433;
.def; .eb; .scl 100; .tag __INJ_AW613E_Init_NoReturn__AW613E_SCOPEBLOCK_31_; .stackUsage 0; .scratchpadUsage 0; .endef;
.def __INJ_AW613E_Init_NoReturn__AW613E_END_IFELSE_12_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 435;
	// chan  enable output buffer;;
.opstart 0x4ff8ffff; .opend;

.line 438;
	// ram   p_31_24 = bank_chans_mask;; // *((channel int8 *) 0x10;
.opstart 0xcfeff984; .oplabel AID_6_0_,INJ,_INJ_AW613E_bank_chans_mask_,0;  .opend;
	// alu    a = p_31_24+0x0;;
.opstart 0x00020419; .opend;
	// alu    a = ((u24) 0)-a-1, SampleFlags;;
.opstart 0x1e3f0eff; .opend;
	// ram   p_31_24 = inj_global;; // *((global int8 *) 0x0;
.opstart 0xcfeff100; .oplabel AID_7_0_,AW6B2D_NAMELESS_CLASS,inj_global,0;  .opend;
	// alu    sr = p_31_24+0x0;;
.opstart 0x00021419; .opend;
	// alu    a = sr & a, SampleFlags;;
.opstart 0x2b3a0ff2; .opend;
	// alu    p_31_24 = a+0x0;;
.opstart 0x0009a419; .opend;
	// ram   inj_global = p_31_24;; // *((global int8 *) 0x0;
.opstart 0xcffff100; .oplabel AID_7_0_,AW6B2D_NAMELESS_CLASS,inj_global,0;  .opend;

.line 439;
	// ram   p_23_0 = bank_chans_mask;; // *((channel int24 *) 0x11;
.opstart 0xbfeffb84; .oplabel AID_6_0_,INJ,_INJ_AW613E_bank_chans_mask_,1;  .opend;
	// alu    a = ((u24) 0)-p-1, SampleFlags;;
.opstart 0x1e1f0eff; .opend;
	// ram   p_23_0 = inj_global;; // *((global int24 *) 0x1;
.opstart 0x9feffb00; .oplabel AID_7_0_,AW6B2D_NAMELESS_CLASS,inj_global,1;  .opend;
	// alu    a = p & a, SampleFlags;;
.opstart 0x2b380ff2; .opend;
	// alu    p = a+0x0;;
.opstart 0x00097419; .opend;
	// ram   inj_global = p_23_0;; // *((global int24 *) 0x1;
.opstart 0x9ffffb00; .oplabel AID_7_0_,AW6B2D_NAMELESS_CLASS,inj_global,1;  .opend;

.line 442;
	// seq  if FunctionMode1==true then goto Init_NoReturn__AW613E_END_IFELSE_13, flush;;
.opstart 0xf3980007; .oplabel BAF_13_0_,StandardTest,__INJ_AW613E_Init_NoReturn__AW613E_END_IFELSE_13_,0;  .opend;
.def __INJ_AW613E_Init_NoReturn__AW613E_THEN_IF_ELSE_13_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 443;
.def; .bb; .scl 100; .tag __INJ_AW613E_Init_NoReturn__AW613E_SCOPEBLOCK_32_; .endef;

.line 445;
	// chan  EnableMatchTransitionServicing;;
.opstart 0xff3ffefb; .opend;

.line 448;
	// ram   p_23_0 = tdc_angle;; // *((channel int24 *) 0x1D;
.opstart 0xbfeffb87; .oplabel AID_6_0_,INJ,_INJ_AW613E_tdc_angle_,0;  .opend;
	// alu    a = p+0x0;;
.opstart 0x00080419; .opend;
	// ram   p_23_0 = eng_cycle_tcr2_start;; // *((global int24 *) 0x1;
.opstart 0x9feffb00; .oplabel AID_7_0_,AW6B2D_NAMELESS_CLASS,eng_cycle_tcr2_start,0;  .opend;
	// alu    a = p+a, SampleFlags;;
.opstart 0x1f380eff; .opend;
	// alu    diob = a+0x0;;
.opstart 0x00094419; .opend;
	// ram   tdc_angle_actual = diob;; // *((channel int24 *) 0x21;
.opstart 0xbfffff88; .oplabel AID_6_0_,INJ,_INJ_AW613E_tdc_angle_actual_,0;  .opend;

.line 450;
	// ram   p_31_24 = eng_pos_state;; // *((global int8 *) 0x0;
.opstart 0xcfeff100; .oplabel AID_7_0_,AW6B2D_NAMELESS_CLASS,eng_pos_state,0;  .opend;
	// alu    a = p_31_24+0x0;;
.opstart 0x00020419; .opend;
	// alu    nil = a ^ 0x3, SampleFlags;;
.opstart 0x0809fbea; .opend;
	// seq  if z==true then goto Init_NoReturn__AW613E_END_IFELSE_14, flush;;
.opstart 0xf0d80007; .oplabel BAF_13_0_,StandardTest,__INJ_AW613E_Init_NoReturn__AW613E_END_IFELSE_14_,0;  .opend;
.def __INJ_AW613E_Init_NoReturn__AW613E_THEN_IF_ELSE_14_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 451;
.def; .bb; .scl 100; .tag __INJ_AW613E_Init_NoReturn__AW613E_SCOPEBLOCK_33_; .endef;

.line 453;
	// seq  goto Init_NoReturn__AW613E_FUNC_END, flush;;
.opstart 0xf7d00007; .oplabel BAF_13_0_,StandardTest,__INJ_AW613E_Init_NoReturn__AW613E_FUNC_END_,0;  .opend;

.line 454;
.def; .eb; .scl 100; .tag __INJ_AW613E_Init_NoReturn__AW613E_SCOPEBLOCK_33_; .stackUsage 0; .scratchpadUsage 0; .endef;
.def __INJ_AW613E_Init_NoReturn__AW613E_END_IFELSE_14_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 457;
	// seq  call ScheduleIRQAngle, flush;;
.opstart 0xffd00007; .oplabel BAF_13_0_,StandardTest,_INJ_AW613E_ScheduleIRQAngle_,0;  .opend;

.line 460;
	// seq  call ScheduleStartAngle1st, flush;;
.opstart 0xffd00007; .oplabel BAF_13_0_,StandardTest,_INJ_AW613E_ScheduleStartAngle1st_,0;  .opend;

.line 461;
.def; .eb; .scl 100; .tag __INJ_AW613E_Init_NoReturn__AW613E_SCOPEBLOCK_32_; .stackUsage 0; .scratchpadUsage 0; .endef;
.def __INJ_AW613E_Init_NoReturn__AW613E_END_IFELSE_13_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 462;
.def; .eb; .scl 100; .tag __INJ_AW613E_Init_NoReturn__AW613E_SCOPEBLOCK_29_; .stackUsage 0; .scratchpadUsage 0; .endef;
.def __INJ_AW613E_Init_NoReturn__AW613E_FUNC_END_; .val 0xffffffff; .scl 200; .type 0xe; .endef;
	// seq   end;;
.opstart 0x0fffffff; .opend;
.def; .ef; .scl 101; .tag _INJ_AW613E_Init_NoReturn_; .endef;
.breakable;

.file "..\..\src\etpuc_inj.c";

.line 475;
.def _INJ_AW613E_INIT_; .val 0x0; .scl 2; .etpuclass INJ; .type 0x80000022; .endef;
.def; .bf; .scl 101; .tag _INJ_AW613E_INIT_; .endef;
.def _INJ_AW613E_INIT_; .val 0xffffffff; .scl 200; .type 0xe; .endef;
.def; .bb; .scl 100; .tag __INJ_AW613E_INIT__AW613E_SCOPEBLOCK_34_; .endef;

.line 477;
	// seq  goto Init_NoReturn, flush;;
.opstart 0xf7d00007; .oplabel BAF_13_0_,StandardTest,_INJ_AW613E_Init_NoReturn_,0;  .opend;

.line 478;
.def; .eb; .scl 100; .tag __INJ_AW613E_INIT__AW613E_SCOPEBLOCK_34_; .stackUsage 0; .scratchpadUsage 0; .endef;
.def __INJ_AW613E_INIT__AW613E_FUNC_END_; .val 0xffffffff; .scl 200; .type 0xe; .endef;
	// seq   end;;
.opstart 0x0fffffff; .opend;
.def; .ef; .scl 101; .tag _INJ_AW613E_INIT_; .endef;
.breakable;

.file "..\..\src\etpuc_inj.c";

.line 485;
.def _INJ_AW613E_STOP_; .val 0x0; .scl 2; .etpuclass INJ; .type 0x80000022; .endef;
.def; .bf; .scl 101; .tag _INJ_AW613E_STOP_; .endef;
.def _INJ_AW613E_STOP_; .val 0xffffffff; .scl 200; .type 0xe; .endef;
.def; .bb; .scl 100; .tag __INJ_AW613E_STOP__AW613E_SCOPEBLOCK_35_; .endef;

.line 490;
	// seq  if FunctionMode0==true then goto STOP__AW613E_ELSE_IFELSE_15, flush;;
.opstart 0xf3d80007; .oplabel BAF_13_0_,StandardTest,__INJ_AW613E_STOP__AW613E_ELSE_IFELSE_15_,0;  .opend;
.def __INJ_AW613E_STOP__AW613E_THEN_IF_ELSE_15_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 491;
.def; .bb; .scl 100; .tag __INJ_AW613E_STOP__AW613E_SCOPEBLOCK_36_; .endef;

.line 492;
	// chan  FutureOutputPin low on matchA;;
.opstart 0x4affffff; .opend;

.line 493;
.def; .eb; .scl 100; .tag __INJ_AW613E_STOP__AW613E_SCOPEBLOCK_36_; .stackUsage 0; .scratchpadUsage 0; .endef;
	// seq  goto STOP__AW613E_END_IFELSE_15, flush;;
.opstart 0xf7d00007; .oplabel BAF_13_0_,StandardTest,__INJ_AW613E_STOP__AW613E_END_IFELSE_15_,0;  .opend;
.def __INJ_AW613E_STOP__AW613E_ELSE_IFELSE_15_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 495;
.def; .bb; .scl 100; .tag __INJ_AW613E_STOP__AW613E_SCOPEBLOCK_37_; .endef;

.line 496;
	// chan  FutureOutputPin high on matchA;;
.opstart 0x49ffffff; .opend;

.line 497;
.def; .eb; .scl 100; .tag __INJ_AW613E_STOP__AW613E_SCOPEBLOCK_37_; .stackUsage 0; .scratchpadUsage 0; .endef;
.def __INJ_AW613E_STOP__AW613E_END_IFELSE_15_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 499;
	// chan  ActionUnitA: tcr1 >= match, capture tcr1;;
.opstart 0x4ff0ffff; .opend;

.line 501;
	// alu    ertA = tcr1+0x0;;
.opstart 0x000c2419; .opend;

.line 502;
	// chan  matchA = ertA, set MatchEnableLatchA;;
.opstart 0x7fffff7f; .opend;

.line 504;
	// chan  clear ChannelFlag0;;
.opstart 0x0ffffe7e; .opend;

.line 507;
	// ram   p_31_24 = bank_chans_mask;; // *((channel int8 *) 0x10;
.opstart 0xcfeff984; .oplabel AID_6_0_,INJ,_INJ_AW613E_bank_chans_mask_,0;  .opend;
	// alu    a = p_31_24+0x0;;
.opstart 0x00020419; .opend;
	// alu    a = ((u24) 0)-a-1, SampleFlags;;
.opstart 0x1e3f0eff; .opend;
	// ram   p_31_24 = inj_global;; // *((global int8 *) 0x0;
.opstart 0xcfeff100; .oplabel AID_7_0_,AW6B2D_NAMELESS_CLASS,inj_global,0;  .opend;
	// alu    sr = p_31_24+0x0;;
.opstart 0x00021419; .opend;
	// alu    a = sr & a, SampleFlags;;
.opstart 0x2b3a0ff2; .opend;
	// alu    p_31_24 = a+0x0;;
.opstart 0x0009a419; .opend;
	// ram   inj_global = p_31_24;; // *((global int8 *) 0x0;
.opstart 0xcffff100; .oplabel AID_7_0_,AW6B2D_NAMELESS_CLASS,inj_global,0;  .opend;

.line 508;
	// ram   p_23_0 = bank_chans_mask;; // *((channel int24 *) 0x11;
.opstart 0xbfeffb84; .oplabel AID_6_0_,INJ,_INJ_AW613E_bank_chans_mask_,1;  .opend;
	// alu    a = ((u24) 0)-p-1, SampleFlags;;
.opstart 0x1e1f0eff; .opend;
	// ram   p_23_0 = inj_global;; // *((global int24 *) 0x1;
.opstart 0x9feffb00; .oplabel AID_7_0_,AW6B2D_NAMELESS_CLASS,inj_global,1;  .opend;
	// alu    a = p & a, SampleFlags;;
.opstart 0x2b380ff2; .opend;
	// alu    p = a+0x0;;
.opstart 0x00097419; .opend;
	// ram   inj_global = p_23_0;; // *((global int24 *) 0x1;
.opstart 0x9ffffb00; .oplabel AID_7_0_,AW6B2D_NAMELESS_CLASS,inj_global,1;  .opend;

.line 511;
	// chan  clear MatchRecognitionLatchA;;
.opstart 0x7ffffeff; .opend;

.line 514;
	// seq  goto StopBankChannels_NoReturn, flush;;
.opstart 0xf7d00007; .oplabel BAF_13_0_,StandardTest,_INJ_AW613E_StopBankChannels_NoReturn_,0;  .opend;

.line 515;
.def; .eb; .scl 100; .tag __INJ_AW613E_STOP__AW613E_SCOPEBLOCK_35_; .stackUsage 0; .scratchpadUsage 0; .endef;
.def __INJ_AW613E_STOP__AW613E_FUNC_END_; .val 0xffffffff; .scl 200; .type 0xe; .endef;
	// seq   end;;
.opstart 0x0fffffff; .opend;
.def; .ef; .scl 101; .tag _INJ_AW613E_STOP_; .endef;
.breakable;

.file "..\..\src\etpuc_inj.c";

.line 522;
.def _INJ_AW613E_UPDATE_; .val 0x0; .scl 2; .etpuclass INJ; .type 0x80000022; .endef;
.def; .bf; .scl 101; .tag _INJ_AW613E_UPDATE_; .endef;
.def _INJ_AW613E_UPDATE_; .val 0xffffffff; .scl 200; .type 0xe; .endef;
.def; .bb; .scl 100; .tag __INJ_AW613E_UPDATE__AW613E_SCOPEBLOCK_38_; .endef;

.line 524;
	// seq  call ScheduleStartAngle1st, flush;;
.opstart 0xffd00007; .oplabel BAF_13_0_,StandardTest,_INJ_AW613E_ScheduleStartAngle1st_,0;  .opend;

.line 525;
.def; .eb; .scl 100; .tag __INJ_AW613E_UPDATE__AW613E_SCOPEBLOCK_38_; .stackUsage 0; .scratchpadUsage 0; .endef;
.def __INJ_AW613E_UPDATE__AW613E_FUNC_END_; .val 0xffffffff; .scl 200; .type 0xe; .endef;
	// seq   end;;
.opstart 0x0fffffff; .opend;
.def; .ef; .scl 101; .tag _INJ_AW613E_UPDATE_; .endef;
.breakable;

.file "..\..\src\etpuc_inj.c";

.line 533;
.def _INJ_AW613E_START_ANGLE_1ST_; .val 0x0; .scl 2; .etpuclass INJ; .type 0x80000022; .endef;
.def; .bf; .scl 101; .tag _INJ_AW613E_START_ANGLE_1ST_; .endef;
.def _INJ_AW613E_START_ANGLE_1ST_; .val 0xffffffff; .scl 200; .type 0xe; .endef;
.def; .bb; .scl 100; .tag __INJ_AW613E_START_ANGLE_1ST__AW613E_SCOPEBLOCK_39_; .endef;
.def out; .val 0x1e; .scl 4; .type 0xe; .endef;
.def cnt; .val 0x26; .scl 4; .type 0xe; .endef;
.def chn; .val 0x13; .scl 4; .type 0xe; .endef;
.def inj_chan; .val 0x25; .scl 4; .type 0xc; .endef;

.line 541;
	// seq  if SampledLinkServiceRequest==false then goto START_ANGLE_1ST__AW613E_ELSE_IFELSE_16, flush;;
.opstart 0xf3100007; .oplabel BAF_13_0_,StandardTest,__INJ_AW613E_START_ANGLE_1ST__AW613E_ELSE_IFELSE_16_,0;  .opend;
.def __INJ_AW613E_START_ANGLE_1ST__AW613E_THEN_IF_ELSE_16_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 542;
.def; .bb; .scl 100; .tag __INJ_AW613E_START_ANGLE_1ST__AW613E_SCOPEBLOCK_40_; .endef;

.line 543;
	// seq  goto Init_NoReturn, flush;;
.opstart 0xf7d00007; .oplabel BAF_13_0_,StandardTest,_INJ_AW613E_Init_NoReturn_,0;  .opend;

.line 544;
.def; .eb; .scl 100; .tag __INJ_AW613E_START_ANGLE_1ST__AW613E_SCOPEBLOCK_40_; .stackUsage 0; .scratchpadUsage 0; .endef;
	// seq  goto START_ANGLE_1ST__AW613E_END_IFELSE_16, flush;;
.opstart 0xf7d00007; .oplabel BAF_13_0_,StandardTest,__INJ_AW613E_START_ANGLE_1ST__AW613E_END_IFELSE_16_,0;  .opend;
.def __INJ_AW613E_START_ANGLE_1ST__AW613E_ELSE_IFELSE_16_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 546;
.def; .bb; .scl 100; .tag __INJ_AW613E_START_ANGLE_1ST__AW613E_SCOPEBLOCK_41_; .endef;

.line 549;
	// ram   p_23_0 = inj_global;; // *((global int24 *) 0x1;
.opstart 0x9feffb00; .oplabel AID_7_0_,AW6B2D_NAMELESS_CLASS,inj_global,1;  .opend;
	// alu    a = p+0x0;;
.opstart 0x00080419; .opend;
	// ram   p_23_0 = bank_chans_mask;; // *((channel int24 *) 0x11;
.opstart 0xbfeffb84; .oplabel AID_6_0_,INJ,_INJ_AW613E_bank_chans_mask_,1;  .opend;
	// alu    a = a & p, SampleFlags;;
.opstart 0x2b190ff2; .opend;
	// seq  if z==false then goto START_ANGLE_1ST__AW613E_ELSE_IFELSE_17, flush;;
.opstart 0xf0d00007; .oplabel BAF_13_0_,StandardTest,__INJ_AW613E_START_ANGLE_1ST__AW613E_ELSE_IFELSE_17_,0;  .opend;
.def __INJ_AW613E_START_ANGLE_1ST__AW613E_LOGICAL_AND_OP1_TRUE_0_; .val 0xffffffff; .scl 200; .type 0xe; .endef;
	// ram   p_31_24 = inj_global;; // *((global int8 *) 0x0;
.opstart 0xcfeff100; .oplabel AID_7_0_,AW6B2D_NAMELESS_CLASS,inj_global,0;  .opend;
	// alu    a = p_31_24+0x0;;
.opstart 0x00020419; .opend;
	// ram   p_31_24 = bank_chans_mask;; // *((channel int8 *) 0x10;
.opstart 0xcfeff984; .oplabel AID_6_0_,INJ,_INJ_AW613E_bank_chans_mask_,0;  .opend;
	// alu    b = p_31_24+0x0;;
.opstart 0x00023411; .opend;
	// alu    a = b & a, SampleFlags;;
.opstart 0x3b330fb2; .opend;
	// alu    p_31_24 = a+0x0, SampleFlags;;
.opstart 0x0009a019; .opend;
	// seq  if z==false then goto START_ANGLE_1ST__AW613E_ELSE_IFELSE_17, flush;;
.opstart 0xf0d00007; .oplabel BAF_13_0_,StandardTest,__INJ_AW613E_START_ANGLE_1ST__AW613E_ELSE_IFELSE_17_,0;  .opend;
	// seq  goto START_ANGLE_1ST__AW613E_THEN_IF_ELSE_17, flush;;
.opstart 0xf7d00007; .oplabel BAF_13_0_,StandardTest,__INJ_AW613E_START_ANGLE_1ST__AW613E_THEN_IF_ELSE_17_,0;  .opend;
.def __INJ_AW613E_START_ANGLE_1ST__AW613E_THEN_IF_ELSE_17_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 550;
.def; .bb; .scl 100; .tag __INJ_AW613E_START_ANGLE_1ST__AW613E_SCOPEBLOCK_42_; .endef;

.line 552;
	// ram   p_31_24 = bank_chans_mask;; // *((channel int8 *) 0x10;
.opstart 0xcfeff984; .oplabel AID_6_0_,INJ,_INJ_AW613E_bank_chans_mask_,0;  .opend;
	// alu    a = p_31_24+0x0;;
.opstart 0x00020419; .opend;
	// ram   p_31_24 = inj_global;; // *((global int8 *) 0x0;
.opstart 0xcfeff100; .oplabel AID_7_0_,AW6B2D_NAMELESS_CLASS,inj_global,0;  .opend;
	// alu    b = p_31_24+0x0;;
.opstart 0x00023411; .opend;
	// alu    a = b | a, SampleFlags;;
.opstart 0x3b330fb0; .opend;
	// alu    p_31_24 = a+0x0;;
.opstart 0x0009a419; .opend;
	// ram   inj_global = p_31_24;; // *((global int8 *) 0x0;
.opstart 0xcffff100; .oplabel AID_7_0_,AW6B2D_NAMELESS_CLASS,inj_global,0;  .opend;

.line 553;
	// ram   p_23_0 = bank_chans_mask;; // *((channel int24 *) 0x11;
.opstart 0xbfeffb84; .oplabel AID_6_0_,INJ,_INJ_AW613E_bank_chans_mask_,1;  .opend;
	// alu    a = p+0x0;;
.opstart 0x00080419; .opend;
	// ram   p_23_0 = inj_global;; // *((global int24 *) 0x1;
.opstart 0x9feffb00; .oplabel AID_7_0_,AW6B2D_NAMELESS_CLASS,inj_global,1;  .opend;
	// alu    a = p | a, SampleFlags;;
.opstart 0x2b380ff0; .opend;
	// alu    p = a+0x0;;
.opstart 0x00097419; .opend;
	// ram   inj_global = p_23_0;; // *((global int24 *) 0x1;
.opstart 0x9ffffb00; .oplabel AID_7_0_,AW6B2D_NAMELESS_CLASS,inj_global,1;  .opend;

.line 555;
	// chan  set ChannelFlag0;;
.opstart 0x0ffffefe; .opend;

.line 557;
	// alu    a = ((u24) 0)+0x1;;
.opstart 0x00000428; .opend;
	// alu    p_31_24 = a+0x0;;
.opstart 0x0009a419; .opend;
	// ram   injection_counter = p_31_24;; // *((channel int8 *) 0x4;
.opstart 0xcffff981; .oplabel AID_6_0_,INJ,_INJ_AW613E_injection_counter_,0;  .opend;

.line 558;
	// ram   phase_counter =  0;; // *((channel int8 *) 0x8;
.opstart 0xcffff902; .oplabel AID_6_0_,INJ,_INJ_AW613E_phase_counter_,0;  .opend;

.line 560;
	// ram   p_23_0 = p_injection_first;; // *((channel int24 *) 0x1;
.opstart 0xbfeffb80; .oplabel AID_6_0_,INJ,_INJ_AW613E_p_injection_first_,0;  .opend;
	// ram   p_injection = p_23_0;; // *((channel int24 *) 0x5;
.opstart 0xbffffb81; .oplabel AID_6_0_,INJ,_INJ_AW613E_p_injection_,0;  .opend;

.line 561;
	// ram   diob = p_injection_first;; // *((channel int24 *) 0x1;
.opstart 0xbfefff80; .oplabel AID_6_0_,INJ,_INJ_AW613E_p_injection_first_,0;  .opend;
	// alu    a = diob+0x0;;
.opstart 0x000b0419; .opend;
	// alu    diob = a+0x0;;
.opstart 0x00094419; .opend;
	// ram   p_23_0 = *((int24 *) diob);;
.opstart 0x1feffbdf; .opend;
	// ram   p_phase = p_23_0;; // *((channel int24 *) 0x9;
.opstart 0xbffffb82; .oplabel AID_6_0_,INJ,_INJ_AW613E_p_phase_,0;  .opend;

.line 564;
	// ram   diob = p_phase;; // *((channel int24 *) 0x9;
.opstart 0xbfefff82; .oplabel AID_6_0_,INJ,_INJ_AW613E_p_phase_,0;  .opend;
	// alu    a = diob+0x0;;
.opstart 0x000b0419; .opend;
	// alu    diob = a+0x0;;
.opstart 0x00094419; .opend;
	// ram   p_31_24 = *((int8 *) diob);;
.opstart 0xffeff9d9; .opend;
	// alu    p = p_31_24+0x0;;
.opstart 0x00027419; .opend;
	// alu    p = ((s8) p)+0x0;;
.opstart 0x3ff87874; .opend;
	// alu    sr = p+0x0;;
.opstart 0x00081419; .opend;

.line 565;
	// ram   p_31_24 = bank_chan_count;; // *((channel int8 *) 0xC;
.opstart 0xcfeff983; .oplabel AID_6_0_,INJ,_INJ_AW613E_bank_chan_count_,0;  .opend;
	// alu    a = p_31_24+0x0;;
.opstart 0x00020419; .opend;
	// alu    d = a+0x0;;
.opstart 0x00095411; .opend;

.line 566;
	// ram   diob = bank_chans;; // *((channel int24 *) 0xD;
.opstart 0xbfefff83; .oplabel AID_6_0_,INJ,_INJ_AW613E_bank_chans_,0;  .opend;
	// alu    mach = diob+0x0;;
.opstart 0x000b7411; .opend;

.line 568;
	// alu    p_31_24 = sr+0x0;;
.opstart 0x000aa419; .opend;
	// seq  if p.bit(24)==false then goto START_ANGLE_1ST__AW613E_ELSE_IFELSE_18, flush;;
.opstart 0xf5100007; .oplabel BAF_13_0_,StandardTest,__INJ_AW613E_START_ANGLE_1ST__AW613E_ELSE_IFELSE_18_,0;  .opend;
.def __INJ_AW613E_START_ANGLE_1ST__AW613E_THEN_IF_ELSE_18_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 569;
.def; .bb; .scl 100; .tag __INJ_AW613E_START_ANGLE_1ST__AW613E_SCOPEBLOCK_43_; .endef;

.line 570;
	// chan  CurrentOutputPin = high;;
.opstart 0x7ffffbfe; .opend;

.line 571;
.def; .eb; .scl 100; .tag __INJ_AW613E_START_ANGLE_1ST__AW613E_SCOPEBLOCK_43_; .stackUsage 0; .scratchpadUsage 0; .endef;
	// seq  goto START_ANGLE_1ST__AW613E_END_IFELSE_18, flush;;
.opstart 0xf7d00007; .oplabel BAF_13_0_,StandardTest,__INJ_AW613E_START_ANGLE_1ST__AW613E_END_IFELSE_18_,0;  .opend;
.def __INJ_AW613E_START_ANGLE_1ST__AW613E_ELSE_IFELSE_18_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 573;
.def; .bb; .scl 100; .tag __INJ_AW613E_START_ANGLE_1ST__AW613E_SCOPEBLOCK_44_; .endef;

.line 574;
	// chan  CurrentOutputPin = low;;
.opstart 0x7ffffdfe; .opend;

.line 575;
.def; .eb; .scl 100; .tag __INJ_AW613E_START_ANGLE_1ST__AW613E_SCOPEBLOCK_44_; .stackUsage 0; .scratchpadUsage 0; .endef;
.def __INJ_AW613E_START_ANGLE_1ST__AW613E_END_IFELSE_18_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 577;
	// alu    cReg = chan+0x0;;
.opstart 0x00090401; .opend;

.line 578;
.def __INJ_AW613E_START_ANGLE_1ST__AW613E___WhileLoop_3_; .val 0xffffffff; .scl 200; .type 0xe; .endef;
.def __INJ_AW613E_START_ANGLE_1ST__AW613E___ContinueLoc_3_; .val 0xffffffff; .scl 200; .type 0xe; .endef;
	// output the while loop test

	// alu    nil = d+0x0, SampleFlags;;
.opstart 0x0004f019; .opend;
	// seq  if z==true then goto START_ANGLE_1ST__AW613E___BreakLoc_3, flush;;
.opstart 0xf0d80007; .oplabel BAF_13_0_,StandardTest,__INJ_AW613E_START_ANGLE_1ST__AW613E___BreakLoc_3_,0;  .opend;
.def __INJ_AW613E_START_ANGLE_1ST__AW613E___LoopStart_3_; .val 0xffffffff; .scl 200; .type 0xe; .endef;
	// output the while loop contents


.line 579;
.def; .bb; .scl 100; .tag __INJ_AW613E_START_ANGLE_1ST__AW613E_SCOPEBLOCK_45_; .endef;

.line 580;
	// alu    a = ((u24) 0)+0x1;;
.opstart 0x00000428; .opend;
	// alu    a = d-a, SampleFlags;;
.opstart 0x1c340eff; .opend;
	// alu    d = a+0x0;;
.opstart 0x00095411; .opend;

.line 581;
	// alu    a = mach+0x0;;
.opstart 0x00070409; .opend;
	// alu    chan = a+0x0;;
.opstart 0x00094411; .opend;

.line 582;
	// alu    p = ((u24) 0)+0x2;;
.opstart 0x00000440; .opend;
	// alu    a = mach >> (2^^(p+1)), SampleFlags;;
.opstart 0x3b170fba; .opend;
	// alu    mach = a+0x0;;
.opstart 0x00097411; .opend;

.line 583;
	// alu    a = (sr+0x0) >> 1, SampleFlags;;
.opstart 0x180a0792; .opend;
	// alu    sr = a+0x0;;
.opstart 0x00091419; .opend;

.line 584;
	// alu    p_31_24 = sr+0x0;;
.opstart 0x000aa419; .opend;
	// seq  if p.bit(24)==false then goto START_ANGLE_1ST__AW613E_ELSE_IFELSE_19, flush;;
.opstart 0xf5100007; .oplabel BAF_13_0_,StandardTest,__INJ_AW613E_START_ANGLE_1ST__AW613E_ELSE_IFELSE_19_,0;  .opend;
.def __INJ_AW613E_START_ANGLE_1ST__AW613E_THEN_IF_ELSE_19_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 585;
.def; .bb; .scl 100; .tag __INJ_AW613E_START_ANGLE_1ST__AW613E_SCOPEBLOCK_46_; .endef;

.line 586;
	// chan  CurrentOutputPin = high;;
.opstart 0x7ffffbfe; .opend;

.line 587;
.def; .eb; .scl 100; .tag __INJ_AW613E_START_ANGLE_1ST__AW613E_SCOPEBLOCK_46_; .stackUsage 0; .scratchpadUsage 0; .endef;
	// seq  goto START_ANGLE_1ST__AW613E_END_IFELSE_19, flush;;
.opstart 0xf7d00007; .oplabel BAF_13_0_,StandardTest,__INJ_AW613E_START_ANGLE_1ST__AW613E_END_IFELSE_19_,0;  .opend;
.def __INJ_AW613E_START_ANGLE_1ST__AW613E_ELSE_IFELSE_19_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 589;
.def; .bb; .scl 100; .tag __INJ_AW613E_START_ANGLE_1ST__AW613E_SCOPEBLOCK_47_; .endef;

.line 590;
	// chan  CurrentOutputPin = low;;
.opstart 0x7ffffdfe; .opend;

.line 591;
.def; .eb; .scl 100; .tag __INJ_AW613E_START_ANGLE_1ST__AW613E_SCOPEBLOCK_47_; .stackUsage 0; .scratchpadUsage 0; .endef;
.def __INJ_AW613E_START_ANGLE_1ST__AW613E_END_IFELSE_19_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 592;
.def; .eb; .scl 100; .tag __INJ_AW613E_START_ANGLE_1ST__AW613E_SCOPEBLOCK_45_; .stackUsage 0; .scratchpadUsage 0; .endef;
	// seq  goto START_ANGLE_1ST__AW613E___WhileLoop_3, flush;;
.opstart 0xf7d00007; .oplabel BAF_13_0_,StandardTest,__INJ_AW613E_START_ANGLE_1ST__AW613E___WhileLoop_3_,0;  .opend;
.def __INJ_AW613E_START_ANGLE_1ST__AW613E___BreakLoc_3_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 593;
	// alu    chan = cReg+0x0;;
.opstart 0x00014401; .opend;

.line 594;
	// alu    ertA = tcr1+0x0;;
.opstart 0x000c2419; .opend;

.line 597;
	// seq  goto Phase_NoReturn, flush;;
.opstart 0xf7d00007; .oplabel BAF_13_0_,StandardTest,_INJ_AW613E_Phase_NoReturn_,0;  .opend;

.line 598;
.def; .eb; .scl 100; .tag __INJ_AW613E_START_ANGLE_1ST__AW613E_SCOPEBLOCK_42_; .stackUsage 0; .scratchpadUsage 0; .endef;
	// seq  goto START_ANGLE_1ST__AW613E_END_IFELSE_17, flush;;
.opstart 0xf7d00007; .oplabel BAF_13_0_,StandardTest,__INJ_AW613E_START_ANGLE_1ST__AW613E_END_IFELSE_17_,0;  .opend;
.def __INJ_AW613E_START_ANGLE_1ST__AW613E_ELSE_IFELSE_17_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 600;
.def; .bb; .scl 100; .tag __INJ_AW613E_START_ANGLE_1ST__AW613E_SCOPEBLOCK_48_; .endef;

.line 602;
	// ram   p_31_24 = error;; // *((channel int8 *) 0x14;
.opstart 0xcfeff985; .oplabel AID_6_0_,INJ,_INJ_AW613E_error_,0;  .opend;
	// alu    a = p_31_24+0x0;;
.opstart 0x00020419; .opend;
	// alu    a = a | 0x1, SampleFlags;;
.opstart 0x08090ba2; .opend;
	// alu    p_31_24 = a+0x0;;
.opstart 0x0009a419; .opend;
	// ram   error = p_31_24;; // *((channel int8 *) 0x14;
.opstart 0xcffff985; .oplabel AID_6_0_,INJ,_INJ_AW613E_error_,0;  .opend;

.line 603;
.def; .eb; .scl 100; .tag __INJ_AW613E_START_ANGLE_1ST__AW613E_SCOPEBLOCK_48_; .stackUsage 0; .scratchpadUsage 0; .endef;
.def __INJ_AW613E_START_ANGLE_1ST__AW613E_END_IFELSE_17_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 604;
.def; .eb; .scl 100; .tag __INJ_AW613E_START_ANGLE_1ST__AW613E_SCOPEBLOCK_41_; .stackUsage 0; .scratchpadUsage 0; .endef;
.def __INJ_AW613E_START_ANGLE_1ST__AW613E_END_IFELSE_16_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 605;
.def; .eb; .scl 100; .tag __INJ_AW613E_START_ANGLE_1ST__AW613E_SCOPEBLOCK_39_; .stackUsage 0; .scratchpadUsage 0; .endef;
.def __INJ_AW613E_START_ANGLE_1ST__AW613E_FUNC_END_; .val 0xffffffff; .scl 200; .type 0xe; .endef;
	// seq   end;;
.opstart 0x0fffffff; .opend;
.def; .ef; .scl 101; .tag _INJ_AW613E_START_ANGLE_1ST_; .endef;
.breakable;

.file "..\..\src\etpuc_inj.c";

.line 611;
.def _INJ_AW613E_PHASE_; .val 0x0; .scl 2; .etpuclass INJ; .type 0x80000022; .endef;
.def; .bf; .scl 101; .tag _INJ_AW613E_PHASE_; .endef;
.def _INJ_AW613E_PHASE_; .val 0xffffffff; .scl 200; .type 0xe; .endef;
.def; .bb; .scl 100; .tag __INJ_AW613E_PHASE__AW613E_SCOPEBLOCK_49_; .endef;

.line 614;
	// seq  if SampledLinkServiceRequest==false then goto PHASE__AW613E_ELSE_IFELSE_20, flush;;
.opstart 0xf3100007; .oplabel BAF_13_0_,StandardTest,__INJ_AW613E_PHASE__AW613E_ELSE_IFELSE_20_,0;  .opend;
.def __INJ_AW613E_PHASE__AW613E_THEN_IF_ELSE_20_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 615;
.def; .bb; .scl 100; .tag __INJ_AW613E_PHASE__AW613E_SCOPEBLOCK_50_; .endef;

.line 616;
	// seq  goto Init_NoReturn, flush;;
.opstart 0xf7d00007; .oplabel BAF_13_0_,StandardTest,_INJ_AW613E_Init_NoReturn_,0;  .opend;

.line 617;
.def; .eb; .scl 100; .tag __INJ_AW613E_PHASE__AW613E_SCOPEBLOCK_50_; .stackUsage 0; .scratchpadUsage 0; .endef;
	// seq  goto PHASE__AW613E_END_IFELSE_20, flush;;
.opstart 0xf7d00007; .oplabel BAF_13_0_,StandardTest,__INJ_AW613E_PHASE__AW613E_END_IFELSE_20_,0;  .opend;
.def __INJ_AW613E_PHASE__AW613E_ELSE_IFELSE_20_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 619;
.def; .bb; .scl 100; .tag __INJ_AW613E_PHASE__AW613E_SCOPEBLOCK_51_; .endef;

.line 620;
	// seq  goto Phase_NoReturn, flush;;
.opstart 0xf7d00007; .oplabel BAF_13_0_,StandardTest,_INJ_AW613E_Phase_NoReturn_,0;  .opend;

.line 621;
.def; .eb; .scl 100; .tag __INJ_AW613E_PHASE__AW613E_SCOPEBLOCK_51_; .stackUsage 0; .scratchpadUsage 0; .endef;
.def __INJ_AW613E_PHASE__AW613E_END_IFELSE_20_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 622;
.def; .eb; .scl 100; .tag __INJ_AW613E_PHASE__AW613E_SCOPEBLOCK_49_; .stackUsage 0; .scratchpadUsage 0; .endef;
.def __INJ_AW613E_PHASE__AW613E_FUNC_END_; .val 0xffffffff; .scl 200; .type 0xe; .endef;
	// seq   end;;
.opstart 0x0fffffff; .opend;
.def; .ef; .scl 101; .tag _INJ_AW613E_PHASE_; .endef;
.breakable;

.file "..\..\src\etpuc_inj.c";

.line 631;
.def _INJ_AW613E_STOP_ANGLE_WHILE_ACTIVE_; .val 0x0; .scl 2; .etpuclass INJ; .type 0x80000022; .endef;
.def; .bf; .scl 101; .tag _INJ_AW613E_STOP_ANGLE_WHILE_ACTIVE_; .endef;
.def _INJ_AW613E_STOP_ANGLE_WHILE_ACTIVE_; .val 0xffffffff; .scl 200; .type 0xe; .endef;
.def; .bb; .scl 100; .tag __INJ_AW613E_STOP_ANGLE_WHILE_ACTIVE__AW613E_SCOPEBLOCK_52_; .endef;

.line 634;
	// seq  if SampledLinkServiceRequest==false then goto STOP_ANGLE_WHILE_ACTIVE__AW613E_ELSE_IFELSE_21, flush;;
.opstart 0xf3100007; .oplabel BAF_13_0_,StandardTest,__INJ_AW613E_STOP_ANGLE_WHILE_ACTIVE__AW613E_ELSE_IFELSE_21_,0;  .opend;
.def __INJ_AW613E_STOP_ANGLE_WHILE_ACTIVE__AW613E_THEN_IF_ELSE_21_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 635;
.def; .bb; .scl 100; .tag __INJ_AW613E_STOP_ANGLE_WHILE_ACTIVE__AW613E_SCOPEBLOCK_53_; .endef;

.line 636;
	// seq  goto Init_NoReturn, flush;;
.opstart 0xf7d00007; .oplabel BAF_13_0_,StandardTest,_INJ_AW613E_Init_NoReturn_,0;  .opend;

.line 637;
.def; .eb; .scl 100; .tag __INJ_AW613E_STOP_ANGLE_WHILE_ACTIVE__AW613E_SCOPEBLOCK_53_; .stackUsage 0; .scratchpadUsage 0; .endef;
	// seq  goto STOP_ANGLE_WHILE_ACTIVE__AW613E_END_IFELSE_21, flush;;
.opstart 0xf7d00007; .oplabel BAF_13_0_,StandardTest,__INJ_AW613E_STOP_ANGLE_WHILE_ACTIVE__AW613E_END_IFELSE_21_,0;  .opend;
.def __INJ_AW613E_STOP_ANGLE_WHILE_ACTIVE__AW613E_ELSE_IFELSE_21_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 639;
.def; .bb; .scl 100; .tag __INJ_AW613E_STOP_ANGLE_WHILE_ACTIVE__AW613E_SCOPEBLOCK_54_; .endef;

.line 641;
	// ram   p_31_24 = error;; // *((channel int8 *) 0x14;
.opstart 0xcfeff985; .oplabel AID_6_0_,INJ,_INJ_AW613E_error_,0;  .opend;
	// alu    a = p_31_24+0x0;;
.opstart 0x00020419; .opend;
	// alu    a = a | 0x8, SampleFlags;;
.opstart 0x08290b82; .opend;
	// alu    p_31_24 = a+0x0;;
.opstart 0x0009a419; .opend;
	// ram   error = p_31_24;; // *((channel int8 *) 0x14;
.opstart 0xcffff985; .oplabel AID_6_0_,INJ,_INJ_AW613E_error_,0;  .opend;

.line 645;
	// chan  clear MatchEnableLatches;;
.opstart 0x7ffffffd; .opend;

.line 647;
	// chan  clear MatchRecognitionLatchA;;
.opstart 0x7ffffeff; .opend;

.line 649;
	// seq  if FunctionMode0==true then goto STOP_ANGLE_WHILE_ACTIVE__AW613E_ELSE_IFELSE_22, flush;;
.opstart 0xf3d80007; .oplabel BAF_13_0_,StandardTest,__INJ_AW613E_STOP_ANGLE_WHILE_ACTIVE__AW613E_ELSE_IFELSE_22_,0;  .opend;
.def __INJ_AW613E_STOP_ANGLE_WHILE_ACTIVE__AW613E_THEN_IF_ELSE_22_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 650;
.def; .bb; .scl 100; .tag __INJ_AW613E_STOP_ANGLE_WHILE_ACTIVE__AW613E_SCOPEBLOCK_55_; .endef;

.line 651;
	// chan  CurrentOutputPin = low;;
.opstart 0x7ffffdfe; .opend;

.line 652;
.def; .eb; .scl 100; .tag __INJ_AW613E_STOP_ANGLE_WHILE_ACTIVE__AW613E_SCOPEBLOCK_55_; .stackUsage 0; .scratchpadUsage 0; .endef;
	// seq  goto STOP_ANGLE_WHILE_ACTIVE__AW613E_END_IFELSE_22, flush;;
.opstart 0xf7d00007; .oplabel BAF_13_0_,StandardTest,__INJ_AW613E_STOP_ANGLE_WHILE_ACTIVE__AW613E_END_IFELSE_22_,0;  .opend;
.def __INJ_AW613E_STOP_ANGLE_WHILE_ACTIVE__AW613E_ELSE_IFELSE_22_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 654;
.def; .bb; .scl 100; .tag __INJ_AW613E_STOP_ANGLE_WHILE_ACTIVE__AW613E_SCOPEBLOCK_56_; .endef;

.line 655;
	// chan  CurrentOutputPin = high;;
.opstart 0x7ffffbfe; .opend;

.line 656;
.def; .eb; .scl 100; .tag __INJ_AW613E_STOP_ANGLE_WHILE_ACTIVE__AW613E_SCOPEBLOCK_56_; .stackUsage 0; .scratchpadUsage 0; .endef;
.def __INJ_AW613E_STOP_ANGLE_WHILE_ACTIVE__AW613E_END_IFELSE_22_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 658;
	// chan  clear ChannelFlag0;;
.opstart 0x0ffffe7e; .opend;

.line 661;
	// ram   p_31_24 = bank_chans_mask;; // *((channel int8 *) 0x10;
.opstart 0xcfeff984; .oplabel AID_6_0_,INJ,_INJ_AW613E_bank_chans_mask_,0;  .opend;
	// alu    a = p_31_24+0x0;;
.opstart 0x00020419; .opend;
	// alu    a = ((u24) 0)-a-1, SampleFlags;;
.opstart 0x1e3f0eff; .opend;
	// ram   p_31_24 = inj_global;; // *((global int8 *) 0x0;
.opstart 0xcfeff100; .oplabel AID_7_0_,AW6B2D_NAMELESS_CLASS,inj_global,0;  .opend;
	// alu    sr = p_31_24+0x0;;
.opstart 0x00021419; .opend;
	// alu    a = sr & a, SampleFlags;;
.opstart 0x2b3a0ff2; .opend;
	// alu    p_31_24 = a+0x0;;
.opstart 0x0009a419; .opend;
	// ram   inj_global = p_31_24;; // *((global int8 *) 0x0;
.opstart 0xcffff100; .oplabel AID_7_0_,AW6B2D_NAMELESS_CLASS,inj_global,0;  .opend;

.line 662;
	// ram   p_23_0 = bank_chans_mask;; // *((channel int24 *) 0x11;
.opstart 0xbfeffb84; .oplabel AID_6_0_,INJ,_INJ_AW613E_bank_chans_mask_,1;  .opend;
	// alu    a = ((u24) 0)-p-1, SampleFlags;;
.opstart 0x1e1f0eff; .opend;
	// ram   p_23_0 = inj_global;; // *((global int24 *) 0x1;
.opstart 0x9feffb00; .oplabel AID_7_0_,AW6B2D_NAMELESS_CLASS,inj_global,1;  .opend;
	// alu    a = p & a, SampleFlags;;
.opstart 0x2b380ff2; .opend;
	// alu    p = a+0x0;;
.opstart 0x00097419; .opend;
	// ram   inj_global = p_23_0;; // *((global int24 *) 0x1;
.opstart 0x9ffffb00; .oplabel AID_7_0_,AW6B2D_NAMELESS_CLASS,inj_global,1;  .opend;

.line 665;
	// ram   p_23_0 = eng_cycle_tcr2_ticks;; // *((global int24 *) 0x1;
.opstart 0x9feffb00; .oplabel AID_7_0_,AW6B2D_NAMELESS_CLASS,eng_cycle_tcr2_ticks,0;  .opend;
	// alu    a = p+0x0;;
.opstart 0x00080419; .opend;
	// ram   p_23_0 = tdc_angle_actual;; // *((channel int24 *) 0x21;
.opstart 0xbfeffb88; .oplabel AID_6_0_,INJ,_INJ_AW613E_tdc_angle_actual_,0;  .opend;
	// alu    a = p+a, SampleFlags;;
.opstart 0x1f380eff; .opend;
	// alu    p = a+0x0;;
.opstart 0x00097419; .opend;
	// ram   tdc_angle_actual = p_23_0;; // *((channel int24 *) 0x21;
.opstart 0xbffffb88; .oplabel AID_6_0_,INJ,_INJ_AW613E_tdc_angle_actual_,0;  .opend;

.line 668;
	// seq  call ScheduleIRQAngle, flush;;
.opstart 0xffd00007; .oplabel BAF_13_0_,StandardTest,_INJ_AW613E_ScheduleIRQAngle_,0;  .opend;

.line 671;
	// seq  call ScheduleStartAngle1st, flush;;
.opstart 0xffd00007; .oplabel BAF_13_0_,StandardTest,_INJ_AW613E_ScheduleStartAngle1st_,0;  .opend;

.line 674;
	// seq  goto StopBankChannels_NoReturn, flush;;
.opstart 0xf7d00007; .oplabel BAF_13_0_,StandardTest,_INJ_AW613E_StopBankChannels_NoReturn_,0;  .opend;

.line 675;
.def; .eb; .scl 100; .tag __INJ_AW613E_STOP_ANGLE_WHILE_ACTIVE__AW613E_SCOPEBLOCK_54_; .stackUsage 0; .scratchpadUsage 0; .endef;
.def __INJ_AW613E_STOP_ANGLE_WHILE_ACTIVE__AW613E_END_IFELSE_21_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 676;
.def; .eb; .scl 100; .tag __INJ_AW613E_STOP_ANGLE_WHILE_ACTIVE__AW613E_SCOPEBLOCK_52_; .stackUsage 0; .scratchpadUsage 0; .endef;
.def __INJ_AW613E_STOP_ANGLE_WHILE_ACTIVE__AW613E_FUNC_END_; .val 0xffffffff; .scl 200; .type 0xe; .endef;
	// seq   end;;
.opstart 0x0fffffff; .opend;
.def; .ef; .scl 101; .tag _INJ_AW613E_STOP_ANGLE_WHILE_ACTIVE_; .endef;
.breakable;

.file "..\..\src\etpuc_inj.c";

.line 686;
.def _INJ_AW613E_STOP_ANGLE_POST_ACTIVE_; .val 0x0; .scl 2; .etpuclass INJ; .type 0x80000022; .endef;
.def; .bf; .scl 101; .tag _INJ_AW613E_STOP_ANGLE_POST_ACTIVE_; .endef;
.def _INJ_AW613E_STOP_ANGLE_POST_ACTIVE_; .val 0xffffffff; .scl 200; .type 0xe; .endef;
.def; .bb; .scl 100; .tag __INJ_AW613E_STOP_ANGLE_POST_ACTIVE__AW613E_SCOPEBLOCK_57_; .endef;

.line 689;
	// seq  if SampledLinkServiceRequest==false then goto STOP_ANGLE_POST_ACTIVE__AW613E_ELSE_IFELSE_23, flush;;
.opstart 0xf3100007; .oplabel BAF_13_0_,StandardTest,__INJ_AW613E_STOP_ANGLE_POST_ACTIVE__AW613E_ELSE_IFELSE_23_,0;  .opend;
.def __INJ_AW613E_STOP_ANGLE_POST_ACTIVE__AW613E_THEN_IF_ELSE_23_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 690;
.def; .bb; .scl 100; .tag __INJ_AW613E_STOP_ANGLE_POST_ACTIVE__AW613E_SCOPEBLOCK_58_; .endef;

.line 691;
	// seq  goto Init_NoReturn, flush;;
.opstart 0xf7d00007; .oplabel BAF_13_0_,StandardTest,_INJ_AW613E_Init_NoReturn_,0;  .opend;

.line 692;
.def; .eb; .scl 100; .tag __INJ_AW613E_STOP_ANGLE_POST_ACTIVE__AW613E_SCOPEBLOCK_58_; .stackUsage 0; .scratchpadUsage 0; .endef;
	// seq  goto STOP_ANGLE_POST_ACTIVE__AW613E_END_IFELSE_23, flush;;
.opstart 0xf7d00007; .oplabel BAF_13_0_,StandardTest,__INJ_AW613E_STOP_ANGLE_POST_ACTIVE__AW613E_END_IFELSE_23_,0;  .opend;
.def __INJ_AW613E_STOP_ANGLE_POST_ACTIVE__AW613E_ELSE_IFELSE_23_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 694;
.def; .bb; .scl 100; .tag __INJ_AW613E_STOP_ANGLE_POST_ACTIVE__AW613E_SCOPEBLOCK_59_; .endef;

.line 696;
	// ram   p_23_0 = eng_cycle_tcr2_ticks;; // *((global int24 *) 0x1;
.opstart 0x9feffb00; .oplabel AID_7_0_,AW6B2D_NAMELESS_CLASS,eng_cycle_tcr2_ticks,0;  .opend;
	// alu    a = p+0x0;;
.opstart 0x00080419; .opend;
	// ram   p_23_0 = tdc_angle_actual;; // *((channel int24 *) 0x21;
.opstart 0xbfeffb88; .oplabel AID_6_0_,INJ,_INJ_AW613E_tdc_angle_actual_,0;  .opend;
	// alu    a = p+a, SampleFlags;;
.opstart 0x1f380eff; .opend;
	// alu    p = a+0x0;;
.opstart 0x00097419; .opend;
	// ram   tdc_angle_actual = p_23_0;; // *((channel int24 *) 0x21;
.opstart 0xbffffb88; .oplabel AID_6_0_,INJ,_INJ_AW613E_tdc_angle_actual_,0;  .opend;

.line 699;
	// seq  call ScheduleIRQAngle, flush;;
.opstart 0xffd00007; .oplabel BAF_13_0_,StandardTest,_INJ_AW613E_ScheduleIRQAngle_,0;  .opend;

.line 702;
	// seq  call ScheduleStartAngle1st, flush;;
.opstart 0xffd00007; .oplabel BAF_13_0_,StandardTest,_INJ_AW613E_ScheduleStartAngle1st_,0;  .opend;

.line 703;
.def; .eb; .scl 100; .tag __INJ_AW613E_STOP_ANGLE_POST_ACTIVE__AW613E_SCOPEBLOCK_59_; .stackUsage 0; .scratchpadUsage 0; .endef;
.def __INJ_AW613E_STOP_ANGLE_POST_ACTIVE__AW613E_END_IFELSE_23_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 704;
.def; .eb; .scl 100; .tag __INJ_AW613E_STOP_ANGLE_POST_ACTIVE__AW613E_SCOPEBLOCK_57_; .stackUsage 0; .scratchpadUsage 0; .endef;
.def __INJ_AW613E_STOP_ANGLE_POST_ACTIVE__AW613E_FUNC_END_; .val 0xffffffff; .scl 200; .type 0xe; .endef;
	// seq   end;;
.opstart 0x0fffffff; .opend;
.def; .ef; .scl 101; .tag _INJ_AW613E_STOP_ANGLE_POST_ACTIVE_; .endef;
.breakable;

.file "..\..\src\etpuc_inj.c";

.line 711;
.def _INJ_AW613E_IRQ_ANGLE_; .val 0x0; .scl 2; .etpuclass INJ; .type 0x80000022; .endef;
.def; .bf; .scl 101; .tag _INJ_AW613E_IRQ_ANGLE_; .endef;
.def _INJ_AW613E_IRQ_ANGLE_; .val 0xffffffff; .scl 200; .type 0xe; .endef;
.def; .bb; .scl 100; .tag __INJ_AW613E_IRQ_ANGLE__AW613E_SCOPEBLOCK_60_; .endef;

.line 714;
	// seq  if SampledLinkServiceRequest==false then goto IRQ_ANGLE__AW613E_ELSE_IFELSE_24, flush;;
.opstart 0xf3100007; .oplabel BAF_13_0_,StandardTest,__INJ_AW613E_IRQ_ANGLE__AW613E_ELSE_IFELSE_24_,0;  .opend;
.def __INJ_AW613E_IRQ_ANGLE__AW613E_THEN_IF_ELSE_24_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 715;
.def; .bb; .scl 100; .tag __INJ_AW613E_IRQ_ANGLE__AW613E_SCOPEBLOCK_61_; .endef;

.line 716;
	// seq  goto Init_NoReturn, flush;;
.opstart 0xf7d00007; .oplabel BAF_13_0_,StandardTest,_INJ_AW613E_Init_NoReturn_,0;  .opend;

.line 717;
.def; .eb; .scl 100; .tag __INJ_AW613E_IRQ_ANGLE__AW613E_SCOPEBLOCK_61_; .stackUsage 0; .scratchpadUsage 0; .endef;
	// seq  goto IRQ_ANGLE__AW613E_END_IFELSE_24, flush;;
.opstart 0xf7d00007; .oplabel BAF_13_0_,StandardTest,__INJ_AW613E_IRQ_ANGLE__AW613E_END_IFELSE_24_,0;  .opend;
.def __INJ_AW613E_IRQ_ANGLE__AW613E_ELSE_IFELSE_24_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 719;
.def; .bb; .scl 100; .tag __INJ_AW613E_IRQ_ANGLE__AW613E_SCOPEBLOCK_62_; .endef;

.line 721;
	// chan  set SvcdChan ChannelIntr;;
.opstart 0xffff3ef9; .opend;

.line 724;
	// ram   p_23_0 = tdc_angle_actual;; // *((channel int24 *) 0x21;
.opstart 0xbfeffb88; .oplabel AID_6_0_,INJ,_INJ_AW613E_tdc_angle_actual_,0;  .opend;
	// alu    a = p+0x0;;
.opstart 0x00080419; .opend;
	// ram   p_23_0 = angle_stop;; // *((channel int24 *) 0x19;
.opstart 0xbfeffb86; .oplabel AID_6_0_,INJ,_INJ_AW613E_angle_stop_,0;  .opend;
	// alu    a = a-p, SampleFlags;;
.opstart 0x1c190eff; .opend;
	// alu    ertB = a+0x0;;
.opstart 0x00093419; .opend;

.line 725;
	// chan  clear MatchRecognitionLatchB;;
.opstart 0x7fffffbf; .opend;

.line 726;
	// chan  matchB = ertB, set MatchEnableLatchB;;
.opstart 0x7fffffdf; .opend;

.line 728;
	// chan  set ChannelFlag1;;
.opstart 0x0ffffffe; .opend;

.line 729;
.def; .eb; .scl 100; .tag __INJ_AW613E_IRQ_ANGLE__AW613E_SCOPEBLOCK_62_; .stackUsage 0; .scratchpadUsage 0; .endef;
.def __INJ_AW613E_IRQ_ANGLE__AW613E_END_IFELSE_24_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 730;
.def; .eb; .scl 100; .tag __INJ_AW613E_IRQ_ANGLE__AW613E_SCOPEBLOCK_60_; .stackUsage 0; .scratchpadUsage 0; .endef;
.def __INJ_AW613E_IRQ_ANGLE__AW613E_FUNC_END_; .val 0xffffffff; .scl 200; .type 0xe; .endef;
	// seq   end;;
.opstart 0x0fffffff; .opend;
.def; .ef; .scl 101; .tag _INJ_AW613E_IRQ_ANGLE_; .endef;
.breakable;

.file "..\..\src\etpuc_inj.c";
.defentry; .ettype alternate; .etpin output; .etpuclass INJ; .ettable INJ; .etlabel _INJ_AW613E_UPDATE_; .index 0; .etpreload dont_care; .etmatch disabled; .line 744; .endentry;
.defentry; .ettype alternate; .etpin output; .etpuclass INJ; .ettable INJ; .etlabel _INJ_AW613E_UPDATE_; .index 1; .etpreload dont_care; .etmatch disabled; .line 745; .endentry;
.defentry; .ettype alternate; .etpin output; .etpuclass INJ; .ettable INJ; .etlabel _INJ_AW613E_UPDATE_; .index 2; .etpreload dont_care; .etmatch disabled; .line 746; .endentry;
.defentry; .ettype alternate; .etpin output; .etpuclass INJ; .ettable INJ; .etlabel _INJ_AW613E_UPDATE_; .index 3; .etpreload dont_care; .etmatch disabled; .line 747; .endentry;
.defentry; .ettype alternate; .etpin output; .etpuclass INJ; .ettable INJ; .etlabel _INJ_AW613E_STOP_; .index 4; .etpreload dont_care; .etmatch disabled; .line 741; .endentry;
.defentry; .ettype alternate; .etpin output; .etpuclass INJ; .ettable INJ; .etlabel _INJ_AW613E_INIT_; .index 5; .etpreload dont_care; .etmatch disabled; .line 736; .endentry;
.defentry; .ettype alternate; .etpin output; .etpuclass INJ; .ettable INJ; .etlabel _INJ_AW613E_INIT_; .index 6; .etpreload dont_care; .etmatch disabled; .line 737; .endentry;
.defentry; .ettype alternate; .etpin output; .etpuclass INJ; .ettable INJ; .etlabel _INJ_AW613E_INIT_; .index 7; .etpreload dont_care; .etmatch disabled; .line 738; .endentry;
.defentry; .ettype alternate; .etpin output; .etpuclass INJ; .ettable INJ; .etlabel _INJ_AW613E_START_ANGLE_1ST_; .index 8; .etpreload dont_care; .etmatch disabled; .line 750; .endentry;
.defentry; .ettype alternate; .etpin output; .etpuclass INJ; .ettable INJ; .etlabel _INJ_AW613E_PHASE_; .index 9; .etpreload dont_care; .etmatch disabled; .line 760; .endentry;
.defentry; .ettype alternate; .etpin output; .etpuclass INJ; .ettable INJ; .etlabel _INJ_AW613E_START_ANGLE_1ST_; .index 10; .etpreload dont_care; .etmatch disabled; .line 751; .endentry;
.defentry; .ettype alternate; .etpin output; .etpuclass INJ; .ettable INJ; .etlabel _INJ_AW613E_PHASE_; .index 11; .etpreload dont_care; .etmatch disabled; .line 761; .endentry;
.defentry; .ettype alternate; .etpin output; .etpuclass INJ; .ettable INJ; .etlabel _INJ_AW613E_START_ANGLE_1ST_; .index 12; .etpreload dont_care; .etmatch disabled; .line 752; .endentry;
.defentry; .ettype alternate; .etpin output; .etpuclass INJ; .ettable INJ; .etlabel _INJ_AW613E_PHASE_; .index 13; .etpreload dont_care; .etmatch disabled; .line 762; .endentry;
.defentry; .ettype alternate; .etpin output; .etpuclass INJ; .ettable INJ; .etlabel _INJ_AW613E_START_ANGLE_1ST_; .index 14; .etpreload dont_care; .etmatch disabled; .line 753; .endentry;
.defentry; .ettype alternate; .etpin output; .etpuclass INJ; .ettable INJ; .etlabel _INJ_AW613E_PHASE_; .index 15; .etpreload dont_care; .etmatch disabled; .line 763; .endentry;
.defentry; .ettype alternate; .etpin output; .etpuclass INJ; .ettable INJ; .etlabel _INJ_AW613E_IRQ_ANGLE_; .index 16; .etpreload dont_care; .etmatch disabled; .line 778; .endentry;
.defentry; .ettype alternate; .etpin output; .etpuclass INJ; .ettable INJ; .etlabel _INJ_AW613E_IRQ_ANGLE_; .index 17; .etpreload dont_care; .etmatch disabled; .line 779; .endentry;
.defentry; .ettype alternate; .etpin output; .etpuclass INJ; .ettable INJ; .etlabel _INJ_AW613E_STOP_ANGLE_POST_ACTIVE_; .index 18; .etpreload dont_care; .etmatch disabled; .line 774; .endentry;
.defentry; .ettype alternate; .etpin output; .etpuclass INJ; .ettable INJ; .etlabel _INJ_AW613E_STOP_ANGLE_WHILE_ACTIVE_; .index 19; .etpreload dont_care; .etmatch disabled; .line 770; .endentry;
.defentry; .ettype alternate; .etpin output; .etpuclass INJ; .ettable INJ; .etlabel _INJ_AW613E_IRQ_ANGLE_; .index 20; .etpreload dont_care; .etmatch disabled; .line 780; .endentry;
.defentry; .ettype alternate; .etpin output; .etpuclass INJ; .ettable INJ; .etlabel _INJ_AW613E_IRQ_ANGLE_; .index 21; .etpreload dont_care; .etmatch disabled; .line 781; .endentry;
.defentry; .ettype alternate; .etpin output; .etpuclass INJ; .ettable INJ; .etlabel _INJ_AW613E_STOP_ANGLE_POST_ACTIVE_; .index 22; .etpreload dont_care; .etmatch disabled; .line 775; .endentry;
.defentry; .ettype alternate; .etpin output; .etpuclass INJ; .ettable INJ; .etlabel _INJ_AW613E_STOP_ANGLE_WHILE_ACTIVE_; .index 23; .etpreload dont_care; .etmatch disabled; .line 771; .endentry;
.defentry; .ettype alternate; .etpin output; .etpuclass INJ; .ettable INJ; .etlabel _INJ_AW613E_START_ANGLE_1ST_; .index 24; .etpreload dont_care; .etmatch disabled; .line 754; .endentry;
.defentry; .ettype alternate; .etpin output; .etpuclass INJ; .ettable INJ; .etlabel _INJ_AW613E_PHASE_; .index 25; .etpreload dont_care; .etmatch disabled; .line 764; .endentry;
.defentry; .ettype alternate; .etpin output; .etpuclass INJ; .ettable INJ; .etlabel _INJ_AW613E_START_ANGLE_1ST_; .index 26; .etpreload dont_care; .etmatch disabled; .line 755; .endentry;
.defentry; .ettype alternate; .etpin output; .etpuclass INJ; .ettable INJ; .etlabel _INJ_AW613E_PHASE_; .index 27; .etpreload dont_care; .etmatch disabled; .line 765; .endentry;
.defentry; .ettype alternate; .etpin output; .etpuclass INJ; .ettable INJ; .etlabel _INJ_AW613E_START_ANGLE_1ST_; .index 28; .etpreload dont_care; .etmatch disabled; .line 756; .endentry;
.defentry; .ettype alternate; .etpin output; .etpuclass INJ; .ettable INJ; .etlabel _INJ_AW613E_PHASE_; .index 29; .etpreload dont_care; .etmatch disabled; .line 766; .endentry;
.defentry; .ettype alternate; .etpin output; .etpuclass INJ; .ettable INJ; .etlabel _INJ_AW613E_START_ANGLE_1ST_; .index 30; .etpreload dont_care; .etmatch disabled; .line 757; .endentry;
.defentry; .ettype alternate; .etpin output; .etpuclass INJ; .ettable INJ; .etlabel _INJ_AW613E_PHASE_; .index 31; .etpreload dont_care; .etmatch disabled; .line 767; .endentry;

