ETEC Tools V3.00A                  ASH WARE Inc.                  (C) 2015-2020
    /*******************************************************************************
    * This file has been modified by ASH WARE Inc. as allowed per the original 
    * license (see bottom of file), to add features and fix issues.
    *******************************************************************************/
    
    /*******************************************************************************
    *
    *  FREESCALE SEMICONDUCTOR INC. 2004-2014
    *  ALL RIGHTS RESERVED
    *  COPYRIGHT (c)
    *
    ********************************************************************************
    *
    *  FILE NAME:  etpuc_set.c
    *
    *  DESCRIPTION:
    *     This file includes general eTPU routines
    *     and generates a function set image file.
    *
    *******************************************************************************/
    
    // must use ETEC tools version 3.00A or newer to compile this software
    #pragma verify_version GE,  "3.00A", "this build requires ETEC version 3.00A or newer"
    
    /*******************************************************************************
    *  Includes
    *******************************************************************************/
    #include <etpu_std.h>
    #include "etpuc_set.h"
    
    /*******************************************************************************
    *  Global Variables
    *******************************************************************************/
    
    /*******************************************************************************
    *  Global Functions
    *******************************************************************************/
    
    /*******************************************************************************
    *  FUNCTION NAME: Link4
    *  DESCRIPTION: This function can be used to send links to 4 channels. 
    *    The channel numbers are packed into a single 32-bit argument, 
    *    each byte of which includes one channel number. 
    *******************************************************************************/
    void Link4(register_p31_0 link_chans)
    {
        register_p31_24  p31_24 ;     // 8 bits 
        register_p23_16  p23_16 ;     // 8 bits 
        register_p15_8   p15_8  ;     // 8 bits 
        register_p7_0    p7_0   ;     // 8 bits 
    
        link = p31_24;
233C: 0x00021411   alu    link = p_31_24+0x0;;
        link = p23_16;
2340: 0x00071411   alu    link = p_23_16+0x0;;
        link = p15_8;
2344: 0x00011411   alu    link = p_15_8+0x0;;
        link = p7_0;
    }
2348: 0xFFFFCEF9   seq  return, no_flush;;
234C: 0x00001411   alu    link = p_7_0+0x0;;
    
    
    /*******************************************************************************
    *  Output eTPU code image and information for CPU 
    *******************************************************************************/
    /* [MISRA 2004 Rule 3.4] usage of #pragma write documented in the Pragma Write 
       Manual, see https://www.ashware.com/Manuals */
    #pragma write h, (::ETPUfilename (cpu/etpu_set.h));
    #pragma write h, (/***************************************************************** );
    #pragma write h, (* WARNING: This file is automatically generated. DO NOT EDIT IT! );
    #pragma write h, (*);
    #pragma write h, (* FILE NAME: etpu_set.h  );
    #if defined(__TARGET_ETPU1__) || defined(__ETPU__)
    #pragma write h, (* ARCHITECTURE: eTPU );
    #else
    #pragma write h, (* ARCHITECTURE: eTPU2 );
    #endif
    #pragma write h, (*);
    #pragma write h, (* This file was generated by: __FILE__ on __DATE__, __TIME__ );
    #pragma write h, (*);
    #pragma write h, (*****************************************************************/);
    #pragma write h, (#ifndef _ETPU_SET_H_ );
    #pragma write h, (#define _ETPU_SET_H_ );
    #pragma write h, ();
    #pragma write h, (/***************************************************************** );
    #pragma write h, (* Function Set Definitions );
    #pragma write h, (*****************************************************************/ );
    #pragma write h, (#define FS_ETPU_ENTRY_TABLE 0x0000);
    #pragma write h, (#define FS_ETPU_MISC ::ETPUmisc);
    #if defined(__TARGET_ETPU2__) || defined(__ETPU2__)
    #pragma write h, (#define FS_ETPU_ENGINE_MEM_SIZE  ::ETPUenginememsize );
    #endif
    #pragma write h, ();
    #pragma write h, (/***************************************************************** );
    #pragma write h, (* Initialization values of global variables );
    #pragma write h, (*   On eTPU(2) initialization, this array must be copied );
    #pragma write h, (*   into the eTPU DATA RAM from its start address. );
    #pragma write h, (*****************************************************************/ );
    #pragma write h, (const uint32_t etpu_globals[] = { );
    #pragma write h, (::ETPUglobalimage32 );
    #pragma write h, (};);
    #pragma write h, ();
    #pragma write h, (/***************************************************************** );
    #pragma write h, (* Image of the compiled eTPU code binary );
    #pragma write h, (*   On eTPU(2) initialization, this array must be copied );
    #pragma write h, (*   into the eTPU CODE RAM. );
    #pragma write h, (*****************************************************************/ );
    #pragma write h, (const uint32_t etpu_code[] = { );
    #pragma write h, (::ETPUcode32 );
    #pragma write h, (};);
    #pragma write h, ();
    #pragma write h, (/***************************************************************** );
    #pragma write h, (* List of eTPU functions included in this set );
    #pragma write h, (****************************************************************** );
    #pragma write h, (::ETPUnames);
    #pragma write h, (*/);
    #pragma write h, ();
    #pragma write h, (#endif /* _ETPU_SET_H_ */ );
    #pragma write h, ();
    
    
    /*********************************************************************
     *
     * Copyright:
     *	Freescale Semiconductor, INC. All Rights Reserved.
     *  You are hereby granted a copyright license to use, modify, and
     *  distribute the SOFTWARE so long as this entire notice is
     *  retained without alteration in any modified and/or redistributed
     *  versions, and that such modified versions are clearly identified
     *  as such. No licenses are granted by implication, estoppel or
     *  otherwise under any patents or trademarks of Freescale
     *  Semiconductor, Inc. This software is provided on an "AS IS"
     *  basis and without warranty.
     *
     *  To the maximum extent permitted by applicable law, Freescale
     *  Semiconductor DISCLAIMS ALL WARRANTIES WHETHER EXPRESS OR IMPLIED,
     *  INCLUDING IMPLIED WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A
     *  PARTICULAR PURPOSE AND ANY WARRANTY AGAINST INFRINGEMENT WITH
     *  REGARD TO THE SOFTWARE (INCLUDING ANY MODIFIED VERSIONS THEREOF)
     *  AND ANY ACCOMPANYING WRITTEN MATERIALS.
     *
     *  To the maximum extent permitted by applicable law, IN NO EVENT
     *  SHALL Freescale Semiconductor BE LIABLE FOR ANY DAMAGES WHATSOEVER
     *  (INCLUDING WITHOUT LIMITATION, DAMAGES FOR LOSS OF BUSINESS PROFITS,
     *  BUSINESS INTERRUPTION, LOSS OF BUSINESS INFORMATION, OR OTHER
     *  PECUNIARY LOSS) ARISING OF THE USE OR INABILITY TO USE THE SOFTWARE.
     *
     *  Freescale Semiconductor assumes no responsibility for the
     *  maintenance and support of this software
     *
     ********************************************************************/
    /*******************************************************************************
    *
    *  REVISION HISTORY:
    *
    *  FILE OWNER: Milan Brejl [r54529]
    *  Revision 1.0  2014/03/16  r54529
    *  Minor comment and formating improvements. MISRA compliancy check.
    *  Ready for release 1.0.
    *
    *  Revision 0.1  2011/05/15  r54529
    *  Initial version.
    *
    *******************************************************************************/
