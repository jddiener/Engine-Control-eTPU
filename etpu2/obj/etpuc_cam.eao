// assembly code generated from source file etpuc_cam.c

.file "..\..\src\etpuc_cam.c";
.producer ETEC_cc;
.version 3, 0, A;
.target ETPU2;
.compdir "C:\GIT\ASHWARE\Tests\Drivers\EnhancedEngineControl\src\";

.regisgp TPR, 0;
.regisgp TRR, 0;
.regisgp TCR1, 0;
.regisgp TCR2, 0;

.file "..\..\src\etpuc_cam.c";
.file "C:\\GIT\\ASHWARE\\Builds\\Include\\etpu_std.h";
.file "C:\\GIT\\ASHWARE\\Builds\\Include\\ETpu_Hw.h";
.def register_a; .scl 13; .type 0x4; .endef;
.def register_ac; .scl 13; .type 0x4; .endef;
.def registera; .scl 13; .type 0x4; .endef;
.def register_b; .scl 13; .type 0x4; .endef;
.def register_c; .scl 13; .type 0x4; .endef;
.def register_d; .scl 13; .type 0x4; .endef;
.def register_chan; .scl 13; .type 0xc; .endef;
.def register_diob; .scl 13; .type 0x4; .endef;
.def register_erta; .scl 13; .type 0x4; .endef;
.def register_ertb; .scl 13; .type 0x4; .endef;
.def register_link; .scl 13; .type 0xc; .endef;
.def register_mach; .scl 13; .type 0x4; .endef;
.def register_macl; .scl 13; .type 0x4; .endef;
.def register_p; .scl 13; .type 0x4; .endef;
.def register_p23_0; .scl 13; .type 0x4; .endef;
.def register_rar; .scl 13; .type 0x4; .endef;
.def register_sr; .scl 13; .type 0x4; .endef;
.def register_tcr1; .scl 13; .type 0x4; .endef;
.def register_tcr2; .scl 13; .type 0x4; .endef;
.def register_tpr; .scl 13; .type 0xd; .endef;
.def register_trr; .scl 13; .type 0x4; .endef;
.def register_chan_base; .scl 13; .type 0xe; .endef;
.def register_engine_base; .scl 13; .type 0xe; .endef;
.def register_p31_24; .scl 13; .type 0x2; .endef;
.def register_p23_16; .scl 13; .type 0x2; .endef;
.def register_p15_8; .scl 13; .type 0x2; .endef;
.def register_p7_0; .scl 13; .type 0x2; .endef;
.def register_p31_16; .scl 13; .type 0x3; .endef;
.def register_p15_0; .scl 13; .type 0x3; .endef;
.def register_p31_0; .scl 13; .type 0x5; .endef;
.def register_cc; .scl 13; .tag cc_struct; .type 0x0; .endef;

.def tpr_struct; .scl 10; .type 0x8; .size 2; .endef;
.def TICKS; .val 0x6; .scl 18; .size 10; .type 0xd; .endef;
.def TPR10; .val 0x5; .scl 18; .size 1; .type 0xd; .endef;
.def HOLD; .val 0x4; .scl 18; .size 1; .type 0xd; .endef;
.def IPH; .val 0x3; .scl 18; .size 1; .type 0xd; .endef;
.def MISSCNT; .val 0x1; .scl 18; .size 2; .type 0xd; .endef;
.def LAST; .val 0x0; .scl 18; .size 1; .type 0xd; .endef;
.def; .eos; .scl 102; .endef;

.file "C:\\GIT\\ASHWARE\\Builds\\Include\\etpu_std.h";
.file "C:\\GIT\\ASHWARE\\Builds\\Include\\ETpu_Lib.h";
.file "C:\\GIT\\ASHWARE\\Builds\\Include\\etpu_std.h";
.file "..\..\src\etpuc_cam.c";
.file "..\..\src\etpuc_cam.h";

.def CAM_LOG; .scl 10; .type 0x8; .size 4; .endef;
.def trans; .val 0x0; .scl 8; .type 0x2; .endef;
.def angle; .val 0x1; .scl 8; .type 0xe; .endef;
.def; .eos; .scl 102; .endef;

.line 79;
.def CAM; .scl 201; .type 0x80000006; .size 20; .endef;
.line 61;
.def _CAM_AW613E_INIT_; .val 0xffffffff; .scl 5; .etpuclass CAM; .type 0x80000022; .endef;
.line 62;
.def _CAM_AW613E_RESET_; .val 0xffffffff; .scl 5; .etpuclass CAM; .type 0x80000022; .endef;
.line 63;
.def _CAM_AW613E_LOG_1_TRANS_; .val 0xffffffff; .scl 5; .etpuclass CAM; .type 0x80000022; .endef;
.line 64;
.def _CAM_AW613E_LOG_2_TRANS_; .val 0xffffffff; .scl 5; .etpuclass CAM; .type 0x80000022; .endef;

.file "..\..\src\etpuc_cam.c";
.file "..\..\src\etpuc_crank.h";
.line 163;
.def CRANK; .scl 201; .type 0x80000006; .size 92; .endef;
.line 123;
.def _CRANK_AW613E_INIT_; .val 0xffffffff; .scl 5; .etpuclass CRANK; .type 0x80000022; .endef;
.line 124;
.def _CRANK_AW613E_ANGLE_ADJUST_; .val 0xffffffff; .scl 5; .etpuclass CRANK; .type 0x80000022; .endef;
.line 125;
.def _CRANK_AW613E_CRANK_WITH_GAP_; .val 0xffffffff; .scl 5; .etpuclass CRANK; .type 0x80000022; .endef;
.line 126;
.def _CRANK_AW613E_CRANK_WITH_ADDITIONAL_TOOTH_; .val 0xffffffff; .scl 5; .etpuclass CRANK; .type 0x80000022; .endef;
.line 129;
.def _CRANK_AW613E_INIT_EMUL_; .val 0xffffffff; .scl 5; .etpuclass CRANK; .type 0x80000022; .endef;
.line 130;
.def _CRANK_AW613E_ANGLE_ADJUST_EMUL_; .val 0xffffffff; .scl 5; .etpuclass CRANK; .type 0x80000022; .endef;
.line 131;
.def _CRANK_AW613E_SET_SPEED_EMUL_; .val 0xffffffff; .scl 5; .etpuclass CRANK; .type 0x80000022; .endef;
.line 132;
.def _CRANK_AW613E_CRANK_WITH_GAP_EMUL_; .val 0xffffffff; .scl 5; .etpuclass CRANK; .type 0x80000022; .endef;
.line 140;
.def _CRANK_AW613E_ToothArray_Log_; .val 0xffffffff; .scl 5; .etpuclass CRANK; .type 0x21; .endef;
.line 141;
.def _CRANK_AW613E_Set_TRR_; .val 0xffffffff; .scl 5; .etpuclass CRANK; .type 0x21; .endef;
.line 146;
.def _CRANK_AW613E_Window_NoReturn_; .val 0xffffffff; .scl 5; .etpuclass CRANK; .type 0x80000029; .endef;
.line 148;
.def _CRANK_AW613E_WindowAcrossGap_NoReturn_; .val 0xffffffff; .scl 5; .etpuclass CRANK; .type 0x80000029; .endef;
.line 150;
.def _CRANK_AW613E_WindowCloseAt_NoReturn_; .val 0xffffffff; .scl 5; .etpuclass CRANK; .type 0x80000029; .endef;
.line 153;
.def _CRANK_AW613E_WindowClose_NoReturn_; .val 0xffffffff; .scl 5; .etpuclass CRANK; .type 0x80000029; .endef;
.line 154;
.def _CRANK_AW613E_Stall_NoReturn_; .val 0xffffffff; .scl 5; .etpuclass CRANK; .type 0x80000029; .endef;

.file "..\..\src\etpuc_cam.c";
.file "..\..\src\etpuc_set.h";
.file "..\..\src\etpuc_cam.c";
.line 265;
.pragmawrite h, (::ETPUfilename (cpu/etpu_cam_auto.h));
.line 266;
.pragmawrite h, (/**************************************************************** );
.line 267;
.pragmawrite h, (* WARNING: This file is automatically generated. DO NOT EDIT IT! );
.line 268;
.pragmawrite h, (*);
.line 269;
.pragmawrite h, (* FILE NAME: etpu_cam_auto.h  );
.line 273;
.pragmawrite h, (* ARCHITECTURE: eTPU2 );
.line 275;
.pragmawrite h, (*);
.line 276;
.pragmawrite h, (* This file was generated by: "etpuc_cam.c" on "Jan 12 2022", "17:17:46" );
.line 277;
.pragmawrite h, (*);
.line 278;
.pragmawrite h, (* This file provides an interface between eTPU code and CPU       );
.line 279;
.pragmawrite h, (* code. All references to the eTPU function should be made with   );
.line 280;
.pragmawrite h, (* information in this file. This allows only symbolic             );
.line 281;
.pragmawrite h, (* information to be referenced which allows the eTPU code to be   );
.line 282;
.pragmawrite h, (* optimized without effecting the CPU code.                       );
.line 283;
.pragmawrite h, (*****************************************************************/);
.line 284;
.pragmawrite h, (#ifndef _ETPU_CAM_AUTO_H_ );
.line 285;
.pragmawrite h, (#define _ETPU_CAM_AUTO_H_ );
.line 286;
.pragmawrite h, ( );
.line 287;
.pragmawrite h, (/* Function Configuration Information */);
.line 288;
.pragmawrite h, (::ETPUliteral(#define FS_ETPU_CAM_FUNCTION_NUMBER) ::ETPUfunctionnumber(CAM) );
.line 289;
.pragmawrite h, (::ETPUliteral(#define FS_ETPU_CAM_TABLE_SELECT) ::ETPUentrytype(CAM) );
.line 290;
.pragmawrite h, (::ETPUliteral(#define FS_ETPU_CAM_NUM_PARMS) ::ETPUram(CAM) );
.line 291;
.pragmawrite h, ( );
.line 292;
.pragmawrite h, (/* Host Service Request Definitions */);
.line 293;
.pragmawrite h, (::ETPUliteral(#define FS_ETPU_CAM_HSR_INIT)   7 );
.line 294;
.pragmawrite h, (::ETPUliteral(#define FS_ETPU_CAM_HSR_RESET)  1 );
.line 295;
.pragmawrite h, ( );
.line 296;
.pragmawrite h, (/* Function Mode Bit Definitions */);
.line 297;
.pragmawrite h, (::ETPUliteral(#define FS_ETPU_CAM_FM0_LOG_FALLING)  (1) );
.line 298;
.pragmawrite h, (::ETPUliteral(#define FS_ETPU_CAM_FM1_LOG_RISING)   (1 << 1) );
.line 299;
.pragmawrite h, ( );
.line 300;
.pragmawrite h, (/* Parameter Definitions */);
.line 301;
.pragmawrite h, (::ETPUliteral(#define FS_ETPU_CAM_OFFSET_LOG       ) ::ETPUlocation (CAM, log      ) );
.line 302;
.pragmawrite h, (::ETPUliteral(#define FS_ETPU_CAM_OFFSET_LOG_SIZE  ) ::ETPUlocation (CAM, log_size ) );
.line 303;
.pragmawrite h, (::ETPUliteral(#define FS_ETPU_CAM_OFFSET_LOG_IDX   ) ::ETPUlocation (CAM, log_idx  ) );
.line 304;
.pragmawrite h, (::ETPUliteral(#define FS_ETPU_CAM_OFFSET_LOG_COUNT ) ::ETPUlocation (CAM, log_count) );
.line 305;
.pragmawrite h, (::ETPUliteral(#define FS_ETPU_CAM_OFFSET_ERROR     ) ::ETPUlocation (CAM, error    ) );
.line 306;
.pragmawrite h, ( );
.line 307;
.pragmawrite h, (/* Cam Log */);
.line 308;
.pragmawrite h, (::ETPUliteral(#define FS_ETPU_CAM_LOG_ANGLE_MASK    ) 0x00FFFFFF );
.line 309;
.pragmawrite h, (::ETPUliteral(#define FS_ETPU_CAM_LOG_TRANS_MASK    ) (1<<24) );
.line 310;
.pragmawrite h, (::ETPUliteral(#define FS_ETPU_CAM_LOG_TRANS_FALLING ) (0<<24) );
.line 311;
.pragmawrite h, (::ETPUliteral(#define FS_ETPU_CAM_LOG_TRANS_RISING  ) (1<<24) );
.line 312;
.pragmawrite h, ( );
.line 313;
.pragmawrite h, (/* Errors */);
.line 314;
.pragmawrite h, (::ETPUliteral(#define FS_ETPU_CAM_ERROR_NO           ) 0           );
.line 315;
.pragmawrite h, (::ETPUliteral(#define FS_ETPU_CAM_ERROR_ZERO_TRANS   ) 1   );
.line 316;
.pragmawrite h, (::ETPUliteral(#define FS_ETPU_CAM_ERROR_LOG_OVERFLOW ) 2 );
.line 317;
.pragmawrite h, ( );
.line 318;
.pragmawrite h, (#endif );
.file "..\..\src\etpuc_cam.h";
.line 50;
.def _CAM_AW613E_log_size_; .val 0x1; .scl 3; .etpuclass CAM; .type 0xe; .const 0x1; .endef;
.line 51;
.def _CAM_AW613E_log_idx_; .val 0x5; .scl 3; .etpuclass CAM; .type 0xe; .endef;
.line 52;
.def _CAM_AW613E_log_count_; .val 0x9; .scl 3; .etpuclass CAM; .type 0xe; .endef;
.line 53;
.def _CAM_AW613E_error_; .val 0x0; .scl 3; .etpuclass CAM; .type 0xc; .endef;
.line 54;
.def _CAM_AW613E_log_; .val 0xd; .scl 3; .etpuclass CAM; .tag CAM_LOG; .type 0x18; .const 0x1; .endef;
.line 78;
.defentry; .etpuclass CAM; .ettable CAM; .endentry;
.line 79;
.def _CAM_AW613E___STACKBASE_; .val 0x11; .scl 3; .etpuclass CAM; .type 0x4; .endef;
.file "..\..\src\etpuc_crank.h";
.line -1;
.def _AW_CHAN_ALIAS_0; .val 0x54; .scl 3; .etpuclass CRANK; .type 0xf; .endef;
.line 81;
.def _CRANK_AW613E_blank_time_; .val 0x1; .scl 3; .etpuclass CRANK; .type 0xe; .const 0x1; .endef;
.line 82;
.def _CRANK_AW613E_tcr1_clock_source_div1_; .val 0x0; .scl 3; .etpuclass CRANK; .type 0xc; .const 0x1; .endef;
.line 83;
.def _CRANK_AW613E_tcr2_ticks_per_tooth_; .val 0x5; .scl 3; .etpuclass CRANK; .type 0xe; .const 0x1; .endef;
.line 84;
.def _CRANK_AW613E_tcr2_ticks_per_add_tooth_; .val 0x9; .scl 3; .etpuclass CRANK; .type 0xe; .const 0x1; .endef;
.line 85;
.def _CRANK_AW613E_last_tooth_tcr1_time_; .val 0xd; .scl 3; .etpuclass CRANK; .type 0xe; .endef;
.line 86;
.def _CRANK_AW613E_last_tooth_period_; .val 0x11; .scl 3; .etpuclass CRANK; .type 0xe; .endef;
.line 87;
.def _CRANK_AW613E_last_tooth_period_norm_; .val 0x15; .scl 3; .etpuclass CRANK; .type 0xe; .endef;
.line 88;
.def _CRANK_AW613E_last_last_tooth_period_norm_; .val 0x19; .scl 3; .etpuclass CRANK; .type 0xe; .endef;
.line 89;
.def _CRANK_AW613E_additional_tooth_period_; .val 0x1d; .scl 3; .etpuclass CRANK; .type 0xe; .endef;
.line 90;
.def _CRANK_AW613E_tcr2_adjustment_; .val 0x21; .scl 3; .etpuclass CRANK; .type 0x4; .endef;
.line 91;
.def _CRANK_AW613E_gap_ratio_; .val 0x25; .scl 3; .etpuclass CRANK; .type 0x8000000f; .const 0x1; .endef;
.line 92;
.def _CRANK_AW613E_win_ratio_normal_; .val 0x29; .scl 3; .etpuclass CRANK; .type 0x8000000f; .const 0x1; .endef;
.line 93;
.def _CRANK_AW613E_win_ratio_across_gap_; .val 0x2d; .scl 3; .etpuclass CRANK; .type 0x8000000f; .const 0x1; .endef;
.line 94;
.def _CRANK_AW613E_win_ratio_after_gap_; .val 0x31; .scl 3; .etpuclass CRANK; .type 0x8000000f; .const 0x1; .endef;
.line 95;
.def _CRANK_AW613E_win_ratio_after_timeout_; .val 0x35; .scl 3; .etpuclass CRANK; .type 0x8000000f; .const 0x1; .endef;
.line 96;
.def _CRANK_AW613E_first_tooth_timeout_; .val 0x39; .scl 3; .etpuclass CRANK; .type 0xe; .const 0x1; .endef;
.line 97;
.def _CRANK_AW613E_link_cam_; .val 0x3c; .scl 3; .etpuclass CRANK; .type 0xf; .const 0x1; .endef;
.line 98;
.def _CRANK_AW613E_link_1_; .val 0x40; .scl 3; .etpuclass CRANK; .type 0xf; .const 0x1; .endef;
.line 99;
.def _CRANK_AW613E_link_2_; .val 0x44; .scl 3; .etpuclass CRANK; .type 0xf; .const 0x1; .endef;
.line 100;
.def _CRANK_AW613E_link_3_; .val 0x48; .scl 3; .etpuclass CRANK; .type 0xf; .const 0x1; .endef;
.line 101;
.def _CRANK_AW613E_link_4_; .val 0x4c; .scl 3; .etpuclass CRANK; .type 0xf; .const 0x1; .endef;
.line 102;
.def _CRANK_AW613E_teeth_till_gap_; .val 0x4; .scl 3; .etpuclass CRANK; .type 0xc; .const 0x1; .endef;
.line 103;
.def _CRANK_AW613E_teeth_in_gap_; .val 0x8; .scl 3; .etpuclass CRANK; .type 0x2; .const 0x1; .endef;
.line 104;
.def _CRANK_AW613E_misscnt_mask_; .val 0x0; .scl 3; .etpuclass CRANK; .type 0xd; .const 0x1; .alias _AW_CHAN_ALIAS_0; .endef;
.line 105;
.def _CRANK_AW613E_teeth_per_cycle_; .val 0xc; .scl 3; .etpuclass CRANK; .type 0xc; .const 0x1; .endef;
.line 106;
.def _CRANK_AW613E_teeth_per_sync_; .val 0x10; .scl 3; .etpuclass CRANK; .type 0xc; .const 0x1; .endef;
.line 107;
.def _CRANK_AW613E_tooth_counter_gap_; .val 0x14; .scl 3; .etpuclass CRANK; .type 0xc; .endef;
.line 108;
.def _CRANK_AW613E_tooth_counter_cycle_; .val 0x18; .scl 3; .etpuclass CRANK; .type 0xc; .endef;
.line 109;
.def _CRANK_AW613E_blank_teeth_; .val 0x1c; .scl 3; .etpuclass CRANK; .type 0xc; .endef;
.line 110;
.def _CRANK_AW613E_state_; .val 0x20; .scl 3; .etpuclass CRANK; .type 0xc; .endef;
.line 111;
.def _CRANK_AW613E_error_; .val 0x24; .scl 3; .etpuclass CRANK; .type 0xc; .endef;
.line 112;
.def _CRANK_AW613E_tooth_period_log_; .val 0x51; .scl 3; .etpuclass CRANK; .type 0x1e; .const 0x1; .endef;
.line 161;
.defentry; .etpuclass CRANK; .ettable CRANK; .endentry;
.line 162;
.defentry; .etpuclass CRANK; .ettable CRANK_EMUL; .endentry;
.line 163;
.def _CRANK_AW613E___STACKBASE_; .val 0x59; .scl 3; .etpuclass CRANK; .type 0x4; .endef;
.file "..\..\src\etpuc_cam.c";
.file "C:\\GIT\\ASHWARE\\Builds\\Include\\ETpu_Hw.h";
.line 193;
.def chan; .val 0x28; .scl 4; .tag register_chan; .type 0x0; .endef;
.line 194;
.def ContextReg; .val 0x28; .scl 4; .tag register_chan; .type 0x0; .endef;
.line 195;
.def erta; .val 0x10; .scl 4; .tag register_erta; .type 0x0; .endef;
.line 196;
.def ertA; .val 0x10; .scl 4; .tag register_erta; .type 0x0; .endef;
.line 197;
.def ertb; .val 0x11; .scl 4; .tag register_ertb; .type 0x0; .endef;
.line 198;
.def ertB; .val 0x11; .scl 4; .tag register_ertb; .type 0x0; .endef;
.line 199;
.def tcr1; .val 0x20; .scl 4; .tag register_tcr1; .type 0x0; .endef;
.line 200;
.def tcr2; .val 0x21; .scl 4; .tag register_tcr2; .type 0x0; .endef;
.line 201;
.def tpr; .val 0x23; .scl 4; .tag register_tpr; .type 0x0; .endef;
.line 202;
.def trr; .val 0x22; .scl 4; .tag register_trr; .type 0x0; .endef;
.line 203;
.def link; .val 0x27; .scl 4; .tag register_link; .type 0x0; .endef;
.line 204;
.line 205;
.line 325;
.line 335;
.def tpr_reg; .val 0x23; .scl 4; .tag tpr_struct; .size 2; .type 0x8; .endef;
.line 336;
.def tpr_str; .val 0x23; .scl 4; .tag tpr_struct; .size 2; .type 0x8; .endef;
.file "C:\\GIT\\ASHWARE\\Builds\\Include\\ETpu_Lib.h";
.line 73;
.def _AtomicBegin; .val 0xffffffff; .scl 5; .type 0x21; .endef;
.line 74;
.def _AtomicEnd; .val 0xffffffff; .scl 5; .type 0x21; .endef;
.line 93;
.def _CoherentRead24_24; .val 0xffffffff; .scl 5; .type 0x21; .endef;
.line 94;
.def _CoherentRead24_8; .val 0xffffffff; .scl 5; .type 0x21; .endef;
.line 95;
.def _CoherentRead24_32; .val 0xffffffff; .scl 5; .type 0x21; .endef;
.line 99;
.def _CoherentWrite24_24; .val 0xffffffff; .scl 5; .type 0x21; .endef;
.line 100;
.def _CoherentWrite24_8; .val 0xffffffff; .scl 5; .type 0x21; .endef;
.line 101;
.def _CoherentWrite24_32; .val 0xffffffff; .scl 5; .type 0x21; .endef;
.line 120;
.def _OptimizationBoundaryAll; .val 0xffffffff; .scl 5; .type 0x21; .endef;
.line 126;
.def _OptimizationDisableStart; .val 0xffffffff; .scl 5; .type 0x21; .endef;
.line 127;
.def _OptimizationDisableEnd; .val 0xffffffff; .scl 5; .type 0x21; .endef;
.line 141;
.def _ExitThread; .val 0xffffffff; .scl 5; .type 0x21; .endef;
.line 157;
.def __rotate_right_1_b7_0; .val 0xffffffff; .scl 5; .type 0x24; .endef;
.line 161;
.def __rotate_right_1_b15_0; .val 0xffffffff; .scl 5; .type 0x24; .endef;
.line 165;
.def __rotate_right_1; .val 0xffffffff; .scl 5; .type 0x24; .endef;
.line 169;
.def __rotate_right_2n; .val 0xffffffff; .scl 5; .type 0x24; .endef;
.line 170;
.def __rotate_right_2n_sf8; .val 0xffffffff; .scl 5; .type 0x24; .endef;
.line 171;
.def __rotate_right_2n_sf16; .val 0xffffffff; .scl 5; .type 0x24; .endef;
.line 172;
.def __rotate_right_2n_sf24; .val 0xffffffff; .scl 5; .type 0x24; .endef;
.line 189;
.def __abs; .val 0xffffffff; .scl 5; .type 0x2e; .endef;
.line 190;
.def __abs_sf8; .val 0xffffffff; .scl 5; .type 0x2e; .endef;
.line 191;
.def __abs_sf16; .val 0xffffffff; .scl 5; .type 0x2e; .endef;
.line 192;
.def __abs_sf24; .val 0xffffffff; .scl 5; .type 0x2e; .endef;
.line 198;
.def __shift_right_SR; .val 0xffffffff; .scl 5; .type 0x21; .endef;
.line 203;
.def __shift_right_SR48; .val 0xffffffff; .scl 5; .type 0x24; .endef;
.line 204;
.def __shift_right_SR48_sf8; .val 0xffffffff; .scl 5; .type 0x24; .endef;
.line 205;
.def __shift_right_SR48_sf16; .val 0xffffffff; .scl 5; .type 0x24; .endef;
.line 206;
.def __shift_right_SR48_sf24; .val 0xffffffff; .scl 5; .type 0x24; .endef;
.line 214;
.def __shift_left_2n; .val 0xffffffff; .scl 5; .type 0x24; .endef;
.line 215;
.def __shift_left_2n_sf8; .val 0xffffffff; .scl 5; .type 0x24; .endef;
.line 216;
.def __shift_left_2n_sf16; .val 0xffffffff; .scl 5; .type 0x24; .endef;
.line 217;
.def __shift_left_2n_sf24; .val 0xffffffff; .scl 5; .type 0x24; .endef;
.line 218;
.def __shift_right_2n; .val 0xffffffff; .scl 5; .type 0x24; .endef;
.line 219;
.def __shift_right_2n_sf8; .val 0xffffffff; .scl 5; .type 0x24; .endef;
.line 220;
.def __shift_right_2n_sf16; .val 0xffffffff; .scl 5; .type 0x24; .endef;
.line 221;
.def __shift_right_2n_sf24; .val 0xffffffff; .scl 5; .type 0x24; .endef;
.line 230;
.def __bit_n_update; .val 0xffffffff; .scl 5; .type 0x24; .endef;
.line 231;
.def __bit_n_update_sf8; .val 0xffffffff; .scl 5; .type 0x24; .endef;
.line 232;
.def __bit_n_update_sf16; .val 0xffffffff; .scl 5; .type 0x24; .endef;
.line 233;
.def __bit_n_update_sf24; .val 0xffffffff; .scl 5; .type 0x24; .endef;
.line 242;
.def __bit_n_exchange_C; .val 0xffffffff; .scl 5; .type 0x24; .endef;
.line 243;
.def __bit_n_exchange_C_sf8; .val 0xffffffff; .scl 5; .type 0x24; .endef;
.line 244;
.def __bit_n_exchange_C_sf16; .val 0xffffffff; .scl 5; .type 0x24; .endef;
.line 245;
.def __bit_n_exchange_C_sf24; .val 0xffffffff; .scl 5; .type 0x24; .endef;
.line 256;
.def __mults8; .val 0xffffffff; .scl 5; .type 0x21; .endef;
.line 257;
.def __mults16; .val 0xffffffff; .scl 5; .type 0x21; .endef;
.line 258;
.def __mults24; .val 0xffffffff; .scl 5; .type 0x21; .endef;
.line 260;
.def __multu8; .val 0xffffffff; .scl 5; .type 0x21; .endef;
.line 261;
.def __multu16; .val 0xffffffff; .scl 5; .type 0x21; .endef;
.line 262;
.def __multu24; .val 0xffffffff; .scl 5; .type 0x21; .endef;
.line 265;
.def __macs; .val 0xffffffff; .scl 5; .type 0x21; .endef;
.line 268;
.def __macu; .val 0xffffffff; .scl 5; .type 0x21; .endef;
.line 271;
.def __fmults8; .val 0xffffffff; .scl 5; .type 0x21; .endef;
.line 274;
.def __fmults16; .val 0xffffffff; .scl 5; .type 0x21; .endef;
.line 277;
.def __fmultu8; .val 0xffffffff; .scl 5; .type 0x21; .endef;
.line 280;
.def __fmultu16; .val 0xffffffff; .scl 5; .type 0x21; .endef;
.line 283;
.def __divu8; .val 0xffffffff; .scl 5; .type 0x21; .endef;
.line 284;
.def __divu16; .val 0xffffffff; .scl 5; .type 0x21; .endef;
.line 285;
.def __divu24; .val 0xffffffff; .scl 5; .type 0x21; .endef;
.line 347;
.def mulir; .val 0xffffffff; .scl 5; .type 0x24; .endef;
.line 348;
.def muliur; .val 0xffffffff; .scl 5; .type 0x2e; .endef;
.line 352;
.def muli8r8; .val 0xffffffff; .scl 5; .type 0x22; .endef;
.line 353;
.def muli8ur8; .val 0xffffffff; .scl 5; .type 0x2c; .endef;
.line 354;
.def muli16r16; .val 0xffffffff; .scl 5; .type 0x23; .endef;
.line 355;
.def muli16ur16; .val 0xffffffff; .scl 5; .type 0x2d; .endef;
.line 356;
.def muli24r8; .val 0xffffffff; .scl 5; .type 0x24; .endef;
.line 357;
.def muli24ur8; .val 0xffffffff; .scl 5; .type 0x2e; .endef;
.line 358;
.def muli24r16; .val 0xffffffff; .scl 5; .type 0x24; .endef;
.line 359;
.def muli24ur16; .val 0xffffffff; .scl 5; .type 0x2e; .endef;
.line 361;
.def muli8r8u; .val 0xffffffff; .scl 5; .type 0x22; .endef;
.line 362;
.def muli16r16u; .val 0xffffffff; .scl 5; .type 0x23; .endef;
.line 381;
.def _Error_handler_entry; .val 0xffffffff; .scl 5; .type 0x80000022; .endef;
.line 382;
.def _Error_handler_unexpected_thread; .val 0xffffffff; .scl 5; .type 0x80000022; .endef;
.line 383;
.def _Error_handler_scm_off_weeds; .val 0xffffffff; .scl 5; .type 0x80000029; .endef;
.line 384;
.def _Error_handler_fill_weeds; .val 0xffffffff; .scl 5; .type 0x80000029; .endef;
.file "..\..\src\etpuc_crank.h";
.line 123;
.def _CRANK_AW613E_INIT_; .val 0xffffffff; .scl 5; .type 0x80000022; .endef;
.line 124;
.def _CRANK_AW613E_ANGLE_ADJUST_; .val 0xffffffff; .scl 5; .type 0x80000022; .endef;
.line 125;
.def _CRANK_AW613E_CRANK_WITH_GAP_; .val 0xffffffff; .scl 5; .type 0x80000022; .endef;
.line 126;
.def _CRANK_AW613E_CRANK_WITH_ADDITIONAL_TOOTH_; .val 0xffffffff; .scl 5; .type 0x80000022; .endef;
.line 129;
.def _CRANK_AW613E_INIT_EMUL_; .val 0xffffffff; .scl 5; .type 0x80000022; .endef;
.line 130;
.def _CRANK_AW613E_ANGLE_ADJUST_EMUL_; .val 0xffffffff; .scl 5; .type 0x80000022; .endef;
.line 131;
.def _CRANK_AW613E_SET_SPEED_EMUL_; .val 0xffffffff; .scl 5; .type 0x80000022; .endef;
.line 132;
.def _CRANK_AW613E_CRANK_WITH_GAP_EMUL_; .val 0xffffffff; .scl 5; .type 0x80000022; .endef;
.line 140;
.def _CRANK_AW613E_ToothArray_Log_; .val 0xffffffff; .scl 5; .type 0x21; .endef;
.line 141;
.def _CRANK_AW613E_Set_TRR_; .val 0xffffffff; .scl 5; .type 0x21; .endef;
.line 146;
.def _CRANK_AW613E_Window_NoReturn_; .val 0xffffffff; .scl 5; .type 0x80000029; .endef;
.line 148;
.def _CRANK_AW613E_WindowAcrossGap_NoReturn_; .val 0xffffffff; .scl 5; .type 0x80000029; .endef;
.line 150;
.def _CRANK_AW613E_WindowCloseAt_NoReturn_; .val 0xffffffff; .scl 5; .type 0x80000029; .endef;
.line 153;
.def _CRANK_AW613E_WindowClose_NoReturn_; .val 0xffffffff; .scl 5; .type 0x80000029; .endef;
.line 154;
.def _CRANK_AW613E_Stall_NoReturn_; .val 0xffffffff; .scl 5; .type 0x80000029; .endef;
.line 170;
.def CRANK_Time_to_Angle_HighRes; .val 0xffffffff; .scl 5; .type 0x24; .endef;
.line 172;
.def CRANK_Time_to_Angle_LowRes; .val 0xffffffff; .scl 5; .type 0x24; .endef;
.line 180;
.line 180;
.def eng_pos_state; .scl 5; .type 0xc; .endef;
.line 181;
.line 181;
.def eng_cycle_tcr2_ticks; .scl 5; .type 0xe; .const 0x1; .endef;
.line 182;
.line 182;
.def eng_cycle_tcr2_start; .scl 5; .type 0xe; .endef;
.line 183;
.line 183;
.def eng_trr_norm; .scl 5; .type 0xe; .endef;
.file "..\..\src\etpuc_set.h";
.line 31;
.def Link4; .val 0xffffffff; .scl 5; .type 0x21; .endef;
.file "..\..\src\etpuc_cam.c";

.line 63;
.def _CAM_AW613E_INIT_; .val 0x0; .scl 2; .etpuclass CAM; .type 0x80000022; .endef;
.def; .bf; .scl 101; .tag _CAM_AW613E_INIT_; .endef;
.def _CAM_AW613E_INIT_; .val 0xffffffff; .scl 200; .type 0xe; .endef;
.def; .bb; .scl 100; .tag __CAM_AW613E_INIT__AW613E_SCOPEBLOCK_0_; .endef;

.line 67;
	// chan  DisableMatchTransitionServicing;;
.opstart 0xff7ffefb; .opend;

.line 69;
	// chan  clear MatchEnableLatches;;
.opstart 0x7ffffffd; .opend;

.line 71;
	// chan  clear TransitionDetectionLatches;;
.opstart 0x7fefffff; .opend;

.line 72;
	// chan  clear LinkServiceRequest;;
.opstart 0x4ffff7ff; .opend;

.line 73;
	// chan  clear MatchRecognitionLatchA;;
.opstart 0x7ffffeff; .opend;

.line 74;
	// chan  clear MatchRecognitionLatchB;;
.opstart 0x7fffffbf; .opend;

.line 78;
	// chan  mode = single match single transition;;
.opstart 0x4ffffff9; .opend;

.line 80;
	// chan  ActionUnitA: tcr1 >= match, capture tcr2;;
.opstart 0x4ff2ffff; .opend;

.line 81;
	// chan  ActionUnitB: tcr1 >= match, capture tcr2;;
.opstart 0x4fff2fff; .opend;

.line 83;
	// seq  if FunctionMode1==false then goto INIT__AW613E_ELSE_IFELSE_0, flush;;
.opstart 0xf3900007; .oplabel BAF_13_0_,StandardTest,__CAM_AW613E_INIT__AW613E_ELSE_IFELSE_0_,0;  .opend;
.def __CAM_AW613E_INIT__AW613E_THEN_IF_ELSE_0_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 84;
.def; .bb; .scl 100; .tag __CAM_AW613E_INIT__AW613E_SCOPEBLOCK_1_; .endef;

.line 85;
	// seq  if FunctionMode0==false then goto INIT__AW613E_ELSE_IFELSE_1, flush;;
.opstart 0xf3d00007; .oplabel BAF_13_0_,StandardTest,__CAM_AW613E_INIT__AW613E_ELSE_IFELSE_1_,0;  .opend;
.def __CAM_AW613E_INIT__AW613E_THEN_IF_ELSE_1_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 86;
.def; .bb; .scl 100; .tag __CAM_AW613E_INIT__AW613E_SCOPEBLOCK_2_; .endef;

.line 87;
	// chan  detectA = any input pin edge;;
.opstart 0x5bffffff; .opend;

.line 88;
	// chan  detectB = any input pin edge;;
.opstart 0x5f7fffff; .opend;

.line 89;
.def; .eb; .scl 100; .tag __CAM_AW613E_INIT__AW613E_SCOPEBLOCK_2_; .stackUsage 0; .scratchpadUsage 0; .endef;
	// seq  goto INIT__AW613E_END_IFELSE_1, flush;;
.opstart 0xf7d00007; .oplabel BAF_13_0_,StandardTest,__CAM_AW613E_INIT__AW613E_END_IFELSE_1_,0;  .opend;
.def __CAM_AW613E_INIT__AW613E_ELSE_IFELSE_1_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 91;
.def; .bb; .scl 100; .tag __CAM_AW613E_INIT__AW613E_SCOPEBLOCK_3_; .endef;

.line 92;
	// chan  detectA = rising input pin edge;;
.opstart 0x59ffffff; .opend;

.line 93;
	// chan  detectB = rising input pin edge;;
.opstart 0x5f3fffff; .opend;

.line 94;
.def; .eb; .scl 100; .tag __CAM_AW613E_INIT__AW613E_SCOPEBLOCK_3_; .stackUsage 0; .scratchpadUsage 0; .endef;
.def __CAM_AW613E_INIT__AW613E_END_IFELSE_1_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 95;
.def; .eb; .scl 100; .tag __CAM_AW613E_INIT__AW613E_SCOPEBLOCK_1_; .stackUsage 0; .scratchpadUsage 0; .endef;
	// seq  goto INIT__AW613E_END_IFELSE_0, flush;;
.opstart 0xf7d00007; .oplabel BAF_13_0_,StandardTest,__CAM_AW613E_INIT__AW613E_END_IFELSE_0_,0;  .opend;
.def __CAM_AW613E_INIT__AW613E_ELSE_IFELSE_0_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 97;
.def; .bb; .scl 100; .tag __CAM_AW613E_INIT__AW613E_SCOPEBLOCK_4_; .endef;

.line 98;
	// seq  if FunctionMode0==false then goto INIT__AW613E_ELSE_IFELSE_2, flush;;
.opstart 0xf3d00007; .oplabel BAF_13_0_,StandardTest,__CAM_AW613E_INIT__AW613E_ELSE_IFELSE_2_,0;  .opend;
.def __CAM_AW613E_INIT__AW613E_THEN_IF_ELSE_2_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 99;
.def; .bb; .scl 100; .tag __CAM_AW613E_INIT__AW613E_SCOPEBLOCK_5_; .endef;

.line 100;
	// chan  detectA = falling input pin edge;;
.opstart 0x5affffff; .opend;

.line 101;
	// chan  detectB = falling input pin edge;;
.opstart 0x5f5fffff; .opend;

.line 102;
.def; .eb; .scl 100; .tag __CAM_AW613E_INIT__AW613E_SCOPEBLOCK_5_; .stackUsage 0; .scratchpadUsage 0; .endef;
	// seq  goto INIT__AW613E_END_IFELSE_2, flush;;
.opstart 0xf7d00007; .oplabel BAF_13_0_,StandardTest,__CAM_AW613E_INIT__AW613E_END_IFELSE_2_,0;  .opend;
.def __CAM_AW613E_INIT__AW613E_ELSE_IFELSE_2_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 104;
.def; .bb; .scl 100; .tag __CAM_AW613E_INIT__AW613E_SCOPEBLOCK_6_; .endef;

.line 105;
	// chan  detectA = off;;
.opstart 0x58ffffff; .opend;

.line 106;
	// chan  detectB = off;;
.opstart 0x5f1fffff; .opend;

.line 107;
.def; .eb; .scl 100; .tag __CAM_AW613E_INIT__AW613E_SCOPEBLOCK_6_; .stackUsage 0; .scratchpadUsage 0; .endef;
.def __CAM_AW613E_INIT__AW613E_END_IFELSE_2_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 108;
.def; .eb; .scl 100; .tag __CAM_AW613E_INIT__AW613E_SCOPEBLOCK_4_; .stackUsage 0; .scratchpadUsage 0; .endef;
.def __CAM_AW613E_INIT__AW613E_END_IFELSE_0_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 110;
	// chan  FutureOutputPin no change on matchA;;
.opstart 0x48ffffff; .opend;

.line 111;
	// chan  FutureOutputPin no change on matchB;;
.opstart 0x4f1fffff; .opend;

.line 114;
	// chan  EnableMatchTransitionServicing;;
.opstart 0xff3ffefb; .opend;

.line 115;
.def; .eb; .scl 100; .tag __CAM_AW613E_INIT__AW613E_SCOPEBLOCK_0_; .stackUsage 0; .scratchpadUsage 0; .endef;
.def __CAM_AW613E_INIT__AW613E_FUNC_END_; .val 0xffffffff; .scl 200; .type 0xe; .endef;
	// seq   end;;
.opstart 0x0fffffff; .opend;
.def; .ef; .scl 101; .tag _CAM_AW613E_INIT_; .endef;
.breakable;

.file "..\..\src\etpuc_cam.c";

.line 122;
.def _CAM_AW613E_RESET_; .val 0x0; .scl 2; .etpuclass CAM; .type 0x80000022; .endef;
.def; .bf; .scl 101; .tag _CAM_AW613E_RESET_; .endef;
.def _CAM_AW613E_RESET_; .val 0xffffffff; .scl 200; .type 0xe; .endef;
.def; .bb; .scl 100; .tag __CAM_AW613E_RESET__AW613E_SCOPEBLOCK_7_; .endef;

.line 124;
	// ram   diob = log_idx;; // *((channel int24 *) 0x5;
.opstart 0xbfefff81; .oplabel AID_6_0_,CAM,_CAM_AW613E_log_idx_,0;  .opend;
	// alu    p = diob+0x0;;
.opstart 0x000b7419; .opend;
	// ram   log_count = p_23_0;; // *((channel int24 *) 0x9;
.opstart 0xbffffb82; .oplabel AID_6_0_,CAM,_CAM_AW613E_log_count_,0;  .opend;

.line 125;
	// ram   log_idx =  0;; // *((channel int24 *) 0x5;
.opstart 0xbffffb01; .oplabel AID_6_0_,CAM,_CAM_AW613E_log_idx_,0;  .opend;

.line 126;
	// chan  clear LinkServiceRequest;;
.opstart 0x4ffff7ff; .opend;

.line 128;
	// ram   p_23_0 = log_count;; // *((channel int24 *) 0x9;
.opstart 0xbfeffb82; .oplabel AID_6_0_,CAM,_CAM_AW613E_log_count_,0;  .opend;
	// alu    nil = p+0x0, SampleFlags;;
.opstart 0x0008f019; .opend;
	// seq  if z==false then goto RESET__AW613E_END_IFELSE_3, flush;;
.opstart 0xf0d00007; .oplabel BAF_13_0_,StandardTest,__CAM_AW613E_RESET__AW613E_END_IFELSE_3_,0;  .opend;
.def __CAM_AW613E_RESET__AW613E_THEN_IF_ELSE_3_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 129;
.def; .bb; .scl 100; .tag __CAM_AW613E_RESET__AW613E_SCOPEBLOCK_8_; .endef;

.line 131;
	// ram   p_31_24 = error;; // *((channel int8 *) 0x0;
.opstart 0xcfeff980; .oplabel AID_6_0_,CAM,_CAM_AW613E_error_,0;  .opend;
	// alu    a = p_31_24+0x0;;
.opstart 0x00020419; .opend;
	// alu    a = a | 0x1, SampleFlags;;
.opstart 0x08090ba2; .opend;
	// alu    p_31_24 = a+0x0;;
.opstart 0x0009a419; .opend;
	// ram   error = p_31_24;; // *((channel int8 *) 0x0;
.opstart 0xcffff980; .oplabel AID_6_0_,CAM,_CAM_AW613E_error_,0;  .opend;

.line 132;
	// chan  set SvcdChan ChannelIntr;;
.opstart 0xffff3ef9; .opend;

.line 133;
.def; .eb; .scl 100; .tag __CAM_AW613E_RESET__AW613E_SCOPEBLOCK_8_; .stackUsage 0; .scratchpadUsage 0; .endef;
.def __CAM_AW613E_RESET__AW613E_END_IFELSE_3_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 134;
.def; .eb; .scl 100; .tag __CAM_AW613E_RESET__AW613E_SCOPEBLOCK_7_; .stackUsage 0; .scratchpadUsage 0; .endef;
.def __CAM_AW613E_RESET__AW613E_FUNC_END_; .val 0xffffffff; .scl 200; .type 0xe; .endef;
	// seq   end;;
.opstart 0x0fffffff; .opend;
.def; .ef; .scl 101; .tag _CAM_AW613E_RESET_; .endef;
.breakable;

.file "..\..\src\etpuc_cam.c";

.line 140;
.def _CAM_AW613E_LOG_1_TRANS_; .val 0x0; .scl 2; .etpuclass CAM; .type 0x80000022; .endef;
.def; .bf; .scl 101; .tag _CAM_AW613E_LOG_1_TRANS_; .endef;
.def _CAM_AW613E_LOG_1_TRANS_; .val 0xffffffff; .scl 200; .type 0xe; .endef;
.def; .bb; .scl 100; .tag __CAM_AW613E_LOG_1_TRANS__AW613E_SCOPEBLOCK_9_; .endef;
.def ptr; .val 0x1e; .scl 4; .tag CAM_LOG; .type 0x18; .endef;

.line 144;
	// chan  clear TransitionDetectionLatches;;
.opstart 0x7fefffff; .opend;

.line 145;
	// ram   diob = log_idx;; // *((channel int24 *) 0x5;
.opstart 0xbfefff81; .oplabel AID_6_0_,CAM,_CAM_AW613E_log_idx_,0;  .opend;
	// ram   p_23_0 = log_size;; // *((channel int24 *) 0x1;
.opstart 0xbfeffb80; .oplabel AID_6_0_,CAM,_CAM_AW613E_log_size_,0;  .opend;
	// alu    nil = diob-p, SampleFlags;;
.opstart 0x1c1bfeff; .opend;
	// seq  if cFlag==false then goto LOG_1_TRANS__AW613E_ELSE_IFELSE_4, flush;;
.opstart 0xf0900007; .oplabel BAF_13_0_,StandardTest,__CAM_AW613E_LOG_1_TRANS__AW613E_ELSE_IFELSE_4_,0;  .opend;
.def __CAM_AW613E_LOG_1_TRANS__AW613E_THEN_IF_ELSE_4_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 146;
.def; .bb; .scl 100; .tag __CAM_AW613E_LOG_1_TRANS__AW613E_SCOPEBLOCK_10_; .endef;

.line 147;
	// ram   diob = log_idx;; // *((channel int24 *) 0x5;
.opstart 0xbfefff81; .oplabel AID_6_0_,CAM,_CAM_AW613E_log_idx_,0;  .opend;
	// alu    a = diob+0x0;;
.opstart 0x000b0419; .opend;
	// alu    ertB = diob+0x1, SampleFlags;;
.opstart 0x000b3039; .opend;
	// alu    diob = ertB+0x0;;
.opstart 0x00034419; .opend;
	// ram   log_idx = diob;; // *((channel int24 *) 0x5;
.opstart 0xbfffff81; .oplabel AID_6_0_,CAM,_CAM_AW613E_log_idx_,0;  .opend;
	// alu    a = a << 2, SampleFlags;;
.opstart 0x18090b8a; .opend;
	// ram   diob = log;; // *((channel int24 *) 0xD;
.opstart 0xbfefff83; .oplabel AID_6_0_,CAM,_CAM_AW613E_log_,0;  .opend;
	// alu    a = diob+a, SampleFlags;;
.opstart 0x1f3b0eff; .opend;
	// alu    sr = a+0x0;;
.opstart 0x00091419; .opend;

.line 148;
	// alu    a = ((u24) 0)+0x0;;
.opstart 0x00000408; .opend;
	// alu    p_31_24 = a+0x0;;
.opstart 0x0009a419; .opend;
	// alu    diob = sr+0x0;;
.opstart 0x000a4419; .opend;
	// ram   *((int8 *) diob) = p_31_24;;
.opstart 0xfffff9d9; .opend;

.line 149;
	// seq  if SampledInputPin==false then goto LOG_1_TRANS__AW613E_END_IFELSE_5, flush;;
.opstart 0xf4100007; .oplabel BAF_13_0_,StandardTest,__CAM_AW613E_LOG_1_TRANS__AW613E_END_IFELSE_5_,0;  .opend;
.def __CAM_AW613E_LOG_1_TRANS__AW613E_THEN_IF_ELSE_5_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 150;
.def; .bb; .scl 100; .tag __CAM_AW613E_LOG_1_TRANS__AW613E_SCOPEBLOCK_11_; .endef;

.line 151;
	// alu    a = ((u24) 0)+0x1;;
.opstart 0x00000428; .opend;
	// alu    p_31_24 = a+0x0;;
.opstart 0x0009a419; .opend;
	// alu    diob = sr+0x0;;
.opstart 0x000a4419; .opend;
	// ram   *((int8 *) diob) = p_31_24;;
.opstart 0xfffff9d9; .opend;

.line 152;
.def; .eb; .scl 100; .tag __CAM_AW613E_LOG_1_TRANS__AW613E_SCOPEBLOCK_11_; .stackUsage 0; .scratchpadUsage 0; .endef;
.def __CAM_AW613E_LOG_1_TRANS__AW613E_END_IFELSE_5_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 153;
	// alu    a = sr+0x0;;
.opstart 0x000a0419; .opend;
	// alu    diob = a+0x0;;
.opstart 0x00094419; .opend;
	// alu    p = ertA+0x0;;
.opstart 0x000e7419; .opend;
	// ram   *((int24 *) diob) = p_23_0;;
.opstart 0x1ffffbdf; .opend;

.line 154;
.def; .eb; .scl 100; .tag __CAM_AW613E_LOG_1_TRANS__AW613E_SCOPEBLOCK_10_; .stackUsage 0; .scratchpadUsage 0; .endef;
	// seq  goto LOG_1_TRANS__AW613E_END_IFELSE_4, flush;;
.opstart 0xf7d00007; .oplabel BAF_13_0_,StandardTest,__CAM_AW613E_LOG_1_TRANS__AW613E_END_IFELSE_4_,0;  .opend;
.def __CAM_AW613E_LOG_1_TRANS__AW613E_ELSE_IFELSE_4_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 156;
.def; .bb; .scl 100; .tag __CAM_AW613E_LOG_1_TRANS__AW613E_SCOPEBLOCK_12_; .endef;

.line 158;
	// ram   p_31_24 = error;; // *((channel int8 *) 0x0;
.opstart 0xcfeff980; .oplabel AID_6_0_,CAM,_CAM_AW613E_error_,0;  .opend;
	// alu    a = p_31_24+0x0;;
.opstart 0x00020419; .opend;
	// alu    a = a | 0x2, SampleFlags;;
.opstart 0x08090bc2; .opend;
	// alu    p_31_24 = a+0x0;;
.opstart 0x0009a419; .opend;
	// ram   error = p_31_24;; // *((channel int8 *) 0x0;
.opstart 0xcffff980; .oplabel AID_6_0_,CAM,_CAM_AW613E_error_,0;  .opend;

.line 159;
	// chan  set SvcdChan ChannelIntr;;
.opstart 0xffff3ef9; .opend;

.line 160;
.def; .eb; .scl 100; .tag __CAM_AW613E_LOG_1_TRANS__AW613E_SCOPEBLOCK_12_; .stackUsage 0; .scratchpadUsage 0; .endef;
.def __CAM_AW613E_LOG_1_TRANS__AW613E_END_IFELSE_4_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 161;
.def; .eb; .scl 100; .tag __CAM_AW613E_LOG_1_TRANS__AW613E_SCOPEBLOCK_9_; .stackUsage 0; .scratchpadUsage 0; .endef;
.def __CAM_AW613E_LOG_1_TRANS__AW613E_FUNC_END_; .val 0xffffffff; .scl 200; .type 0xe; .endef;
	// seq   end;;
.opstart 0x0fffffff; .opend;
.def; .ef; .scl 101; .tag _CAM_AW613E_LOG_1_TRANS_; .endef;
.breakable;

.file "..\..\src\etpuc_cam.c";

.line 169;
.def _CAM_AW613E_LOG_2_TRANS_; .val 0x0; .scl 2; .etpuclass CAM; .type 0x80000022; .endef;
.def; .bf; .scl 101; .tag _CAM_AW613E_LOG_2_TRANS_; .endef;
.def _CAM_AW613E_LOG_2_TRANS_; .val 0xffffffff; .scl 200; .type 0xe; .endef;
.def; .bb; .scl 100; .tag __CAM_AW613E_LOG_2_TRANS__AW613E_SCOPEBLOCK_13_; .endef;
.def ptr; .val 0x1e; .scl 4; .tag CAM_LOG; .type 0x18; .endef;

.line 173;
	// chan  clear TransitionDetectionLatches;;
.opstart 0x7fefffff; .opend;

.line 174;
	// ram   diob = log_idx;; // *((channel int24 *) 0x5;
.opstart 0xbfefff81; .oplabel AID_6_0_,CAM,_CAM_AW613E_log_idx_,0;  .opend;
	// ram   p_23_0 = log_size;; // *((channel int24 *) 0x1;
.opstart 0xbfeffb80; .oplabel AID_6_0_,CAM,_CAM_AW613E_log_size_,0;  .opend;
	// alu    nil = diob-p, SampleFlags;;
.opstart 0x1c1bfeff; .opend;
	// seq  if cFlag==false then goto LOG_2_TRANS__AW613E_ELSE_IFELSE_6, flush;;
.opstart 0xf0900007; .oplabel BAF_13_0_,StandardTest,__CAM_AW613E_LOG_2_TRANS__AW613E_ELSE_IFELSE_6_,0;  .opend;
.def __CAM_AW613E_LOG_2_TRANS__AW613E_THEN_IF_ELSE_6_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 175;
.def; .bb; .scl 100; .tag __CAM_AW613E_LOG_2_TRANS__AW613E_SCOPEBLOCK_14_; .endef;

.line 176;
	// ram   diob = log_idx;; // *((channel int24 *) 0x5;
.opstart 0xbfefff81; .oplabel AID_6_0_,CAM,_CAM_AW613E_log_idx_,0;  .opend;
	// alu    a = diob+0x0;;
.opstart 0x000b0419; .opend;
	// alu    p = diob+0x1, SampleFlags;;
.opstart 0x000b7039; .opend;
	// alu    diob = p+0x0;;
.opstart 0x00084419; .opend;
	// ram   log_idx = diob;; // *((channel int24 *) 0x5;
.opstart 0xbfffff81; .oplabel AID_6_0_,CAM,_CAM_AW613E_log_idx_,0;  .opend;
	// alu    a = a << 2, SampleFlags;;
.opstart 0x18090b8a; .opend;
	// ram   diob = log;; // *((channel int24 *) 0xD;
.opstart 0xbfefff83; .oplabel AID_6_0_,CAM,_CAM_AW613E_log_,0;  .opend;
	// alu    a = diob+a, SampleFlags;;
.opstart 0x1f3b0eff; .opend;
	// alu    sr = a+0x0;;
.opstart 0x00091419; .opend;

.line 177;
	// alu    a = ((u24) 0)+0x0;;
.opstart 0x00000408; .opend;
	// alu    p_31_24 = a+0x0;;
.opstart 0x0009a419; .opend;
	// alu    diob = sr+0x0;;
.opstart 0x000a4419; .opend;
	// ram   *((int8 *) diob) = p_31_24;;
.opstart 0xfffff9d9; .opend;

.line 181;
	// seq  if EventInputPin==false then goto LOG_2_TRANS__AW613E_END_IFELSE_7, flush;;
.opstart 0xf4500007; .oplabel BAF_13_0_,StandardTest,__CAM_AW613E_LOG_2_TRANS__AW613E_END_IFELSE_7_,0;  .opend;
.def __CAM_AW613E_LOG_2_TRANS__AW613E_THEN_IF_ELSE_7_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 183;
.def; .bb; .scl 100; .tag __CAM_AW613E_LOG_2_TRANS__AW613E_SCOPEBLOCK_15_; .endef;

.line 184;
	// alu    a = ((u24) 0)+0x1;;
.opstart 0x00000428; .opend;
	// alu    p_31_24 = a+0x0;;
.opstart 0x0009a419; .opend;
	// alu    diob = sr+0x0;;
.opstart 0x000a4419; .opend;
	// ram   *((int8 *) diob) = p_31_24;;
.opstart 0xfffff9d9; .opend;

.line 185;
.def; .eb; .scl 100; .tag __CAM_AW613E_LOG_2_TRANS__AW613E_SCOPEBLOCK_15_; .stackUsage 0; .scratchpadUsage 0; .endef;
.def __CAM_AW613E_LOG_2_TRANS__AW613E_END_IFELSE_7_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 186;
	// alu    a = sr+0x0;;
.opstart 0x000a0419; .opend;
	// alu    diob = a+0x0;;
.opstart 0x00094419; .opend;
	// alu    p = ertA+0x0;;
.opstart 0x000e7419; .opend;
	// ram   *((int24 *) diob) = p_23_0;;
.opstart 0x1ffffbdf; .opend;

.line 188;
	// ram   diob = log_idx;; // *((channel int24 *) 0x5;
.opstart 0xbfefff81; .oplabel AID_6_0_,CAM,_CAM_AW613E_log_idx_,0;  .opend;
	// ram   p_23_0 = log_size;; // *((channel int24 *) 0x1;
.opstart 0xbfeffb80; .oplabel AID_6_0_,CAM,_CAM_AW613E_log_size_,0;  .opend;
	// alu    nil = diob-p, SampleFlags;;
.opstart 0x1c1bfeff; .opend;
	// seq  if cFlag==false then goto LOG_2_TRANS__AW613E_ELSE_IFELSE_8, flush;;
.opstart 0xf0900007; .oplabel BAF_13_0_,StandardTest,__CAM_AW613E_LOG_2_TRANS__AW613E_ELSE_IFELSE_8_,0;  .opend;
.def __CAM_AW613E_LOG_2_TRANS__AW613E_THEN_IF_ELSE_8_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 189;
.def; .bb; .scl 100; .tag __CAM_AW613E_LOG_2_TRANS__AW613E_SCOPEBLOCK_16_; .endef;

.line 190;
	// ram   diob = log_idx;; // *((channel int24 *) 0x5;
.opstart 0xbfefff81; .oplabel AID_6_0_,CAM,_CAM_AW613E_log_idx_,0;  .opend;
	// alu    a = diob+0x1, SampleFlags;;
.opstart 0x000b0039; .opend;
	// alu    diob = a+0x0;;
.opstart 0x00094419; .opend;
	// ram   log_idx = diob;; // *((channel int24 *) 0x5;
.opstart 0xbfffff81; .oplabel AID_6_0_,CAM,_CAM_AW613E_log_idx_,0;  .opend;

.line 191;
	// alu    a = sr+0x4, SampleFlags;;
.opstart 0x001a0019; .opend;
	// alu    sr = a+0x0;;
.opstart 0x00091419; .opend;

.line 192;
	// alu    a = ((u24) 0)+0x0;;
.opstart 0x00000408; .opend;
	// alu    p_31_24 = a+0x0;;
.opstart 0x0009a419; .opend;
	// alu    diob = sr+0x0;;
.opstart 0x000a4419; .opend;
	// ram   *((int8 *) diob) = p_31_24;;
.opstart 0xfffff9d9; .opend;

.line 193;
	// seq  if SampledInputPin==false then goto LOG_2_TRANS__AW613E_END_IFELSE_9, flush;;
.opstart 0xf4100007; .oplabel BAF_13_0_,StandardTest,__CAM_AW613E_LOG_2_TRANS__AW613E_END_IFELSE_9_,0;  .opend;
.def __CAM_AW613E_LOG_2_TRANS__AW613E_THEN_IF_ELSE_9_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 194;
.def; .bb; .scl 100; .tag __CAM_AW613E_LOG_2_TRANS__AW613E_SCOPEBLOCK_17_; .endef;

.line 195;
	// alu    a = ((u24) 0)+0x1;;
.opstart 0x00000428; .opend;
	// alu    p_31_24 = a+0x0;;
.opstart 0x0009a419; .opend;
	// alu    diob = sr+0x0;;
.opstart 0x000a4419; .opend;
	// ram   *((int8 *) diob) = p_31_24;;
.opstart 0xfffff9d9; .opend;

.line 196;
.def; .eb; .scl 100; .tag __CAM_AW613E_LOG_2_TRANS__AW613E_SCOPEBLOCK_17_; .stackUsage 0; .scratchpadUsage 0; .endef;
.def __CAM_AW613E_LOG_2_TRANS__AW613E_END_IFELSE_9_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 197;
	// alu    a = sr+0x0;;
.opstart 0x000a0419; .opend;
	// alu    diob = a+0x0;;
.opstart 0x00094419; .opend;
	// alu    p = ertB+0x0;;
.opstart 0x00037419; .opend;
	// ram   *((int24 *) diob) = p_23_0;;
.opstart 0x1ffffbdf; .opend;

.line 198;
.def; .eb; .scl 100; .tag __CAM_AW613E_LOG_2_TRANS__AW613E_SCOPEBLOCK_16_; .stackUsage 0; .scratchpadUsage 0; .endef;
	// seq  goto LOG_2_TRANS__AW613E_END_IFELSE_8, flush;;
.opstart 0xf7d00007; .oplabel BAF_13_0_,StandardTest,__CAM_AW613E_LOG_2_TRANS__AW613E_END_IFELSE_8_,0;  .opend;
.def __CAM_AW613E_LOG_2_TRANS__AW613E_ELSE_IFELSE_8_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 200;
.def; .bb; .scl 100; .tag __CAM_AW613E_LOG_2_TRANS__AW613E_SCOPEBLOCK_18_; .endef;

.line 202;
	// ram   p_31_24 = error;; // *((channel int8 *) 0x0;
.opstart 0xcfeff980; .oplabel AID_6_0_,CAM,_CAM_AW613E_error_,0;  .opend;
	// alu    a = p_31_24+0x0;;
.opstart 0x00020419; .opend;
	// alu    a = a | 0x2, SampleFlags;;
.opstart 0x08090bc2; .opend;
	// alu    p_31_24 = a+0x0;;
.opstart 0x0009a419; .opend;
	// ram   error = p_31_24;; // *((channel int8 *) 0x0;
.opstart 0xcffff980; .oplabel AID_6_0_,CAM,_CAM_AW613E_error_,0;  .opend;

.line 203;
	// chan  set SvcdChan ChannelIntr;;
.opstart 0xffff3ef9; .opend;

.line 204;
.def; .eb; .scl 100; .tag __CAM_AW613E_LOG_2_TRANS__AW613E_SCOPEBLOCK_18_; .stackUsage 0; .scratchpadUsage 0; .endef;
.def __CAM_AW613E_LOG_2_TRANS__AW613E_END_IFELSE_8_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 205;
.def; .eb; .scl 100; .tag __CAM_AW613E_LOG_2_TRANS__AW613E_SCOPEBLOCK_14_; .stackUsage 0; .scratchpadUsage 0; .endef;
	// seq  goto LOG_2_TRANS__AW613E_END_IFELSE_6, flush;;
.opstart 0xf7d00007; .oplabel BAF_13_0_,StandardTest,__CAM_AW613E_LOG_2_TRANS__AW613E_END_IFELSE_6_,0;  .opend;
.def __CAM_AW613E_LOG_2_TRANS__AW613E_ELSE_IFELSE_6_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 207;
.def; .bb; .scl 100; .tag __CAM_AW613E_LOG_2_TRANS__AW613E_SCOPEBLOCK_19_; .endef;

.line 209;
	// ram   p_31_24 = error;; // *((channel int8 *) 0x0;
.opstart 0xcfeff980; .oplabel AID_6_0_,CAM,_CAM_AW613E_error_,0;  .opend;
	// alu    a = p_31_24+0x0;;
.opstart 0x00020419; .opend;
	// alu    a = a | 0x2, SampleFlags;;
.opstart 0x08090bc2; .opend;
	// alu    p_31_24 = a+0x0;;
.opstart 0x0009a419; .opend;
	// ram   error = p_31_24;; // *((channel int8 *) 0x0;
.opstart 0xcffff980; .oplabel AID_6_0_,CAM,_CAM_AW613E_error_,0;  .opend;

.line 210;
	// chan  set SvcdChan ChannelIntr;;
.opstart 0xffff3ef9; .opend;

.line 211;
.def; .eb; .scl 100; .tag __CAM_AW613E_LOG_2_TRANS__AW613E_SCOPEBLOCK_19_; .stackUsage 0; .scratchpadUsage 0; .endef;
.def __CAM_AW613E_LOG_2_TRANS__AW613E_END_IFELSE_6_; .val 0xffffffff; .scl 200; .type 0xe; .endef;

.line 212;
.def; .eb; .scl 100; .tag __CAM_AW613E_LOG_2_TRANS__AW613E_SCOPEBLOCK_13_; .stackUsage 0; .scratchpadUsage 0; .endef;
.def __CAM_AW613E_LOG_2_TRANS__AW613E_FUNC_END_; .val 0xffffffff; .scl 200; .type 0xe; .endef;
	// seq   end;;
.opstart 0x0fffffff; .opend;
.def; .ef; .scl 101; .tag _CAM_AW613E_LOG_2_TRANS_; .endef;
.breakable;

.file "..\..\src\etpuc_cam.c";
.defentry; .ettype standard; .etpin input; .etpuclass CAM; .ettable CAM; .etlabel _CAM_AW613E_RESET_; .index 0; .etpreload dont_care; .etmatch enabled; .line 221; .endentry;
.defentry; .ettype standard; .etpin input; .etpuclass CAM; .ettable CAM; .etlabel _CAM_AW613E_RESET_; .index 1; .etpreload dont_care; .etmatch enabled; .line 222; .endentry;
.defentry; .ettype standard; .etpin input; .etpuclass CAM; .ettable CAM; .etlabel _CAM_AW613E_RESET_; .index 2; .etpreload dont_care; .etmatch enabled; .line 223; .endentry;
.defentry; .ettype standard; .etpin input; .etpuclass CAM; .ettable CAM; .etlabel _CAM_AW613E_RESET_; .index 3; .etpreload dont_care; .etmatch enabled; .line 224; .endentry;
.defentry; .ettype standard; .etpin input; .etpuclass CAM; .ettable CAM; .etlabel _Error_handler_unexpected_thread; .index 4; .etpreload dont_care; .etmatch disabled; .line 249; .endentry;
.defentry; .ettype standard; .etpin input; .etpuclass CAM; .ettable CAM; .etlabel _Error_handler_unexpected_thread; .index 5; .etpreload dont_care; .etmatch disabled; .line 250; .endentry;
.defentry; .ettype standard; .etpin input; .etpuclass CAM; .ettable CAM; .etlabel _Error_handler_unexpected_thread; .index 6; .etpreload dont_care; .etmatch disabled; .line 251; .endentry;
.defentry; .ettype standard; .etpin input; .etpuclass CAM; .ettable CAM; .etlabel _Error_handler_unexpected_thread; .index 7; .etpreload dont_care; .etmatch disabled; .line 252; .endentry;
.defentry; .ettype standard; .etpin input; .etpuclass CAM; .ettable CAM; .etlabel _Error_handler_unexpected_thread; .index 8; .etpreload dont_care; .etmatch disabled; .line 253; .endentry;
.defentry; .ettype standard; .etpin input; .etpuclass CAM; .ettable CAM; .etlabel _CAM_AW613E_INIT_; .index 9; .etpreload dont_care; .etmatch disabled; .line 218; .endentry;
.defentry; .ettype standard; .etpin input; .etpuclass CAM; .ettable CAM; .etlabel _CAM_AW613E_RESET_; .index 10; .etpreload dont_care; .etmatch enabled; .line 225; .endentry;
.defentry; .ettype standard; .etpin input; .etpuclass CAM; .ettable CAM; .etlabel _CAM_AW613E_RESET_; .index 11; .etpreload dont_care; .etmatch enabled; .line 226; .endentry;
.defentry; .ettype standard; .etpin input; .etpuclass CAM; .ettable CAM; .etlabel _CAM_AW613E_LOG_1_TRANS_; .index 12; .etpreload dont_care; .etmatch enabled; .line 237; .endentry;
.defentry; .ettype standard; .etpin input; .etpuclass CAM; .ettable CAM; .etlabel _CAM_AW613E_LOG_1_TRANS_; .index 13; .etpreload dont_care; .etmatch enabled; .line 238; .endentry;
.defentry; .ettype standard; .etpin input; .etpuclass CAM; .ettable CAM; .etlabel _CAM_AW613E_LOG_1_TRANS_; .index 14; .etpreload dont_care; .etmatch enabled; .line 239; .endentry;
.defentry; .ettype standard; .etpin input; .etpuclass CAM; .ettable CAM; .etlabel _CAM_AW613E_LOG_1_TRANS_; .index 15; .etpreload dont_care; .etmatch enabled; .line 240; .endentry;
.defentry; .ettype standard; .etpin input; .etpuclass CAM; .ettable CAM; .etlabel _Error_handler_unexpected_thread; .index 16; .etpreload dont_care; .etmatch disabled; .line 254; .endentry;
.defentry; .ettype standard; .etpin input; .etpuclass CAM; .ettable CAM; .etlabel _Error_handler_unexpected_thread; .index 17; .etpreload dont_care; .etmatch disabled; .line 255; .endentry;
.defentry; .ettype standard; .etpin input; .etpuclass CAM; .ettable CAM; .etlabel _Error_handler_unexpected_thread; .index 18; .etpreload dont_care; .etmatch disabled; .line 256; .endentry;
.defentry; .ettype standard; .etpin input; .etpuclass CAM; .ettable CAM; .etlabel _Error_handler_unexpected_thread; .index 19; .etpreload dont_care; .etmatch disabled; .line 257; .endentry;
.defentry; .ettype standard; .etpin input; .etpuclass CAM; .ettable CAM; .etlabel _CAM_AW613E_LOG_2_TRANS_; .index 20; .etpreload dont_care; .etmatch enabled; .line 243; .endentry;
.defentry; .ettype standard; .etpin input; .etpuclass CAM; .ettable CAM; .etlabel _CAM_AW613E_LOG_2_TRANS_; .index 21; .etpreload dont_care; .etmatch enabled; .line 244; .endentry;
.defentry; .ettype standard; .etpin input; .etpuclass CAM; .ettable CAM; .etlabel _CAM_AW613E_LOG_2_TRANS_; .index 22; .etpreload dont_care; .etmatch enabled; .line 245; .endentry;
.defentry; .ettype standard; .etpin input; .etpuclass CAM; .ettable CAM; .etlabel _CAM_AW613E_LOG_2_TRANS_; .index 23; .etpreload dont_care; .etmatch enabled; .line 246; .endentry;
.defentry; .ettype standard; .etpin input; .etpuclass CAM; .ettable CAM; .etlabel _CAM_AW613E_RESET_; .index 24; .etpreload dont_care; .etmatch enabled; .line 227; .endentry;
.defentry; .ettype standard; .etpin input; .etpuclass CAM; .ettable CAM; .etlabel _CAM_AW613E_RESET_; .index 25; .etpreload dont_care; .etmatch enabled; .line 228; .endentry;
.defentry; .ettype standard; .etpin input; .etpuclass CAM; .ettable CAM; .etlabel _CAM_AW613E_RESET_; .index 26; .etpreload dont_care; .etmatch enabled; .line 229; .endentry;
.defentry; .ettype standard; .etpin input; .etpuclass CAM; .ettable CAM; .etlabel _CAM_AW613E_RESET_; .index 27; .etpreload dont_care; .etmatch enabled; .line 230; .endentry;
.defentry; .ettype standard; .etpin input; .etpuclass CAM; .ettable CAM; .etlabel _CAM_AW613E_RESET_; .index 28; .etpreload dont_care; .etmatch enabled; .line 231; .endentry;
.defentry; .ettype standard; .etpin input; .etpuclass CAM; .ettable CAM; .etlabel _CAM_AW613E_RESET_; .index 29; .etpreload dont_care; .etmatch enabled; .line 232; .endentry;
.defentry; .ettype standard; .etpin input; .etpuclass CAM; .ettable CAM; .etlabel _CAM_AW613E_RESET_; .index 30; .etpreload dont_care; .etmatch enabled; .line 233; .endentry;
.defentry; .ettype standard; .etpin input; .etpuclass CAM; .ettable CAM; .etlabel _CAM_AW613E_RESET_; .index 31; .etpreload dont_care; .etmatch enabled; .line 234; .endentry;

